{"version":3,"sources":["cacheHelper.service.js","cellTemplateProvider.service.js","Common.service.js","Debouncer.service.js","focusOnField.service.js","FormWidgetUtils.service.js","gridConfigProvider.service.js","Http.service.js","menuListItem.service.js","NoolsEngine.service.js","persistence.service.js","requestClicked.service.js","RuleEngine.service.js","scrollPosition.service.js","ScrollTo.service.js"],"names":["angular","cacheHelperServiceFunc","setColDef","_dataModel","colDef","getColDef","undefined","setFilterDef","filterDef","getFilterDef","setGroupDef","groupDef","getGroupDef","getDefaultSavedView","savedViews","sysDefaultFlag","defaultView","_","find","x","IsSystemDefault","isDefault","IsDefaultView","service","module","factory","$filter","$translate","smartDateFormatFilter","_getCellTemplate","config","templateType","type","field","attributes","rule","minmaxprecisionfilter","data","minimumPrecision","minmaxprecision","maxlength","displayformat","optionformat","filterkeys","join","model","format","options","map","datakey","dataKey","idKey","displayLabel","appendingString","appendedLabels","i","length","slice","defaultLabel","defaultTitle","defaultLabelCondition","enableCellEdit","readonly","serviceObj","getCellTemplate","directive","$rootScope","$timeout","restrict","link","scope","element","attrs","getServerDateFormat","value","serverDateInNumber","getServerDateInNumber","IS_UNEXPECTED_DATE_VALUE","toLowerCase","indexOf","a","replace","RegExp","split","b","eval","isNaN","Date","getTime","onDateChange","date","row","entity","col","$broadcast","template","filter","Common","input","outputDate","convertServerDateTimeToNormalDateTime","contains","getFullYear","getMonth","getDate","e","require","elem","ctrl","$parsers","push","this","IS_UNEXPECTED_DATE_INPUT","uniqueIDGenerator","d","uniqueID","c","r","Math","random","floor","toString","postDecimalNumbers","decimals","maxDecimals","flag","RegionalSettingEnable","m","pow","n","f","round","output","postDecimalOtp","currencySymbol","_decimals","decimalLength","tempValue","temp","$","minPrecessionValue","MinPrecessionValue","maxPrecessionValue","MaxPrecessionValue","parseInt","Number","isInteger","autoNumeric","mDec","aPad","newValue","val","error","console","log","show","Materialize","toast","message","duration","preDecimalNubmers","smartTableInstance","lineItems","pageSize","_setLineItems","tmpLineItems","_getLineItems","pageIndex","_setSmartTableInstance","instance","_getSmartTableInstance","_getAllLineItems","_getLineItemsCount","_getLineItemsPagesCount","ceil","externalPaginationThreshold","setLineItems","getLineItems","getAllLineItems","getLineItemsCount","getLineItemsPagesCount","setSmartTableInstance","getSmartTableInstance","functionTimeout","add","callback","cancel","isFunction","fields","attr","focus","addClass","_this","getColspanClass","colspan","convertAndGetValue","property","dataType","generateFunctionWithParams","result","mapEvents","arrEvents","str","tLen","tObj","listener","getParamsFromEvents","event","scopeString","params","trim","arrIndexesToBeDeleted","paramValue","isDefined","deleteLength","splice","isSection","functionName","convertAndGetAttributeMapping","attributeType","key","bindingType","objProperty","section","getAttributesMapping","textfieldTypes","arrSplitFunction","evalResult","attrList","eventCounter","removeEventListener","eventLen","eventName","eventId","on","objEvent","broadcast","broadcastEvLen","tData","watch","obj","prop","Object","defineProperty","isObject","window","get","set","newVal","equals","oldVal","enumerable","configurable","showPleaseWait","css","hidePleaseWait","cellTemplateProvider","formWidgetUtils","APPCONSTANTS","getDefaultGridConfigObject","displayName","groupingShowAggregationMenu","enableHiding","groupingShowGroupingMenu","enablePinning","getGridConfig","conf","cellClassFunction","cellEditableConditionFunction","finalObject","extend","isVisible","visible","isReadOnly","isFixed","pinnedLeft","pinnedRight","maxWidth","isGrouped","grouping","groupPriority","aggregation","treeAggregationType","displayKey","isMandatory","cellTemplate","editableCellTemplate","cellClass","cellEditableCondition","hasOwnProperty","enableFiltering","filterObject","placeholder","condition","searchTerm","cellValue","filterKeys","cellConditionResult","cellCondition","isDate","formattedDate","month","escape","toLocaleLowerCase","uiType","getSmartTableConfig","column","BankerevenRound","num","decimalPlaces","inputValue","unitPriceRounding","taxesRounding","shippingChargesRounding","otherChargesRounding","parseFloat","unitPrice","quantity","taxes","taxesandchargestotal","shippingCharges","otherCharges","splitType","id","notes","placeHolder","manufacturer","manufacturerPartNumber","ManufacturerModel","manufacturerName","debounce","isTaxExempt","userPreferences","DocumentTypeId","sortCondition","isAscending","sort","getMassagedGirdConfig","confArr","massagedConf","each","getMassagedSmartTableConfig","eavluateScopeBindedExpressions","$http","$q","defaults","headers","common","httpService","pendingRequests","isNetworkOnline","massageResultData","success","timeout","status","statusText","abortAll","isNetworkLost","forEach","pendingRequest","canceller","promise","resolve","abort","urlfordata","requestToAbort","url","requestArgs","directhttp","requestPromise","returnpromise","defer","abortable","requestTimeout","setTimeout","reqParams","method","toUpperCase","cache","Content-Type","UserExecutionContext","JSON","stringify","UserBasicDetails","RequestVerificationToken","merge","then","reject","errorData","clearTimeout","list","getcontent","parent","$this","keyCode","preventDefault","next","prev","trigger","children","execute","arrFields","arrErrors","headerOrGridConfig","uiConfig","dataModel","ruleType","rulesObj","rules","cloumnDefs","def","sections","rows","properties","flow","nools","compile","name","Message","getDefined","orderData","items","man","messageModel","ui","session","getSession","apply","errors","match","dispose","deleteFlow","persistenceServiceFunc","PLATFORMURLs","persistenceApiService","sectionsPersistenceService","nPlusOneService","masterPersistenceService","redirectToPreviousNode","redirectToWorkspace","customUrl","_nPlusOne","getUserData","docType","_userData","_api","storeLocation","DB","updateUserData","getModelData","newConfig","modelData","unbindModelDataWatcher","initChipsWatcher","documentType","_documentType","saveRecentDocument","saveWorkspaceRecentDocument","saveUserData","_sectionPersistence","_masterPersistenceService","setDocumentFields","parentKey","childKey","getDocumentFields","userData","api","sectionPersistence","nPlusOne","persistenceApiServiceFunc","$window","_getUserDataFromLocalStorage","localStorage","_getUserDataFromSessionStorage","sessionStorage","_getUserDataFromIndexDBStorage","indexedDB","_getUserDataFromDB","postData","contactCode","ContactCode","partnerCode","BuyerPartnerCode","ajax","URLs","AppURL","oloc","Persistence","EncryptedBPC","async","contentType","Access-Control-Allow-Origin","parse","err","_setUserDataInLocalStorage","_setUserDataInSessionStorage","_setUserDataInIndexDBStorage","_saveUserDataInDB","request","bpc","header","Pragma","events","toJson","response","_getUserData","_saveUserData","_getMasterUserDataFromDB","Param","returnValue","cultureCode","UserCountryCultureInfo","keys","_saveMasterUserDataToDB","_StoreLocation","LocalStorage","SessionStorage","IndexDB","getMasterUserDataFromDB","saveMasterUserDataToDB","sectionsPersistenceServiceFunc","_getSections","jsonObj","_setState","_state","_setUserData","getSectionsPersistence","formConfig","usersSections","sIndex","sectionIndex","sortBy","setState","setUserData","nPlusOneServiceFunc","$state","_redirectToPreviousNode","goHistoryMinus1","current","states","location","href","history","go","_historyIsEmpty","appContextUrl","workspace2_Enabled","recDocs","docCode","search","prevDoc","recentDocuments","urlFormat","buildUrl","pathname","recentDocsLength","docDetails","docUrl","getDocDataOnChip","docAttrs","docConditions","initialCondition","dd","rfxOloc","invoiceOloc","orderOloc","reqOloc","irOloc","formOloc","scorcardOloc","partnerOloc","contractOloc","projectOloc","docDetailsTemplate","listOfDocData","ModelAttrList","enableSave","currentDoc","newDocFlag","selectedSectionId","saveRecentDoc","docName","locationStore","recentDocsHistoryLength","recentDocs","encodedString","encode","ddVal","shift","documentIsExist","previousDoc","compareDocs","getbyte64","s","idx","ALPHA","charAt","decode","pads","b10","imax","PADCHAR","String","fromCharCode","getbyte","charCodeAt","arguments","encodedValue","PadsLength","substring","dirtyCheck","saveSelectedSection","SectionId","lastIndex","recentDoc","getSelectedSection","historyIsEmpty","masterPersistenceServiceFunc","masterData","documentFields","selectedValues","setSelectedValue","fieldId","masterDataConfig","masterData_config","filter_Key","filterKey","isEmpty","getFormattedData","parentSplit","j","childSplit","k","saveMasterDataForRootField","isExisitingObj","childId","parentId","parentValue","searchKey","getMasterDataForRootField","getAutoSuggestList","requestClickedFunc","isRequestClicked","getProperty","setProperty","isNumber","isUndefined","isString","isUndefinedOrEmptyOrNull","isEmptyOrNull","isUndefinedOrNull","appendErrorString","resultantString","isArray","index","isToBeTranslated","instant","text","changeDateFormatForNools","colDefs","virtualDatamodel","fieldVal","fieldzeroval","dateVar","convertDate","res","datestring","newdate","utils","setRules","dataConfig","cumulativeRules","isNoolsEnabled","setDocumentRules","documentRules","setUtils","executeNools","tmpRules","tmpRule","tmpRuleResult","failedRules","invalidArray","disableArray","totalErrosArray","rowIndex","copy","columnIndex","fieldName","errorFieldDisplayName","rowColIndex","state","ItemChargesForHeader","columnArr","isValid","Header","headerFlow","currentScope","tmpPropertyValue","isHidden","ngModelOptions","getterSetter","isValidated","l","_section","_uiElement","validate","isContentLoaded","isActive","executeOnStaticForm","isEnabledScroll","scrollValue","setEnableScroll","enableScroll","getEnableScroll","pos","currentUrl","scroll","foundItem","foundItemIndex","performScroll","staticValue","aSpeed","onComplete","animate","scrollTop","scrollWitgetsection","scrollToconfig","previous","scrollTo","sectionId","$cont","sectionKey","hasClass","displacementItem","offset","top","scrollingTopMargin","setScrollingTopMargin","_scrollingTopMargin","perform","source","destination","closest"],"mappings":"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","file":"services.min.js","sourcesContent":["(function (angular) {\r\n    'use strict';\r\n     angular.module('SMART2').service('cacheHelperService', [cacheHelperServiceFunc]);\r\n\r\n    function cacheHelperServiceFunc() {\r\n\r\n        var colDef;\r\n        var filterDef;\r\n        var groupDef;\r\n\r\n        function setColDef(_dataModel) {\r\n            colDef = _dataModel;\r\n        }\r\n\r\n        function getColDef() {\r\n            if (typeof colDef != undefined) {\r\n                return colDef;\r\n            }\r\n        }\r\n\r\n        function setFilterDef(_dataModel) {\r\n            filterDef = _dataModel;\r\n        }\r\n\r\n        function getFilterDef() {\r\n            if (typeof filterDef != undefined) {\r\n                return filterDef;\r\n            }\r\n        }\r\n\r\n        function setGroupDef(_dataModel) {\r\n            groupDef = _dataModel;\r\n        }\r\n\r\n        function getGroupDef() {\r\n            if (typeof groupDef != undefined) {\r\n                return groupDef;\r\n            }\r\n        }\r\n\r\n        // It takes savedViews as 1st param and the 2nd parameter represents whether we want the systemDefaultView view flag as true or false.\r\n        function getDefaultSavedView(savedViews, sysDefaultFlag) {\r\n            var defaultView;\r\n            if (sysDefaultFlag) {\r\n                defaultView = _.find(savedViews, function(x) {\r\n                    return x.IsSystemDefault == true;\r\n                });\r\n            } else {\r\n                defaultView = _.find(savedViews, function(x) {\r\n                    return (x.IsSystemDefault == false && ((x.isDefault == true) || (x.IsDefaultView == true)))\r\n                });\r\n            }\r\n            return defaultView;\r\n        }\r\n\r\n        var service = {\r\n            setColDef: setColDef,\r\n            getColDef: getColDef,\r\n            setFilterDef: setFilterDef,\r\n            getFilterDef: getFilterDef,\r\n            setGroupDef: setGroupDef,\r\n            getGroupDef: getGroupDef,\r\n            getDefaultSavedView: getDefaultSavedView\r\n        };\r\n\r\n        return service;\r\n    };\r\n})(angular);","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').factory('cellTemplateProvider', ['$filter', '$translate', 'smartDateFormatFilter', function ($filter, $translate, smartDateFormatFilter) {\r\n        function applyLocalizationFilter(text) {\r\n            return $filter('translate')(text);\r\n        };\r\n\r\n        function _getCellTemplate(config, templateType) {\r\n            if (config.type == 'calculated') {\r\n                if (config.field && config.field != 'IsCloseForReceiving' && config.field != 'IsCloseForInvoicing') {\r\n                    return '<div ng-class=\"{\\'text-strikethrough\\': row.entity.ItemStatus.id===121}\"><div ng-if=\"!row.groupHeader\" >{{' + config.attributes.rule + '|  minPrecisionHandler:' + config.attributes.minmaxprecisionfilter + '}}</div></div>';\r\n                }\r\n                else {\r\n                    return '<div ng-class=\"{\\'text-strikethrough\\': row.entity.ItemStatus.id===121}\"><div ng-if=\"!row.groupHeader\" >{{' + config.attributes.rule + '}}</div></div>';\r\n                }\r\n            }\r\n            else if (config.type == 'editable') {\r\n\r\n                if (config.attributes && config.attributes.type && config.attributes.type == \"number\") {\r\n                    if (templateType == \"cellTemplate\") {\r\n                        return '<div ng-class=\"{\\'text-strikethrough\\': row.entity.ItemStatus.id===121, \\'ui-grid-cell-contents right-align paddingRight5\\': true}\" ng-style=\"{color: COL_FIELD === \\'\\' || COL_FIELD == undefined || COL_FIELD == null ? \\'transparent\\' : \\'\\'}\" title=\"{{COL_FIELD}}\">{{COL_FIELD === \\'\\' || COL_FIELD == undefined || COL_FIELD == null ? \\'-\\' : row.entity.' + (config.data != undefined ? config.data : config.field) + '}}</div>'\r\n                    }\r\n                    else if (templateType == \"editableCellTemplate\") {\r\n                        //var min = \"\";\r\n                        //min = config.attributes.minValue ? 'min=\"' + config.attributes.minValue + '\"' : \"\";\r\n                        var minimumPrecision = \"\";\r\n                        if (config.attributes.minmaxprecision != undefined)\r\n                            minimumPrecision = 'minmaxprecision=\"' + config.attributes.minmaxprecision + '\"';\r\n                        var maxlength = \"\";\r\n                        if (config.attributes.maxlength != undefined)\r\n                            maxlength = 'maxlength=\"' + config.attributes.maxlength + '\"';\r\n\r\n                        return '<div title=\"{{COL_FIELD }}\"><div><smart-textfield  class=\"ui-grid-cell-contents\" type=\"number\" focus=\"true\" ' + minimumPrecision + ' ng-model=\"row.entity.' + config.field + '\" ' + maxlength + ' on-key-up=\"grid.appScope.textOrNumberKeyUp($event,col,row)\" zero-case-handler uigrid-compatible></smart-textfield></div></div>';\r\n                    }\r\n                }\r\n                else if (config.attributes && config.attributes.type && config.attributes.type == \"autocomplete\") {\r\n                    if (templateType == \"cellTemplate\") {\r\n                        return '<div ng-class=\"{\\'text-strikethrough\\': row.entity.ItemStatus.id===121, \\'padding0\\': true}\" ng-style=\"{color: COL_FIELD === \\'\\' || COL_FIELD == undefined || COL_FIELD == null ? \\'transparent\\' : \\'\\'}\" title=\"{{COL_FIELD}}\">{{COL_FIELD === \\'\\' || COL_FIELD == undefined || COL_FIELD == null ? \\'-\\' : COL_FIELD}}</div>';\r\n                    }\r\n                    else if (templateType == \"editableCellTemplate\") {\r\n                        return '<div class=\"padding0\" title=\"{{COL_FIELD}}\"><div><smart-textfield class=\"ui-grid-cell-contents\" type=\"autocomplete\" width=\"230px\" ' +\r\n                    ' displayformat=\"' + config.attributes.displayformat + '\" optionformat=\"' + config.attributes.optionformat + '\" filterkeys=\"' + (\"['\" + config.attributes.filterkeys.join(\"','\") + \"']\") +\r\n                    '\" ng-model=\"row.entity.' + config.attributes.model + '\" options=\"grid.appScope.autoSuggestOptions\"  on-change=\"grid.appScope.autoSuggestOnChange($event,col,row)\" on-select=\"grid.appScope.autoSuggestOnSelect($event,row.entity.' + config.attributes.model + ',row,col)\" uigrid-compatible></smart-textfield></div></div>';\r\n                    }\r\n                }\r\n                else if (config.attributes && config.attributes.type && config.attributes.type == \"date\") {\r\n                    if (templateType == \"cellTemplate\") {\r\n                        return \"<div  ng-class='{\\\"text-strikethrough\\\": row.entity.ItemStatus.id===121}' ng-style='{color: COL_FIELD === \\\"\\\" || COL_FIELD == undefined || COL_FIELD == null ? \\\"transparent\\\" : \\\"\\\", height: \\\"100%\\\"}'>{{COL_FIELD === \\'\\' || COL_FIELD == undefined || COL_FIELD == null ? \\'-\\' : (COL_FIELD | smartDateFormat:'\" + config.attributes.format + \"')}}</div>\";\r\n                    } else if (templateType == \"editableCellTemplate\") {\r\n                        return '<div grid-date-template-provider></div>'\r\n                    }\r\n                }\r\n                var maxlength = \"\";\r\n                if (config.attributes.maxlength != undefined)\r\n                    maxlength = 'maxlength=\"' + config.attributes.maxlength + '\"';\r\n                if (templateType == \"cellTemplate\") {\r\n                    return '<div ng-class=\"{\\'text-strikethrough\\': row.entity.ItemStatus.id===121, \\'padding0\\': true}\" ng-style=\"{color: COL_FIELD === \\'\\' || COL_FIELD == undefined || COL_FIELD == null ? \\'transparent\\' : \\'\\'}\" title=\"{{COL_FIELD | translate}}\">{{COL_FIELD === \\'\\' || COL_FIELD == undefined || COL_FIELD == null ? \\'-\\' : (row.entity.' + (config.data != undefined ? config.data : config.field) + ' | translate)}}</div>';\r\n                } else if (templateType == \"editableCellTemplate\") {\r\n                    return '<div title=\"{{COL_FIELD}}\"><div><smart-textfield class=\"ui-grid-cell-contents\" type=\"text\"' +\r\n                                        ' ng-model=\"row.entity.' + config.field + '\" ' + maxlength + ' on-key-up=\"grid.appScope.textOrNumberKeyUp($event,col,row)\" uigrid-compatible></smart-textfield></div></div>';\r\n                }\r\n\r\n            } else if (config.type == 'dropdown') {\r\n                config.attributes.options.map(function (x) { x[config.attributes.datakey] = $filter('translate')(x[config.attributes.datakey]) });\r\n                if (templateType == \"cellTemplate\") {\r\n                    return \"<div ng-class='{\\\"text-strikethrough\\\": row.entity.ItemStatus.id===121}'><div ng-if='grid.appScope.isObject(COL_FIELD)' style='height:100%;' uigrid-compatible>{{COL_FIELD.\" + config.attributes.dataKey + \" | translate}}</div><div ng-if='!grid.appScope.isObject(COL_FIELD)' IDK={{\" + config.attributes.idKey + \"}} style='height:100%;' uigrid-compatible>{{COL_FIELD | translate}}</div></div>\";\r\n                }\r\n                else if (templateType == \"editableCellTemplate\") {\r\n                    return \"<div class='ui-grid-cell-contents'><form name='inputForm'><select model = {{row.entity.\" + config.attributes.model + \"}} ui-grid-edit-dropdown ng-model='row.entity.\" + config.attributes.model + \"' ng-change='grid.appScope.dropDownOnChange(row.entity, col , row.entity.\" + config.field + \")' ng-options='option.\" + config.attributes.dataKey + \" for option in grid.appScope.dropDownOptions track by option.\" + config.attributes.idKey + \"' uigrid-compatible></select></form></div>\";\r\n                }\r\n            } else if (config.type == 'checkbox') {\r\n                if (templateType == \"cellTemplate\") {\r\n                    return '<div title=\"{{COL_FIELD}}\"><div><smart-checkbox fill=\"true\" class=\"ui-grid-cell-contents\" ng-model=\"row.entity.' + config.attributes.model +\r\n                        '\" on-change=\"grid.appScope.checkBoxOnChange(row.entity, col , row.entity.' + config.field + ')\"  uigrid-compatible></smart-checkbox></div></div>';\r\n                }\r\n            } else if (config.type == 'popup') {\r\n                var displayLabel = \"\";\r\n                var appendingString = \"\\+\\\"-\\\"\\+\";\r\n                if (typeof config.appendedLabels != \"undefined\") {\r\n                    for (var i = 0; i < config.appendedLabels.length; i++) {\r\n                        displayLabel = displayLabel + 'row.entity.' + config.appendedLabels[i] + appendingString;\r\n                    }\r\n                    displayLabel = \"(\" + displayLabel.slice(0, -(appendingString.length)) + \")\";\r\n\r\n                }\r\n                else {\r\n                    displayLabel = (templateType == \"cellTemplate\") ? (\"row.entity.\" + config.field) : 'COL_FIELD';\r\n                }\r\n\r\n                var defaultLabel = \"\\\"\" + config.attributes.defaultTitle + \"\\\"\";\r\n                if (typeof config.attributes.defaultLabelCondition != \"undefined\") {\r\n                    var defaultLabel = config.attributes.defaultLabelCondition;\r\n                }\r\n\r\n\r\n                if (templateType == \"cellTemplate\") {\r\n                    if (config.attributes.type === 'categoryPopup')\r\n                        return '<div title = \"{{COL_FIELD}}\" class=\"ui-grid-cell-contents padding0\"><a ng-if=\"!row.groupHeader\" ng-class=\"{\\'waves-effect waves-light btn-flat\\': true, \\'disabled\\': row.entity.source.id!==1,\\'text-strikethrough\\': row.entity.ItemStatus.id===121}\">{{(COL_FIELD != undefined && (COL_FIELD != \"\") && (COL_FIELD != \"1\")) ?' + displayLabel + ' : ' + defaultLabel + '}}</a></div>';\r\n                    else\r\n                        return '<div title = \"{{COL_FIELD}}\" class=\"ui-grid-cell-contents padding0\"><a ng-if=\"!row.groupHeader\" ng-class=\"{\\'waves-effect waves-light btn-flat\\': true, \\'disabled\\': ' + !config.enableCellEdit + ',\\'text-strikethrough\\': row.entity.ItemStatus.id===121}\">{{(COL_FIELD != undefined && (COL_FIELD != \"\") && (COL_FIELD != \"1\")) ?' + displayLabel + ' : ' + defaultLabel + '}}</a></div>';\r\n\r\n\r\n                }\r\n                else if (templateType == \"editableCellTemplate\") {\r\n                    return '<div title=\"{{COL_FIELD}}\"><smart-button flat=\"true\"  config=\\'{\"title\": (row.entity.' + config.field + ' != undefined && row.entity.' + config.field + ' != \"1\" && row.entity.' + config.field + ' != \"\")?' + displayLabel + ' : ' + defaultLabel + ' }\\' on-click=\"grid.appScope.popUpButtonClickCallback(row,col)\" uigrid-compatible></smart-button></div>';\r\n                }\r\n            } else if (config.type == 'subsection' && config.data == 'notes') {\r\n                if (config.data && config.attributes && config.attributes.readonly !== undefined) {\r\n                    return '<div><smart-button flat=\"true\" disable=\"grid.appScope.IsCellReadOnly(row.entity' + ',\\'' + config.data + '\\',' + config.attributes.readonly + ')\" config=\\'{\"title\":grid.appScope.getCommentText(row.entity.notes)}\\' callback-params=\"row.entity\"} callback=\"grid.appScope.showCommentsPopupCallback\"  uigrid-compatible></smart-button><div>';\r\n                }\r\n            } else if (config.type == 'subsection' && config.data == 'manufacturer') {\r\n                if (config.data && config.attributes && config.attributes.readonly !== undefined) {\r\n                    return '<div title=\"{{COL_FIELD}}\"><smart-button flat=\"true\" disable=\"grid.appScope.IsCellReadOnly(row.entity' + ',\\'' + config.data + '\\',' + config.attributes.readonly + ')\" config=\\'{\"title\":grid.appScope.setManufacturerDisplayName(row.entity)}\\' callback-params=\"row.entity\" callback=\"grid.appScope.showManufacturerPopupCallback\"  uigrid-compatible></smart-button><div>';\r\n                }\r\n            } else if (config.data == 'splitType') {\r\n                if (config.data && config.attributes && config.attributes.readonly !== undefined) {\r\n                    return '<div title=\"{{COL_FIELD}}\"><smart-button flat=\"true\" disable=\"grid.appScope.IsCellReadOnly(row.entity' + ',\\'' + config.data + '\\',' + config.attributes.readonly + ')\"  config=\\'{\"title\":grid.appScope.splitType(row.entity.splitType)}\\'  callback-params=\"row.entity\"} callback=\"grid.appScope.showSplitsPopup\"  uigrid-compatible></smart-button><div>';\r\n                } else {\r\n                    return '<div title=\"{{COL_FIELD}}\"><smart-button flat=\"true\" config=\\'{\"title\":grid.appScope.splitType(row.entity.splitType)}\\'  callback-params=\"row.entity\"} callback=\"grid.appScope.showSplitsPopup\"  uigrid-compatible></smart-button><div>';\r\n                }\r\n            } else if (config.data == 'splitValue') {\r\n                //return '<div title=\"{{COL_FIELD}}\" class=\"ui-grid-cell-contents\">{{grid.appScope.getSplitValue(row.entity)}}</div>';\r\n                return '<div title=\"{{COL_FIELD | minPrecisionHandler: ' + config.attributes.minmaxprecisionfilter + '}}\" class=\"ui-grid-cell-contents\">{{grid.appScope.getSplitValue(row.entity) | minPrecisionHandler: ' + config.attributes.minmaxprecisionfilter + '}}</div>';\r\n            } else if (config.data == 'taxes') {\r\n                if (config.data && config.attributes && config.attributes.readonly !== undefined) {\r\n                    return '<div title=\"{{COL_FIELD}}\"><smart-button flat=\"true\" disable=\"grid.appScope.IsCellReadOnly(row.entity' + ',\\'' + config.data + '\\',' + config.attributes.readonly + ')\" config=\\'{\"title\":grid.appScope.showExempted(row.entity)}\\' callback-params=\"row.entity\"} callback=\"grid.appScope.openTaxPopup\"  uigrid-compatible></smart-button></div>';\r\n                }\r\n            } else if (config.data == 'total') {\r\n                return '<div title=\"{{COL_FIELD | minPrecisionHandler:' + config.attributes.minmaxprecisionfilter + '}}\" class=\"ui-grid-cell-contents\">{{grid.appScope.getTotal(row.entity) | minPrecisionHandler:' + config.attributes.minmaxprecisionfilter + '}}</div>';\r\n            }\r\n        }\r\n\r\n        var serviceObj = {\r\n            getCellTemplate: _getCellTemplate\r\n        };\r\n\r\n        return serviceObj;\r\n    }]);\r\n\r\n    angular.module('SMART2').directive('gridDateTemplateProvider', ['$rootScope', '$timeout', '$filter', function ($rootScope, $timeout, $filter) {\r\n        return {\r\n            restrict: \"A\",\r\n            link: function (scope, element, attrs) {\r\n                scope.onDateChange = function (date) {\r\n                    if (date != '') {\r\n                        scope.row.entity[scope.col.colDef.field] = getServerDateFormat(date);\r\n                        $rootScope.$broadcast(\"closedPopup\");\r\n                    }\r\n                }\r\n                function getServerDateFormat(value) {\r\n                    if (value) { } else {\r\n                        //current date or 0\r\n                        value = 0;\r\n                    }\r\n                    var serverDateInNumber = getServerDateInNumber(value);\r\n                    if (serverDateInNumber) {\r\n                        return \"\\/Date(\" + serverDateInNumber + \")\\/\";\r\n                    } else {\r\n                        return serverDateInNumber;\r\n                    }\r\n                };\r\n\r\n                function getServerDateInNumber(value) {\r\n                    //CONVERT DATE FROM ALMOST ANY VALID DATE FORMAT TO \"/Date(1455883450840+0000)/\" form\r\n                    var IS_UNEXPECTED_DATE_VALUE = false;\r\n                    if (value) {\r\n                        if ((typeof value).toLowerCase() === \"string\") {\r\n                            if (value.indexOf(\"Date\") > -1) {\r\n                                var a = (value + '').replace(new RegExp(\"/\", \"ig\"), '');\r\n                                a = a.split('+');\r\n                                var b = eval('new ' + a[0] + (a.length > 1 ? ')' : ''));\r\n                            } else {\r\n                                IS_UNEXPECTED_DATE_VALUE = true;\r\n                            }\r\n                        } else {\r\n                            IS_UNEXPECTED_DATE_VALUE = true;\r\n                        }\r\n                        if (IS_UNEXPECTED_DATE_VALUE) {\r\n                            if (isNaN(new Date(value))) {\r\n                                return new Date(0).getTime();\r\n                            } else {\r\n                                var b = new Date(value);\r\n                            }\r\n                        }\r\n                        return b.getTime();\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                };\r\n            },\r\n            template: '<div style=\"width:100%;height:100%\" ><smart-textfield focus=\"\" set-from-grid=true on-date-change=\"onDateChange($date)\" type=\"date\" ng-model=\"row.entity[col.colDef.field]\" format=\"{{col.colDef.attributes.format}}\" uigrid-compatible></smart-textfield></div>'\r\n        };\r\n    }]);\r\n\r\n    angular.module('SMART2').filter('smartDateFormat', ['$filter', 'Common', function ($filter, Common) {\r\n        return function (input, format) {\r\n            var outputDate;\r\n            try {\r\n                if (input) {\r\n                    var b = Common.convertServerDateTimeToNormalDateTime(input);\r\n                    if (!_.contains(format.split(' '), 'hh:mm')) {\r\n                        b = new Date(b.getFullYear(), b.getMonth(), b.getDate());\r\n                    }\r\n                    outputDate = $filter('date')(b, format); //, timezone)\r\n                } else {\r\n                    outputDate = \"\";\r\n                }\r\n            }\r\n            catch (e) {\r\n                outputDate = input;\r\n            }\r\n            return outputDate;\r\n        };\r\n    }]);\r\n\r\n    angular.module('SMART2').directive('zeroCaseHandler', [function zeroCaseHandler() {\r\n        return {\r\n            require: 'ngModel',\r\n            link: function (scope, elem, attrs, ctrl) {\r\n                ctrl.$parsers.push(function (value) {\r\n                    if (isNaN(value)) {\r\n                        return 0;\r\n                    }\r\n                    return value;\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\r\n\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').service('Common', [function () {\r\n        this.convertServerDateTimeToNormalDateTime = function (input) {\r\n            var IS_UNEXPECTED_DATE_INPUT = false;\r\n            if ((typeof input).toLowerCase() === \"string\") {\r\n                if (input.indexOf(\"Date\") > -1) {\r\n                    var a = (input + '').replace(new RegExp(\"/\", \"ig\"), '');\r\n                    a = a.split('+');\r\n                    var b = eval('new ' + a[0] + (a.length > 1 ? ')' : ''));\r\n                } else {\r\n                    IS_UNEXPECTED_DATE_INPUT = true;\r\n                }\r\n            } else {\r\n                IS_UNEXPECTED_DATE_INPUT = true;\r\n            }\r\n            if (IS_UNEXPECTED_DATE_INPUT) {\r\n                if (isNaN(new Date(input))) {\r\n                    return input;\r\n                } else {\r\n                    var b = new Date(input);\r\n                }\r\n            }\r\n            return b;\r\n        };\r\n\r\n        this.uniqueIDGenerator = function () {\r\n            var d = new Date().getTime();\r\n            var uniqueID = 'xxx2xxxpxxxoxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d / 16);\r\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return uniqueID;\r\n        };\r\n\r\n    }]);\r\n\r\n    angular.module('SMART2').filter('minPrecisionHandler', ['$filter', function ($filter) {\r\n        var postDecimalNumbers = 0;\r\n        return function (input, decimals, maxDecimals, flag) {\r\n            if (typeof RegionalSettingEnable !=\"undefined\" && RegionalSettingEnable) {\r\n                var currencySymbol = '';\r\n\r\n                if (!isNaN(input)) {\r\n                    var value = input;\r\n                    try {\r\n                        var temp = $(\"<input>\");\r\n                        var _decimals;\r\n                        var decimalLength;\r\n                        var tempValue;\r\n\r\n                        var minPrecessionValue = decimals != undefined ? decimals : (MinPrecessionValue ? MinPrecessionValue : 2);\r\n\r\n                        var maxPrecessionValue = maxDecimals != undefined ? maxDecimals : (MaxPrecessionValue ? MaxPrecessionValue : 4);\r\n\r\n                        minPrecessionValue = parseInt(minPrecessionValue);\r\n\r\n                        maxPrecessionValue = parseInt(maxPrecessionValue);\r\n\r\n                        if (minPrecessionValue > maxPrecessionValue) {\r\n                            maxPrecessionValue = minPrecessionValue;\r\n                        }                        \r\n                        //tempValue = Math.round(value * Math.pow(10, maxPrecessionValue)) / Math.pow(10, maxPrecessionValue);\r\n\r\n                        var d = maxPrecessionValue || 0;\r\n                        var m = Math.pow(10, d);\r\n                        var n = +(d ? value * m : value); // Avoid rounding errors\r\n                        var i = Math.floor(n), f = n - i;\r\n                        var r = (f == 0.5) ? ((i % 2 == 0) ? i : i + 1) : Math.round(n);\r\n                        tempValue = d ? r / m : r;\r\n\r\n                        if (Number.isInteger(tempValue)) {\r\n                            decimalLength = minPrecessionValue;\r\n                        }\r\n                        else if (Number.isNaN(tempValue)) {\r\n                            throw \"Value cannot change to number.\"\r\n                        }\r\n                        else {\r\n                            decimalLength = tempValue.toString().split('.')[1].length;\r\n                        }\r\n\r\n                        if (decimalLength <= minPrecessionValue) {\r\n                            _decimals = minPrecessionValue\r\n                        }\r\n                        else if (decimalLength >= maxPrecessionValue) {\r\n                            _decimals = maxPrecessionValue;\r\n                        }\r\n                        else {\r\n                            _decimals = decimalLength;\r\n                        }\r\n\r\n                        temp.autoNumeric('init', {\r\n                            mDec: _decimals,\r\n                            aPad: true\r\n                        });\r\n\r\n                        temp.autoNumeric('set', tempValue);\r\n\r\n                        var newValue = temp.val();\r\n\r\n                        return currencySymbol + newValue;\r\n                    }\r\n                    catch (error) {\r\n                        console.log(error);\r\n\r\n                        console.log(\"error happend at numberformat filter. value : (\" + value + \") minPrecessionValue : \" + minPrecessionValue + \" maxPrecessionValue : \" + maxPrecessionValue);\r\n\r\n                        return currencySymbol + value;\r\n                    }\r\n                }\r\n                else {\r\n                    return currencySymbol + input;\r\n                }\r\n            } else {\r\n                if (input != undefined) {\r\n                    if (input == 0)\r\n                        return $filter('number')(0, decimals);\r\n                    if (input != 0) {\r\n                        postDecimalNumbers = ((input + \"\").split(\".\")[1] != undefined) ? (input + \"\").split(\".\")[1].length : 0;\r\n                        if (postDecimalNumbers > maxDecimals) {\r\n                            var d = maxDecimals || 0;\r\n                            var m = Math.pow(10, d);\r\n                            var n = +(d ? input * m : input); // Avoid rounding errors\r\n                            var i = Math.floor(n), f = n - i;\r\n                            var r = (f == 0.5) ? ((i % 2 == 0) ? i : i + 1) : Math.round(n);\r\n                            var output = d ? r / m : r;                          \r\n                            var postDecimalOtp = ((output + \"\").split(\".\")[1] != undefined) ? (output + \"\").split(\".\")[1].length : 0;\r\n                            if (postDecimalOtp < decimals)\r\n                                return $filter('number')(output, decimals);\r\n                            return $filter('addCommasToNumbers')(output);\r\n                        } else if (postDecimalNumbers > decimals && postDecimalNumbers < maxDecimals) {\r\n                            return $filter('addCommasToNumbers')(input);\r\n                        }\r\n                        else if (postDecimalNumbers <= decimals)\r\n                            return $filter('number')(input, decimals);\r\n                    }\r\n                    if (flag && flag == true && input != 0)\r\n                        return '';\r\n                    else\r\n                        return input;\r\n                }\r\n                if (flag && flag == true)\r\n                    return '';\r\n                else\r\n                    return 0;\r\n            }\r\n        }\r\n    }]);\r\n    angular.module('SMART2').service('SmartToast', [function () {\r\n        this.show = function (config) {\r\n            Materialize.toast(config.message, config.duration ? config.duration : 500);\r\n        };\r\n    }]);\r\n\r\n    angular.module('SMART2').filter('addCommasToNumbers', ['$filter', function ($filter) {\r\n        return function (input) {\r\n            var postDecimalNumbers = ((input + \"\").split(\".\")[1] != undefined) ? (input + \"\").split(\".\")[1] : 0;\r\n            var preDecimalNubmers =  ((input + \"\").split(\".\")[0] != undefined) ? (input + \"\").split(\".\")[0] : 0;\r\n            preDecimalNubmers = $filter('number')(preDecimalNubmers);\r\n            return  preDecimalNubmers + \".\" +  postDecimalNumbers;\r\n\r\n        }\r\n    }]);\r\n\r\n\r\n    angular.module('SMART2').service('smartPaginate', [function () {\r\n        var lineItems=[];\r\n        var pageSize = 10;\r\n        var smartTableInstance;\r\n\r\n        var _setLineItems = function (tmpLineItems) {\r\n            lineItems = tmpLineItems;\r\n        };\r\n\r\n        var _getLineItems = function (pageIndex, pageSize) {\r\n            return lineItems.slice(pageIndex, pageSize);\r\n        };\r\n\r\n        var _setSmartTableInstance = function (instance) {\r\n            smartTableInstance = instance;\r\n        };\r\n\r\n        var _getSmartTableInstance = function () {\r\n            return smartTableInstance;\r\n        };\r\n\r\n        var _getAllLineItems = function () {\r\n            return lineItems;\r\n        };\r\n\r\n        var _getLineItemsCount = function () {\r\n            return lineItems.length;\r\n        };\r\n\r\n        var _getLineItemsPagesCount = function () {\r\n            return Math.ceil(lineItems.length / pageSize) - 1;\r\n        };\r\n\r\n        return {\r\n            externalPaginationThreshold: 300,\r\n            setLineItems: _setLineItems,\r\n            getLineItems: _getLineItems,\r\n            getAllLineItems: _getAllLineItems,\r\n            getLineItemsCount: _getLineItemsCount,\r\n            getLineItemsPagesCount: _getLineItemsPagesCount,\r\n            setSmartTableInstance: _setSmartTableInstance,\r\n            getSmartTableInstance: _getSmartTableInstance\r\n\r\n\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').service('debouncer', ['$timeout', function ($timeout) {\r\n        var functionTimeout;\r\n\r\n        this.add = function (callback, duration) {\r\n            if (functionTimeout) {\r\n                $timeout.cancel(functionTimeout);\r\n            }\r\n            functionTimeout = $timeout(function () {\r\n                angular.isFunction(callback) && callback();\r\n            }, duration ? duration : 1000);\r\n        };\r\n\r\n        this.cancel = function () {\r\n            $timeout.cancel(functionTimeout);\r\n            functionTimeout = null;\r\n        };\r\n    }]);\r\n})();","(function () {\r\n    'use strict';\r\n    angular.module('SMART2').service('$focusOnField', [function () {\r\n        return function (fields) {\r\n            if (fields) {\r\n                var field = $(fields);\r\n            if (field.attr('type') == \"checkbox\" || field.attr('type') == \"radio\") {\r\n                field.focus().addClass('tabbed');\r\n            } else {\r\n                field.focus()\r\n            }\r\n            }\r\n        };\r\n}])\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').service('formWidgetUtils', [function () {\r\n        var _this = this;\r\n\r\n        /*\r\n         *  Get colspan class according to the number passed\r\n         */\r\n        this.getColspanClass = function (colspan) {\r\n            switch (colspan) {\r\n                case 1:\r\n                    return 'col s12 m6 l4 xl3 xxl2';\r\n                    break;\r\n                case 2:\r\n                    return 'col s12 m12 l8 xl6 xxl4';\r\n                    break;\r\n                case 3:\r\n                    return 'col s12 m12 l12 xl9 xxl6';\r\n                    break;\r\n                case 4:\r\n                    return 'col s12 m12 l12 xl12 xxl8';\r\n                    break;\r\n                case 5:\r\n                    return 'col s12 m12 l12 xl12 xxl10';\r\n                    break;\r\n                case 6:\r\n                    return 'col s12 m12 l12 xl12 xxl12';\r\n                    break;\r\n                default:\r\n                    return 'col s12 m6 l4 xl3 xxl2';\r\n                    break;\r\n            }\r\n        };\r\n\r\n        /*\r\n         *  Convert value into actual scope variable/function and evaluate it\r\n         */\r\n        this.convertAndGetValue = function (val, scope, property) {\r\n            if (val == '' || val == undefined || val == null) {\r\n                return false;\r\n            }\r\n            var dataType;\r\n            try {\r\n                dataType = typeof eval(val);\r\n            }\r\n            catch (e) { }\r\n            if (dataType == undefined) {\r\n                //  If function\r\n                if (val.indexOf(')') == val.length - 1) {\r\n                    return eval(this.generateFunctionWithParams(val, 'scope.$parent'));\r\n                }\r\n                var result = eval('scope.$parent.' + val);\r\n                dataType = typeof result;\r\n                if (dataType == 'boolean') {\r\n                    return result;\r\n                }\r\n                dataType = dataType == 'function' ? 'function' : 'string';\r\n            }\r\n            if (dataType == 'function') {\r\n                return eval(this.generateFunctionWithParams(val, 'scope.$parent'));\r\n            }\r\n            else if (dataType == 'string') {\r\n                return eval('scope.$parent.' + val);\r\n            }\r\n            else {\r\n                return eval(val);\r\n            }\r\n        };\r\n\r\n        /*\r\n         *  Map events\r\n         */\r\n        this.mapEvents = function (arrEvents) {\r\n            if (typeof arrEvents == 'object') {\r\n                var str = '',\r\n                    tLen = arrEvents.length;\r\n                for (var i = 0; i < tLen; i++) {\r\n                    var tObj = arrEvents[i];\r\n                    if (tObj.listener) {\r\n                        str = str + ' ' + tObj.type + '=\"' + tObj.listener + '\"';\r\n                    }\r\n                }\r\n                return str + ' ';\r\n            }\r\n            return '';\r\n        };\r\n\r\n        /*\r\n         *  Generate params list from function name\r\n         */\r\n        this.getParamsFromEvents = function (event, scopeString) {\r\n            var params = event.split('(');\r\n            if (params.length > 1) {\r\n                params = params[1].trim().split(')');\r\n                params = params[0].split(',');\r\n                var arrIndexesToBeDeleted = [],\r\n                    tLen = params.length;\r\n                for (var i = 0; i < tLen; i++) {\r\n                    params[i] = params[i].trim();\r\n                    if (params[i] != '$event') {\r\n                        if (params[i] == '') {\r\n                            arrIndexesToBeDeleted.push(params[i]);\r\n                        }\r\n                        else {\r\n                            var paramValue = undefined;\r\n                            try {\r\n                                paramValue = eval(params[i]);\r\n                            }\r\n                            catch (e) { }\r\n                            if (angular.isDefined(paramValue)) {\r\n                                params[i] = params[i].trim();\r\n                            }\r\n                            else {\r\n                                params[i] = (scopeString == '' || scopeString == undefined || scopeString == null ? '' : scopeString + '.') + params[i].trim();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                var deleteLength = arrIndexesToBeDeleted.length;\r\n                for (var i = 0; i < deleteLength; i++) {\r\n                    params.splice(arrIndexesToBeDeleted[i], 1);\r\n                }\r\n            }\r\n            else {\r\n                params = [];\r\n            }\r\n            return params;\r\n        };\r\n\r\n        /*\r\n         *  Convert function and its parameters into actual scope\r\n         *  For e.g. onChange(modelData) would be converted into scopeString.onChange(scopeString.modelData)\r\n         *  scopeString is the scope reference\r\n         */\r\n        this.generateFunctionWithParams = function (event, scopeString, isSection) {\r\n            var functionName = '';\r\n            if (!event) {\r\n                return functionName;\r\n            }\r\n            var params = this.getParamsFromEvents(event, scopeString);\r\n            functionName = (event.split('(')[0]).trim();\r\n            if (params.length > 0) {\r\n                params.push(isSection ? 'section' : 'property');\r\n                functionName = scopeString + '.' + functionName + '(' + params.join(',') + ')';\r\n            }\r\n            else {\r\n                functionName = scopeString + '.' + functionName + (isSection ? '(section)' : '(property)');\r\n            }\r\n            return functionName;\r\n        };\r\n\r\n        /*\r\n         *  Convert attribute value into actual scope\r\n         *  For e.g. isReqNameMandatory(modelData.reqName) would be converted into scope.isReqNameMandatory(scope.modelData.reqName)\r\n         *  scope is the scope reference\r\n         */\r\n        this.convertAndGetAttributeMapping = function (attributeType, key, attr, bindingType, scope, isSection) {\r\n            var str = attr + '=\"' + (bindingType == '@' ? '{{' : '') + (isSection ? 'section.' : (attributeType == 'primary' ? 'property.' : 'property.attributes.')) + key + (bindingType == '@' ? '}}' : '') + '\"';\r\n            var dataType;\r\n            var objProperty;\r\n            if (attributeType == 'primary' && isSection) {\r\n                objProperty = scope.section;\r\n            }\r\n            else if (attributeType == 'primary' && !isSection) {\r\n                objProperty = scope.property;\r\n            }\r\n            else {  //  secondary attributes\r\n                objProperty = scope.property.attributes;\r\n            }\r\n            try {\r\n                dataType = typeof eval(objProperty[key]);\r\n            }\r\n            catch (e) { }\r\n            if (dataType == undefined) {\r\n                dataType = typeof eval('scope.parentScope.' + objProperty[key]);\r\n                if (dataType == 'function') {\r\n                    str = attr + '=\"' + (bindingType == '@' ? '{{' : '') + this.generateFunctionWithParams(objProperty[key], 'parentScope', isSection) + (bindingType == '@' ? '}}' : '') + '\"';\r\n                }\r\n                else {\r\n                    str = attr + '=\"' + (bindingType == '@' ? '{{' : '') + 'parentScope.' + (objProperty[key]) + (bindingType == '@' ? '}}' : '') + '\"';\r\n                }\r\n            }\r\n            return ' ' + str + ' ';\r\n        };\r\n\r\n        /*\r\n         *  Map attribute and its value\r\n         */\r\n        this.getAttributesMapping = function (attributeType, attrs, scope, isSection) {\r\n            var str = '';\r\n            if (attributeType == 'primary') {\r\n                for (var key in attrs) {\r\n                    switch (key) {\r\n                        case 'isMandatory':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'is-mandatory', '@', scope, isSection);\r\n                            break;\r\n                        case 'isVisible':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'is-visible', '=', scope, isSection);\r\n                            break;\r\n                        case 'isCollapsible':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'is-collapsible', '@', scope, isSection);\r\n                            break;\r\n                        case 'isDraggable':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'is-draggable', '@', scope, isSection);\r\n                            break;\r\n                        case 'isActive':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'is-active', '=', scope, isSection);\r\n                            break;\r\n                        case 'isHeader':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'is-header', '@', scope, isSection);\r\n                            break;\r\n                        case 'headerTemplate':\r\n                            str += ' ' + 'header-template=\"{{section.' + key + '}}\" ';\r\n                            break;\r\n                        case 'modelOptions':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'model-options', '=', scope, isSection);\r\n                            break;\r\n                        case 'id':\r\n                            str += ' id=\"{{property.' + key + '}}\" ';\r\n                            break;\r\n                        case 'masterData':\r\n                            str += ' master-data=\"{{property.' + key + '}}\" ';\r\n                            break;\r\n                        case 'enableMasterData':\r\n                            str += ' enable-master-data=\"{{property.' + key + '}}\" ';\r\n                            break;\r\n                            //case 'focus':\r\n                            //case 'validate':\r\n                            //    str += this.convertAndGetAttributeMapping(attributeType, key, key, '=', scope, isSection);\r\n                            //    break;\r\n                        case 'rules':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'rules', '@', scope, isSection);\r\n                            break;\r\n                        case 'errorModel':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'error-model', '=', scope, isSection);\r\n                            break;\r\n                        case 'clienterror':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'clienterror', '=', scope, isSection);\r\n                            break;\r\n                        case 'currencySymbol':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, 'currency-symbol', '=', scope, isSection);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var key in attrs) {\r\n                    switch (key) {\r\n                        case 'type':\r\n                            if (scope.property.type == 'textfield') {\r\n                                var textfieldTypes = ['text', 'number', 'date', 'time', 'dateTime', 'area', 'autocomplete'];\r\n                                if (textfieldTypes.indexOf(scope.property.attributes.type) == -1) {\r\n                                    var arrSplitFunction = scope.property.attributes.type.split('(');\r\n                                    var evalResult;\r\n                                    var property = scope.property;  //  Property is element's config\r\n                                    //  If function call is passed\r\n                                    if (arrSplitFunction.length > 1) {\r\n                                        evalResult = eval('scope.' + this.generateFunctionWithParams(scope.property.attributes.type, 'parentScope'));\r\n                                    }\r\n                                    else {\r\n                                        evalResult = eval('scope.parentScope.' + scope.property.attributes.type);\r\n                                        //  If function reference is passed\r\n                                        if (typeof evalResult == 'function') {\r\n                                            evalResult = eval('scope.' + this.generateFunctionWithParams(scope.property.attributes.type, 'parentScope'));\r\n                                        }\r\n                                    }\r\n                                    str += ' type=\"' + evalResult + '\"';\r\n                                }\r\n                                else {\r\n                                    str += ' type=\"{{property.attributes.type}}\" ';\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'options':\r\n                            /*\r\n                             *  Check if type of value passed is string. If yes convert the same into controller scope variable.\r\n                             *  So that when the scope variable's value gets changed, the same would be reflected in directive.\r\n                             */\r\n                            if (typeof eval('scope.property.attributes.options') == 'string') {\r\n                                str += ' options=\"parentScope.' + scope.property.attributes.options + '\" ';\r\n                            }\r\n                            else {\r\n                                str += ' options=\"property.attributes.options\" ';\r\n                            }\r\n                            break;\r\n                        case 'readonly':\r\n                        case 'disable':\r\n                            str += this.convertAndGetAttributeMapping(attributeType, key, key, '@', scope, isSection);\r\n                            break;\r\n                        case 'ngModelOptions':\r\n                            str += ' ng-model-options=\"property.attributes.ngModelOptions\" ';\r\n                            break;\r\n                        case 'validateOn':\r\n                            str += ' validate-on=\"{{property.attributes.validateOn}}\" ';\r\n                            break;\r\n                        default:\r\n                            var attrList = [];\r\n                            if (scope.property.type == 'textfield') {\r\n                                attrList = ['validate', 'focus', 'parentelement', 'errormessage', 'setfromgrid', 'align', 'datanumeric', 'spinner', 'patternreg', 'step', 'format', 'timepicker', 'isvaluedateobj', 'prefixicon', 'suffixicon', 'maxlength', 'min', 'max', 'timepicker12hour', 'minuteincrement', 'charactercounter', 'decimalprecision', 'minmaxprecision', 'placeholder', 'autocomplete', 'removable', 'datakey', 'filterkeys', 'optionformat', 'displayformat', 'width', 'minchars', 'loading', 'count', 'nosuggestionnotice', 'shownosuggestion', 'ngmodel', 'smart-character-restrict', 'showinfo', 'showwarning', 'allowpaste', 'currency-symbol'];\r\n                            }\r\n                            else if (scope.property.type == 'select' || scope.property.type == 'dropdown') {\r\n                                attrList = ['label', 'ngmodelcopy', 'validate', 'focus', 'parentelement', 'multiple', 'datakey', 'displaykey', 'removable', 'preview', 'customoption', 'ngmodel', 'config', 'show', 'stopprog', 'showinfo', 'showwarning'];\r\n                            }\r\n                            else if (scope.property.type == 'radio') {\r\n                                attrList = ['label', 'ngmodelcopy', 'layout', 'validate', 'focus', 'parentelement', 'errormessage', 'datakey', 'optionid', 'removable', 'groupid', 'ngmodel'];\r\n                            }\r\n                            else if (scope.property.type == 'checkbox') {\r\n                                attrList = ['label', 'minheight', 'fill', 'validate', 'focus', 'parentelement', 'errormessage',  'removable', 'ngmodel', 'showinfo'];\r\n                            }\r\n                            else if (scope.property.type == 'switch') {\r\n                                attrList = ['label', 'rightlabel', 'leftlabel', 'validate', 'focus', 'parentelement', 'errormessage', 'removable', 'minheight', 'fill', 'ngmodel'];\r\n                            }\r\n\r\n                            if (attrList.indexOf(key.toLowerCase()) > -1) {\r\n                                str += ' ' + key + '=\"{{property.attributes.' + key + '}}\" ';\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            return str;\r\n        };\r\n\r\n\r\n        /*\r\n         *  Alternative of broadcast event\r\n         */\r\n        var arrEvents = [];\r\n        var eventCounter = 0;\r\n\r\n\r\n        /*\r\n         *  Deregister an event or events\r\n         */\r\n        this.removeEventListener = function (event) {\r\n            var eventLen = arrEvents.length;\r\n            for (var i = 0; i < eventLen; i++) {\r\n                var tObj = arrEvents[i];\r\n                if (tObj.eventName == event.eventName && tObj.eventId == event.eventId) {\r\n                    tObj.callback = null;\r\n                    arrEvents.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        /*\r\n         *  Register a listener\r\n         */\r\n        this.on = function (eventName, callback) {\r\n            eventCounter++;\r\n            arrEvents.push({\r\n                eventName: eventName,\r\n                callback: callback,\r\n                eventId: 'smart-broadcast-event-' + eventCounter\r\n            });\r\n            var objEvent = {\r\n                eventName: eventName,\r\n                eventId: 'smart-broadcast-event-' + eventCounter\r\n            };\r\n            return function () {\r\n                _this.removeEventListener(objEvent);\r\n            };\r\n        };\r\n\r\n\r\n        /*\r\n         *  Fire an event\r\n         */\r\n        this.broadcast = function (eventName, data) {\r\n            var broadcastEvLen = arrEvents.length;\r\n            for (var i = 0; i < broadcastEvLen; i++) {\r\n                var tData = arrEvents[i];\r\n                if (eventName == tData.eventName) {\r\n                    angular.isFunction(tData.callback) && tData.callback({}, data);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n\r\n        /*\r\n         *  Custom javascript watcher \r\n         */\n        this.watch = function (obj, prop, callback) {\r\n            Object.defineProperty(angular.isDefined(obj) && angular.isObject(obj) ? obj : window, prop, {\r\n                get: function () {\r\n                    return this['custom_watcher_' + prop];\r\n                },\n                set: function (newVal) {\r\n                    if (!angular.equals(this['custom_watcher_' + prop], newVal)) {\r\n                        var oldVal = this['custom_watcher_' + prop];\n                        this['custom_watcher_' + prop] = newVal;\n                        angular.isFunction(callback) && callback(newVal, oldVal);\r\n                    }\r\n                },\n                enumerable: true,\n                configurable: true\r\n            });\r\n        };\r\n\r\n\r\n        /*\r\n         *  Show PLEASE WAIT label\r\n         */\r\n        this.showPleaseWait = function () {\r\n            angular.element('#divPleaseWait').css('display', 'table');\r\n        };\r\n\r\n\r\n        /*\r\n         *  Hide PLEASE WAIT label\r\n         */\r\n        this.hidePleaseWait = function () {\r\n            angular.element('#divPleaseWait').css('display', 'none');\r\n        };\r\n    }]);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').service('gridConfigProvider', ['cellTemplateProvider', '$filter', 'formWidgetUtils', 'APPCONSTANTS', function (cellTemplateProvider, $filter, formWidgetUtils, APPCONSTANTS) {\r\n\r\n        function getDefaultGridConfigObject() {\r\n            return {\r\n                \"field\": \"\",\r\n                \"displayName\": \"\",\r\n                \"groupingShowAggregationMenu\": false,\r\n                \"enableHiding\": false,\r\n                //\"suppressRemoveSort\": true,\r\n                \"groupingShowGroupingMenu\": false,\r\n                \"enablePinning\": false\r\n            };\r\n        }\r\n\r\n        function getGridConfig(conf, scope, cellClassFunction, cellEditableConditionFunction) {\r\n            var finalObject = _.extend(new getDefaultGridConfigObject(), conf);\r\n\r\n            if (finalObject.isVisible != undefined) {\r\n                finalObject.visible = formWidgetUtils.convertAndGetValue(finalObject.isVisible, scope, finalObject);\r\n            }\r\n\r\n            finalObject.enableCellEdit = true;\r\n\r\n            if (finalObject.isReadOnly != undefined) {\r\n                finalObject.enableCellEdit = !formWidgetUtils.convertAndGetValue(finalObject.isReadOnly, scope, finalObject);\r\n            }\r\n\r\n            if (finalObject.isFixed) {\r\n                if (finalObject.isFixed == \"Left\")\r\n                    finalObject.pinnedLeft = true;\r\n                if (finalObject.isFixed == \"Right\")\r\n                    finalObject.pinnedRight = true;\r\n                finalObject.maxWidth = 260;\r\n            }\r\n            if (finalObject.isGrouped) {\r\n                finalObject.grouping = {\r\n                    \"groupPriority\": 0\r\n                }\r\n                //finalObject.sort = {\r\n                //    \"priority\": 0,\r\n                //    \"direction\": \"asc\"\r\n                //}\r\n            }\r\n            if (finalObject.aggregation) {\r\n                finalObject.treeAggregationType = 2;\r\n            }\r\n\r\n            finalObject.displayKey = finalObject.displayName;\r\n            if (finalObject.isMandatory) {\r\n                finalObject.displayName = $filter('translate')(finalObject.displayName) + \" *\";\r\n            } else {\r\n                finalObject.displayName = $filter('translate')(finalObject.displayName);\r\n            }\r\n\r\n\r\n            if (finalObject.type) {\r\n                switch (finalObject.type) {\r\n                    case \"popup\":\r\n                        finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"cellTemplate\");\r\n                        finalObject.editableCellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"editableCellTemplate\");\r\n                        break;\r\n                    case \"editable\":\r\n                        if (finalObject.attributes && finalObject.attributes.type == \"date\") {\r\n                            finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"cellTemplate\");\r\n                            finalObject.editableCellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"editableCellTemplate\");\r\n                        }\r\n                        if (finalObject.attributes && finalObject.attributes.type == \"autocomplete\") {\r\n                            if (finalObject.cellTemplate == undefined || finalObject.cellTemplate == null) {\r\n                                finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"cellTemplate\");\r\n                            }\r\n                            finalObject.editableCellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"editableCellTemplate\");\r\n                        }\r\n                        if (finalObject.attributes && finalObject.attributes.type == \"number\") {\r\n                            finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"cellTemplate\");\r\n                            finalObject.editableCellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"editableCellTemplate\");\r\n                        }\r\n                        if (finalObject.attributes && (finalObject.attributes.type == \"text\" || finalObject.attributes.type == undefined)) {\r\n                            finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"cellTemplate\");\r\n                            finalObject.editableCellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"editableCellTemplate\");\r\n                        }\r\n                        break;\r\n                    case \"dropdown\":\r\n                        if (!finalObject.attributes.idKey) {\r\n                            finalObject.attributes.idKey = 'id'\r\n                        }\r\n                        finalObject.editableCellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"editableCellTemplate\");\r\n                        finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"cellTemplate\");\r\n                        break;\r\n                    case \"calculated\":\r\n                        finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject);\r\n                        if (finalObject.enableCellEdit) finalObject.enableCellEdit = false;\r\n                        break;\r\n                    case \"checkbox\":\r\n                        finalObject.cellTemplate = cellTemplateProvider.getCellTemplate(finalObject, \"cellTemplate\");\r\n                        break;\r\n                };\r\n                //if (finalObject.editableCellTemplate) {\r\n                //finalObject.enableCellEdit = true;\r\n                //};\r\n            }\r\n\r\n            finalObject.cellClass = cellClassFunction;\r\n            finalObject.cellEditableCondition = cellEditableConditionFunction;\r\n\r\n            if (finalObject.hasOwnProperty('filterObject')) {\r\n                finalObject.enableFiltering = finalObject.filterObject.enableFiltering;\r\n                if (finalObject.enableFiltering) {\r\n                    finalObject.filter = {\r\n                        placeholder: $filter('translate')(\"P2P_Common_Search\")\r\n                    }\r\n                    if (finalObject.filterObject.hasOwnProperty('filterKeys')) {\r\n                        finalObject.filter.condition = function (searchTerm, cellValue, row, col) {\r\n                            var result = false;\r\n                            if (typeof finalObject.filterObject.filterKeys != 'object' || typeof cellValue != 'object' || (typeof finalObject.filterObject.filterKeys == 'object' && finalObject.filterObject.filterKeys.length == 0)) {\r\n                                result = true;\r\n                            }\r\n                            for (var key in cellValue) {\r\n                                if (finalObject.filterObject.filterKeys.indexOf(key) > -1) {\r\n                                    if (typeof cellValue[key] == 'string' && cellValue[key].toLowerCase().indexOf(searchTerm.toLowerCase()) > -1) {\r\n                                        result = true;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var cellConditionResult = true;\r\n                            if (angular.isDefined(finalObject.filterObject.cellCondition)) {\r\n                                try {\r\n                                    cellConditionResult = eval(finalObject.filterObject.cellCondition);\r\n                                }\r\n                                catch (e) { }\r\n                            }\r\n\r\n                            return result && cellConditionResult;\r\n                        };\r\n                    }\r\n                    else if (finalObject.filterObject.isDate) {\r\n                        finalObject.filter.condition = function (searchTerm, cellValue, row, col) {\r\n                            var result = false;\r\n                            if (searchTerm == undefined || searchTerm == null || (angular.isDefined(searchTerm) && searchTerm.trim() == \"\")) {\r\n                                result = true;\r\n                            }\r\n                            if (angular.isDefined(searchTerm) && (cellValue == undefined || cellValue == null)) {\r\n                                result = false;\r\n                            }\r\n                            if (angular.isDefined(searchTerm) && angular.isDefined(cellValue)) {\r\n                                var formattedDate = (cellValue).replace(new RegExp(\"/\", \"ig\"), '');\r\n                                formattedDate = formattedDate.split('+');\r\n                                formattedDate = eval('new ' + formattedDate[0] + (formattedDate.length > 1 ? ')' : ''));\r\n                                var month = formattedDate.getMonth() + 1 + '';\r\n                                if (month.length === 1) {\r\n                                    month = 0 + '' + month;\r\n                                }\r\n                                formattedDate = formattedDate.getDate() + '/' + month + '/' + formattedDate.getFullYear();\r\n                                result = formattedDate.toLowerCase().trim().indexOf(escape(searchTerm).replace(/%5C/g, '').trim()) > -1;\r\n\r\n                                var cellConditionResult = true;\r\n                                try {\r\n                                    cellConditionResult = eval(finalObject.filterObject.cellCondition);\r\n                                }\r\n                                catch (e) { }\r\n\r\n                                return result && cellConditionResult;\r\n                            }\r\n                        };\r\n                    }\r\n                    else if (finalObject.filterObject.hasOwnProperty('cellCondition')) {\r\n                        finalObject.filter.condition = function (searchTerm, cellValue, row, col) {\r\n                            var result = false;\r\n                            if (cellValue && cellValue.toLocaleLowerCase().indexOf(searchTerm) > -1) {\r\n                                result = true;\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            var cellConditionResult = true;\r\n                            try {\r\n                                cellConditionResult = eval(finalObject.filterObject.cellCondition);\r\n                            }\r\n                            catch (e) { }\r\n                            return result && cellConditionResult;\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                finalObject.enableFiltering = false;\r\n            }\r\n\r\n            finalObject.uiType = finalObject.type;\r\n            delete finalObject.type;\r\n\r\n            return finalObject;\r\n        }\r\n\r\n        this.getMassagedGirdConfig = function (confArr, scope, cellClassFunction, cellEditableConditionFunction) {\r\n            var massagedConf = [];\r\n            _.each(confArr, function (conf) {\r\n                massagedConf.push(getGridConfig(conf, scope, cellClassFunction, cellEditableConditionFunction));\r\n            });\r\n            return massagedConf;\r\n        };\r\n\r\n\r\n\r\n        function getSmartTableConfig(conf, scope, cellClassFunction, cellEditableConditionFunction) {\r\n            var finalObject = _.extend(new getDefaultGridConfigObject(), conf);\r\n\r\n            if (finalObject.isVisible != undefined) {\r\n                finalObject.visible = formWidgetUtils.convertAndGetValue(finalObject.isVisible, scope, finalObject);\r\n            }\r\n\r\n            finalObject.enableCellEdit = true;\r\n\r\n            if (finalObject.isReadOnly != undefined) {\r\n                finalObject.enableCellEdit = !formWidgetUtils.convertAndGetValue(finalObject.isReadOnly, scope, finalObject);\r\n            }\r\n\r\n            if (finalObject.isFixed) {\r\n                if (finalObject.isFixed == \"Left\")\r\n                    finalObject.pinnedLeft = true;\r\n                if (finalObject.isFixed == \"Right\")\r\n                    finalObject.pinnedRight = true;\r\n                finalObject.maxWidth = 260;\r\n            }\r\n            if (finalObject.isGrouped) {\r\n                finalObject.grouping = {\r\n                    \"groupPriority\": 0\r\n                }\r\n                //finalObject.sort = {\r\n                //    \"priority\": 0,\r\n                //    \"direction\": \"asc\"\r\n                //}\r\n            }\r\n            if (finalObject.aggregation) {\r\n                finalObject.treeAggregationType = 2;\r\n            }\r\n\r\n            finalObject.displayKey = finalObject.displayName;\r\n            if (finalObject.isMandatory) {\r\n                finalObject.displayName = $filter('translate')(finalObject.displayName) + \" *\";\r\n            }\r\n            else {\r\n                finalObject.displayName = $filter('translate')(finalObject.displayName);\r\n            }\r\n\r\n\r\n            if (finalObject.type) {\r\n                switch (finalObject.type) {\r\n                    case \"dropdown\":\r\n                        if (!finalObject.attributes.idKey) {\r\n                            finalObject.attributes.idKey = 'id'\r\n                        }\r\n                        break;\r\n\r\n                    case \"calculated\":\r\n                        finalObject.cellTemplate = function (row, column) {\r\n                            if (column.colDef.field && column.colDef.field != 'IsCloseForReceiving' && column.colDef.field != 'IsCloseForInvoicing') {\r\n                                var inputValue = 0;\r\n                                if (column.colDef.field &&(column.colDef.field.toLowerCase() == 'subtotal' || column.colDef.field.toLowerCase() == 'total')) {\r\n                                    function BankerevenRound(num, decimalPlaces) {\r\n                                        var d = decimalPlaces || 0;\r\n                                        var m = Math.pow(10, d);\r\n                                        var n = +(d ? num * m : num); \r\n                                        var i = Math.floor(n), f = n - i;\r\n                                        var r = (f == 0.5) ? ((i % 2 == 0) ? i : i + 1) : Math.round(n);\r\n                                        return d ? r / m : r;\r\n                                    }\r\n\r\n                                    var unitPriceRounding = 0;\r\n                                    var taxesRounding = 0;\r\n                                    var shippingChargesRounding = 0;\r\n                                    var otherChargesRounding = 0;\r\n                                    unitPriceRounding = BankerevenRound((parseFloat(row.entity.unitPrice) * parseFloat(row.entity.quantity)), parseInt(column.colDef.attributes.minmaxprecisionfilter.split(':')[1]));\r\n                                    taxesRounding = row.entity.taxes > 0 ? BankerevenRound(parseFloat(row.entity.taxes), parseInt(column.colDef.attributes.taxesandchargestotal)) : 0;\r\n                                    shippingChargesRounding = row.entity.shippingCharges > 0 ? BankerevenRound(parseFloat(row.entity.shippingCharges), parseInt(column.colDef.attributes.taxesandchargestotal)) : 0;\r\n                                    otherChargesRounding = row.entity.otherCharges > 0 ? BankerevenRound(parseFloat(row.entity.otherCharges), parseInt(column.colDef.attributes.taxesandchargestotal)) : 0;\r\n                                    if (column.colDef.field && column.colDef.field.toLowerCase() == 'subtotal')\r\n                                        inputValue = unitPriceRounding;\r\n                                    else if (column.colDef.field && column.colDef.field.toLowerCase() == 'total')\r\n                                        inputValue = unitPriceRounding + taxesRounding + shippingChargesRounding + otherChargesRounding;\r\n                                }\r\n                                else\r\n                                    inputValue = eval(column.colDef.attributes.rule);\r\n                                return $filter('minPrecisionHandler')(inputValue, column.colDef.attributes.minmaxprecisionfilter.split(':')[0], column.colDef.attributes.minmaxprecisionfilter.split(':')[1], false);\r\n                            }\r\n                            else {\r\n                                return eval(column.colDef.attributes.rule);\r\n                            }\r\n                        };\r\n                        finalObject.enableCellEdit = false;\r\n                        break;\r\n\r\n                    case 'popup':\r\n                        switch (finalObject.attributes.type) {\r\n                            case 'splitsPopup':\r\n                                finalObject.cellTemplate = function (row, column) {\r\n                                    if (row.entity.type != undefined || row.entity.type != null) {\r\n                                        return row.entity.splitType == 0 ? (row.entity.type.id == 1 ? $filter('translate')('P2P_Common_Quantity') : $filter('translate')('P2P_Common_Amount')) : $filter('translate')('P2P_Common_Percentage');\r\n                                    }\r\n                                    else {\r\n                                        return $filter('translate')('P2P_Common_Percentage');\r\n                                    }\r\n                                };\r\n                                break;\r\n\r\n                            case 'commentsAndAttachmentsPopup':\r\n                                finalObject.cellTemplate = function (row, column) {\r\n                                    return row.entity.notes && row.entity.notes.length > 0 ? $filter('translate')('P2P_Common_View') : $filter('translate')('P2P_Common_Add');\r\n                                };\r\n                                break;\r\n\r\n                            case 'customAttributesPopup':\r\n                                finalObject.placeHolder = $filter('translate')('P2P_Common_View');\r\n                                break;\r\n\r\n                            case 'manufacturerPopup':\r\n                                finalObject.cellTemplate = function (row, column) {\r\n                                    if (row.entity.manufacturer || row.entity.manufacturerPartNumber || row.entity.ManufacturerModel) {\r\n                                        row.entity.manufacturerName = row.entity.manufacturer + \":\" + row.entity.manufacturerPartNumber + \":\" + row.entity.ManufacturerModel;\r\n                                    }\r\n                                    return row.entity.manufacturerName ? (row.entity.manufacturerName) : $filter('translate')('P2P_Common_Add');\r\n                                };\r\n                                break;\r\n\r\n                            case 'categoryPopup':\r\n                                finalObject.debounce = 250;\r\n                                break;\r\n\r\n                            case 'taxesPopup':\r\n                                finalObject.cellTemplate = function (row, column) {\r\n                                    return row.entity.isTaxExempt ? $filter('translate')('P2P_Common_Exempt') : (APPCONSTANTS.userPreferences.DocumentTypeId == 38 ? 'Taxable' : row.entity.taxes);\r\n                                };\r\n                                break;\r\n                        }\r\n                        break;\r\n                };\r\n            }\r\n\r\n            finalObject.cellClass = cellClassFunction;\r\n            finalObject.cellEditableCondition = cellEditableConditionFunction;\r\n\r\n            if (finalObject.hasOwnProperty('filterObject')) {\r\n                finalObject.enableFiltering = finalObject.filterObject.enableFiltering;\r\n                if (finalObject.enableFiltering) {\r\n                    finalObject.filter = {\r\n                        placeholder: $filter('translate')(\"P2P_Common_Search\")\r\n                    }\r\n                    if (finalObject.filterObject.hasOwnProperty('filterKeys')) {\r\n                        finalObject.filter.condition = function (searchTerm, cellValue, row, col) {\r\n                            var result = false;\r\n                            if (typeof finalObject.filterObject.filterKeys != 'object' || typeof cellValue != 'object' || (typeof finalObject.filterObject.filterKeys == 'object' && finalObject.filterObject.filterKeys.length == 0)) {\r\n                                result = true;\r\n                            }\r\n                            for (var key in cellValue) {\r\n                                if (finalObject.filterObject.filterKeys.indexOf(key) > -1) {\r\n                                    if (typeof cellValue[key] == 'string' && cellValue[key].toLowerCase().indexOf(searchTerm.toLowerCase()) > -1) {\r\n                                        result = true;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var cellConditionResult = true;\r\n                            if (angular.isDefined(finalObject.filterObject.cellCondition)) {\r\n                                try {\r\n                                    cellConditionResult = eval(finalObject.filterObject.cellCondition);\r\n                                }\r\n                                catch (e) { }\r\n                            }\r\n\r\n                            return result && cellConditionResult;\r\n                        };\r\n                    }\r\n                    else if (finalObject.filterObject.isDate) {\r\n                        finalObject.filter.condition = function (searchTerm, cellValue, row, col) {\r\n                            var result = false;\r\n                            if (searchTerm == undefined || searchTerm == null || (angular.isDefined(searchTerm) && searchTerm.trim() == \"\")) {\r\n                                result = true;\r\n                            }\r\n                            if (angular.isDefined(searchTerm) && (cellValue == undefined || cellValue == null)) {\r\n                                result = false;\r\n                            }\r\n                            if (angular.isDefined(searchTerm) && angular.isDefined(cellValue)) {\r\n                                var formattedDate = (cellValue).replace(new RegExp(\"/\", \"ig\"), '');\r\n                                formattedDate = formattedDate.split('+');\r\n                                formattedDate = eval('new ' + formattedDate[0] + (formattedDate.length > 1 ? ')' : ''));\r\n                                var month = formattedDate.getMonth() + 1 + '';\r\n                                if (month.length === 1) {\r\n                                    month = 0 + '' + month;\r\n                                }\r\n                                formattedDate = formattedDate.getDate() + '/' + month + '/' + formattedDate.getFullYear();\r\n                                result = formattedDate.toLowerCase().trim().indexOf(escape(searchTerm).replace(/%5C/g, '').trim()) > -1;\r\n\r\n                                var cellConditionResult = true;\r\n                                try {\r\n                                    cellConditionResult = eval(finalObject.filterObject.cellCondition);\r\n                                }\r\n                                catch (e) { }\r\n\r\n                                return result && cellConditionResult;\r\n                            }\r\n                        };\r\n                    }\r\n                    else if (finalObject.filterObject.hasOwnProperty('cellCondition')) {\r\n                        finalObject.filter.condition = function (searchTerm, cellValue, row, col) {\r\n                            var result = false;\r\n                            if (cellValue && cellValue.toLocaleLowerCase().indexOf(searchTerm) > -1) {\r\n                                result = true;\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            var cellConditionResult = true;\r\n                            try {\r\n                                cellConditionResult = eval(finalObject.filterObject.cellCondition);\r\n                            }\r\n                            catch (e) { }\r\n                            return result && cellConditionResult;\r\n                        };\r\n                    }\r\n                }\r\n\r\n                //  filter condition for split type column\r\n                if (finalObject.attributes.type == 'splitsPopup') {\r\n                    finalObject.filter.condition = function (searchTerm, row, col) {\r\n                        return (row.splitType == 0 ? (row.type.id == 1 ? 'Quantity' : 'Amount') : 'Percentage').toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                finalObject.enableFiltering = false;\r\n            }\r\n\r\n            switch (finalObject.field) {\r\n                case 'total':\r\n                    finalObject.sortCondition = function (data, column, isAscending) {\r\n                        if (angular.isDefined(column.attributes.rule)) {\r\n                            return data.sort(function (a, b) {\r\n                                a = eval(column.attributes.rule.replace(/row.entity/g, 'a'));\r\n                                b = eval(column.attributes.rule.replace(/row.entity/g, 'b'));\r\n                                return a > b ? (isAscending ? -1 : 1) : (a < b ? (isAscending ? 1 : -1) : 0);\r\n                            });\r\n                        }\r\n                        return data;\r\n                    };\r\n                    break;\r\n            }\r\n\r\n            finalObject.uiType = finalObject.type;\r\n            delete finalObject.type;\r\n\r\n            return finalObject;\r\n        };\r\n\r\n\r\n        this.getMassagedSmartTableConfig = function (confArr, scope, cellClassFunction, cellEditableConditionFunction) {\r\n            var massagedConf = [];\r\n            _.each(confArr, function (conf) {\r\n                massagedConf.push(getSmartTableConfig(conf, scope, cellClassFunction, cellEditableConditionFunction));\r\n            });\r\n            return massagedConf;\r\n        };\r\n\r\n        this.eavluateScopeBindedExpressions = function (val, scope, obj) {\r\n            return formWidgetUtils.convertAndGetValue(val, scope, obj)\r\n        };\r\n    }]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n    angular.module('SMART2').service('httpService', ['$http', '$q', 'APPCONSTANTS', function ($http, $q, APPCONSTANTS) {\r\n        delete $http.defaults.headers.common['X-Requested-With'];\r\n\r\n        var httpService = this;\r\n        var pendingRequests = [];\r\n        httpService.isNetworkOnline = true;\r\n\r\n        /*\r\n         * Lister network change\r\n         */\r\n        // window.on('networkChange', function(e) {\r\n        // httpService.isNetworkOnline = e.online;\r\n        // if(!e.online) {\r\n        // httpService.abortAll(true);\r\n        // }\r\n        // });\r\n\r\n        /*\r\n         * Massage result data\r\n         * This is required because sometimes if a service fails, the same is notified in success callback\r\n         */\r\n        httpService.massageResultData = function (data) {\r\n            data.success = true;\r\n            if (data.config.timeout && angular.isDefined(data.config.timeout.status)) {\r\n                data.status = data.config.timeout.status;     //  timeout can be either actual service timeout or request abort\r\n                data.statusText = data.config.timeout.statusText;\r\n                data.success = false;\r\n            }\r\n            else if ([200, 201, 202, 203].indexOf(data.status) == -1) {\r\n                data.statusText = 'An error occured while fetching data.';\r\n                data.success = false;\r\n            }\r\n            return data;\r\n        };\r\n\r\n\r\n        /*\r\n         *  Abort all pending requests\r\n         *  Services added to 'excludeServices' array will be skipped (will not be aborted)\r\n         */\r\n        httpService.abortAll = function (isNetworkLost) {\r\n            angular.forEach(pendingRequests, function (pendingRequest) {\r\n                pendingRequest.canceller.promise.status = isNetworkLost ? 0 : 499;\r\n                pendingRequest.canceller.promise.statusText = isNetworkLost ? 'The Internet connection appears to be offline.' : 'Request cancelled.';\r\n                pendingRequest.canceller.resolve();\r\n            });\r\n            pendingRequests = [];\r\n        };\r\n\r\n\r\n        /*\r\n         *  Abort request\r\n         */\r\n        httpService.abort = function (urlfordata) {\r\n            if (!urlfordata) {\r\n                return;\r\n            }\r\n            var requestToAbort = undefined;\r\n            requestToAbort = _.find(pendingRequests, function (pendingRequest) {\r\n                return pendingRequest.url == urlfordata.url && angular.equals(pendingRequest.requestArgs, (urlfordata.params ? urlfordata.params : (urlfordata.data ? urlfordata.data : {})));\r\n            });\r\n            requestToAbort.canceller.promise.status = 499;\r\n            requestToAbort.canceller.promise.statusText = 'Request cancelled.';\r\n            requestToAbort.canceller.resolve();\r\n            pendingRequests = _.filter(pendingRequests, function (pendingRequest) {\r\n                return pendingRequest.url != urlfordata.url && !angular.equals(pendingRequest.requestArgs, (urlfordata.params ? urlfordata.params : (urlfordata.data ? urlfordata.data : {})));\r\n            });\r\n        };\r\n\r\n\r\n        /*\r\n         * Get data from service\r\n         */\r\n        httpService.directhttp = function (urlfordata) {\r\n            var returnpromise = $q.defer();\r\n\r\n            var responseURL = 'Result';\r\n            var requestPromise, canceller = $q.defer();\r\n\r\n            /*\r\n             *  If you don't want a service to be aborted on abortAll(), \r\n             *  pass a parameter named 'abortable' and set the value to false.\r\n             *  abort() can still be used to abort the same service.\r\n             */\r\n            var abortable = angular.isDefined(urlfordata.abortable) && urlfordata.abortable == false ? false : true;\r\n            /*\r\n             * Service timeout\r\n             */\r\n            var requestTimeout = setTimeout(function () {\r\n                canceller.promise.status = 408;\r\n                canceller.promise.statusText = 'Request timed out.';\r\n                canceller.resolve();\r\n            }, angular.isDefined(urlfordata.timeout) ? urlfordata.timeout : 120000);\r\n\r\n            if (abortable) {\r\n                pendingRequests.push({\r\n                    url: urlfordata.url,\r\n                    requestArgs: urlfordata.params || urlfordata.data,\r\n                    canceller: canceller\r\n                });\r\n            }\r\n\r\n            var reqParams = {\r\n                url: urlfordata.url,\r\n                method: urlfordata.method ? urlfordata.method.toUpperCase() : \"POST\",\r\n                cache: false,\r\n                timeout: canceller.promise,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"UserExecutionContext\": JSON.stringify(APPCONSTANTS.userPreferences.UserBasicDetails)\r\n                }\r\n            };\r\n\r\n            if (!reqParams.headers.RequestVerificationToken && $('#hdnToken').val()) {\r\n                reqParams.headers.RequestVerificationToken = $('#hdnToken').val();\r\n            }\r\n\r\n            angular.merge(reqParams, urlfordata);\r\n\r\n            requestPromise = $http(reqParams).then(function (result) {\r\n                result = httpService.massageResultData(result);\r\n                if (result.success) {\r\n                    returnpromise.resolve(result.data);\r\n                }\r\n                else {\r\n                    returnpromise.reject(result);\r\n                }\r\n            }, function (errorData) {\r\n                errorData = httpService.massageResultData(errorData);\r\n                returnpromise.reject(errorData);\r\n            });\r\n\r\n\r\n            /*\r\n             *  Once a request has failed or succeeded, remove it from the pending list\r\n             */\r\n            requestPromise.finally(function () {\r\n                clearTimeout(requestTimeout);\r\n                if (abortable) {\r\n                    pendingRequests = _.filter(pendingRequests, function (pendingRequest) {\r\n                        return pendingRequest.url != urlfordata.url && !angular.equals(pendingRequest.requestArgs, ((urlfordata.params ? urlfordata.params : (urlfordata.data ? urlfordata.data : {}))));\r\n                    });\r\n                }\r\n            });\r\n\r\n            return returnpromise.promise;\r\n        };\r\n    }]);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').service('menuListItemServ', [function () {\r\n        return function (list) {\r\n            var getcontent = list;\r\n            if (getcontent.parent().attr(\"role\") == null) {\r\n                getcontent.parent().attr(\"role\", \"listbox\")\r\n            }\r\n            if (getcontent.attr(\"isItemList\") == null && getcontent.length != 0) {\r\n                getcontent.on(\"keydown\", function (e) {\r\n                    var $this = $(this);\r\n                    if (e.keyCode == 40) {\r\n                        e.preventDefault();\r\n                        $this.next().focus();\r\n                    } else if (e.keyCode == 38) {\r\n                        e.preventDefault();\r\n                        $this.prev().focus();\r\n                    } else if (e.keyCode == 13) {\r\n                        e.preventDefault();\r\n                        if ($this.find('[ng-click]') != undefined || $this.find('[href]') != undefined) {\r\n                            if ($this.find('[ng-click]').length > 0) {\r\n                                $this.find('[ng-click]').trigger(\"click\");\r\n                            } else {\r\n                                $this.find('[href]').trigger('click');\r\n                            }\r\n                        } else if ($this.attr('ng-click') != undefined) {\r\n                            $this.trigger('click');\r\n                        }\r\n                    }\r\n                   \r\n                });\r\n            };\r\n            getcontent.attr(\"role\", \"option\").attr(\"isItemList\", \"\").attr('tabindex', '0').children().attr('tabindex', '-1');\r\n        };\r\n}])\r\n\r\n\r\n})();\r\n","(function() {\n    'use strict';\n    angular.module('SMART2').service('NoolsEngine', [function () {\n        this.execute = function (config) {\r\n            var arrFields = [];\r\n            var arrErrors = [];\r\n            var headerOrGridConfig = config.uiConfig;\r\n            var dataModel = config.dataModel;\r\n            var ruleType = config.type;\r\n            var rulesObj = config.rules;\r\n            var scope = config.scope;\r\n\r\n            if (ruleType == 'grid') {\r\n                _.each(headerOrGridConfig[0].cloumnDefs, function (def) {\r\n                    arrFields.push({\r\n                        field: def.field,\r\n                        type: def.type\r\n                    });\r\n                });\r\n            }\r\n            else if (ruleType == 'header') {\r\n                _.each(headerOrGridConfig.sections, function (section) {\r\n                    _.each(section.rows[0].properties, function (def) {\r\n                        arrFields.push({\r\n                            field: def.data,\r\n                            type: def.type,\r\n                            attributes: def.attributes\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n\r\n            var flow = nools.compile(rulesObj, { name: 'totalErrors' });\r\n            var Message = flow.getDefined(\"message\");\r\n\r\n            if (ruleType == 'grid') {\r\n                dataModel = dataModel.orderData.items[0];\r\n            }\r\n            else {\r\n                dataModel = dataModel;\r\n            }\r\n\r\n            _.each(arrFields, function (man) {\r\n                var messageModel = [new Message({\r\n                    ui: man,\r\n                    dataModel: dataModel,\r\n                    scope: scope\r\n                })];\r\n\r\n                var session = flow.getSession.apply(flow, messageModel).focus('empty');\r\n\r\n                session.on(\"error\", function (data) {\r\n                    arrErrors.push(data.errors[0]);\r\n                }).on('fire', function (name) { });\r\n\r\n                session.match(function (data) {\r\n                    session.dispose();\r\n                    nools.deleteFlow('totalErrors');\r\n                });\r\n            });\r\n\r\n            if (arrErrors.length == 0) {\r\n                angular.isFunction(config.success) && config.success();\r\n            }\r\n            else {\r\n                angular.isFunction(config.error) && config.error({\r\n                    data: arrErrors\r\n                });\r\n            }\r\n\r\n            return dataModel;\r\n        };\n    }]);\n})();","(function (angular, window) {\r\n    'use strict';\r\n\r\n    angular\r\n       .module('SMART2')\r\n       .service('persistenceService', ['APPCONSTANTS', '$timeout', 'PLATFORMURLs', 'persistenceApiService', 'sectionsPersistenceService', 'nPlusOneService', 'masterPersistenceService', persistenceServiceFunc])\r\n       .factory('persistenceApiService', ['APPCONSTANTS', '$timeout', 'PLATFORMURLs', 'httpService', '$http', '$window', '$filter', persistenceApiServiceFunc])\r\n       .service('sectionsPersistenceService', ['APPCONSTANTS', '$timeout', 'PLATFORMURLs', 'persistenceApiService', sectionsPersistenceServiceFunc])\r\n       .service('nPlusOneService', ['APPCONSTANTS', '$window', '$timeout', 'PLATFORMURLs', 'persistenceApiService', '$state', nPlusOneServiceFunc])\r\n    .service('masterPersistenceService', ['APPCONSTANTS', '$timeout', 'PLATFORMURLs', 'persistenceApiService', 'nPlusOneService', masterPersistenceServiceFunc])\r\n\r\n\r\n    function persistenceServiceFunc(APPCONSTANTS, $timeout, PLATFORMURLs, persistenceApiService, sectionsPersistenceService, nPlusOneService, masterPersistenceService) {\r\n\r\n        var _api = persistenceApiService;\r\n        var _sectionPersistence = sectionsPersistenceService;\r\n        var _nPlusOne = nPlusOneService;\r\n        var _userData = {};\r\n        var _state = ''\r\n        var _documentType = ''\r\n        var _masterPersistenceService = masterPersistenceService\r\n\r\n        function redirectToPreviousNode(redirectToWorkspace, customUrl) {\r\n            _nPlusOne.redirectToPreviousNode(redirectToWorkspace, customUrl);\r\n        }\r\n        function getUserData(docType) {\r\n            if (typeof _userData == 'object' && typeof _userData.length == 'undefined') {\r\n                angular.extend(_userData, _api.getUserData(_api.storeLocation.DB, docType));\r\n            }\r\n        }\r\n\r\n        function updateUserData(key, value) {\r\n            if (_userData == undefined) {\r\n                _userData = {};\r\n            }\r\n            _userData[key] = value;\r\n        }\r\n        function getModelData(newConfig, modelData, unbindModelDataWatcher, initChipsWatcher) {\r\n            if (typeof newConfig.documentType != 'undefined') {\r\n                _documentType = newConfig.documentType;\r\n                _nPlusOne.getModelData(_documentType, modelData, unbindModelDataWatcher, initChipsWatcher)\r\n            }\r\n        }\r\n\r\n        function saveRecentDocument(newVal, modelData) {\r\n            _nPlusOne.saveRecentDocument(newVal, modelData);\r\n        }\r\n\r\n        function saveWorkspaceRecentDocument(newVal) {\r\n            _nPlusOne.saveWorkspaceRecentDocument(newVal);\r\n        }\r\n\r\n        function saveUserData(docType) {\r\n            if (typeof _userData == 'object' && typeof _userData.length == 'undefined') {\r\n                _api.saveUserData(_api.storeLocation.DB, docType, null, _userData);\r\n            }\r\n        }\r\n\r\n\r\n        var setDocumentFields = function (parentKey, childKey) {\r\n            _masterPersistenceService.setDocumentFields(parentKey, childKey);\r\n        }\r\n\r\n        var getDocumentFields = function (key) {\r\n            return _masterPersistenceService.getDocumentFields(key);\r\n        }\r\n\r\n\r\n        var service = {\r\n            userData: _userData,\r\n            api: _api,\r\n            sectionPersistence: _sectionPersistence,\r\n            nPlusOne: _nPlusOne,\r\n            getUserData: getUserData,\r\n            updateUserData: updateUserData,\r\n            saveUserData: saveUserData,\r\n            redirectToPreviousNode: redirectToPreviousNode,\r\n            getModelData: getModelData,\r\n            saveRecentDocument: saveRecentDocument,\r\n            saveWorkspaceRecentDocument: saveWorkspaceRecentDocument,\r\n            masterPersistenceService: _masterPersistenceService,\r\n            setDocumentFields: setDocumentFields,\r\n            getDocumentFields: getDocumentFields\r\n\r\n        }\r\n        return service;\r\n    }\r\n\r\n    function persistenceApiServiceFunc(APPCONSTANTS, $timeout, PLATFORMURLs, httpService, $http, $window, $filter) {\r\n\r\n        var _userData = {};\r\n        var _StoreLocation = {\r\n            \"DB\": 1,\r\n            \"LocalStorage\": 2,\r\n            \"SessionStorage\": 3,\r\n            \"IndexDB\": 4\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function _getUserDataFromLocalStorage(key) {\r\n\r\n            if (typeof localStorage[key] != 'undefined' && localStorage[key] != '') {\r\n                return localStorage[key];\r\n            }\r\n            return null;\r\n        };\r\n\r\n        function _getUserDataFromSessionStorage(key) {\r\n\r\n            if (typeof sessionStorage[key] != 'undefined' && sessionStorage[key] != '') {\r\n                return sessionStorage[key];\r\n            }\r\n            return null;\r\n        };\r\n\r\n        function _getUserDataFromIndexDBStorage(key) {\r\n\r\n            if (typeof indexedDB[key] != 'undefined' && indexedDB[key] != '') {\r\n                return indexedDB[key];\r\n            }\r\n            return null;\r\n        };\r\n\r\n        function _getUserDataFromDB(docType) {\r\n            var postData = {\r\n                \"contactCode\": APPCONSTANTS.userPreferences.UserBasicDetails.ContactCode,\r\n                \"partnerCode\": APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode,\r\n                \"documentType\": docType\r\n            };\r\n\r\n\r\n            $.ajax({\r\n                url: APPCONSTANTS.userPreferences.URLs.AppURL+'/getSmartActions?oloc=' + APPCONSTANTS.oloc.Persistence + \"&c=\" + APPCONSTANTS.userPreferences.EncryptedBPC,\r\n                method: \"POST\",\r\n                async: false,\r\n                dataType: 'json',\r\n                timeout: 3000,\r\n                data: JSON.stringify(postData),\r\n                contentType: \"application/json\",\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*'\r\n                },\r\n                success: function (data) {\r\n                    if (data) {\r\n                        if (data.length > 0) {\r\n                            while (typeof data == 'string') {\r\n                                data = JSON.parse(data);\r\n                            }\r\n                        }\r\n                        if (typeof data[0] != 'undefined') {\r\n                            if (typeof data[0]['events'] != 'undefined') {\r\n                                while (typeof data[0]['events'] == 'string') {\r\n                                    data[0]['events'] = JSON.parse(data[0]['events']);\r\n                                }\r\n                                _userData = data[0]['events'];\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    //userData={};\r\n                },\r\n                error: function (err) {\r\n                    //return null;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        function _setUserDataInLocalStorage(key, value) {\r\n            if (key != null && key != '') {\r\n                localStorage[key] = value;\r\n            }\r\n        };\r\n\r\n        function _setUserDataInSessionStorage(key, value) {\r\n            if (key != null && key != '') {\r\n                sessionStorage[key] = value;\r\n            }\r\n        };\r\n\r\n        function _setUserDataInIndexDBStorage(key, value) {\r\n            if (key != null && key != '') {\r\n                indexedDB[key] = value;\r\n            }\r\n        };\r\n\r\n        function _saveUserDataInDB(docType, userData, documentType) {\r\n            var request = {\r\n                method: 'POST',\r\n                params: {\r\n                    bpc: APPCONSTANTS.userPreferences.EncryptedBPC\r\n                },\r\n                url: APPCONSTANTS.userPreferences.URLs.AppURL+'/saveSmartActions?oloc=' + APPCONSTANTS.oloc.Persistence + \"&c=\" + APPCONSTANTS.userPreferences.EncryptedBPC,\r\n                header: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"UserExecutionContext\": JSON.stringify(APPCONSTANTS.userPreferences.UserBasicDetails),\r\n                    'Pragma': 'no-cache',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            };\r\n            if (typeof documentType == 'undefined') {\r\n                documentType = docType;\r\n            }\r\n\r\n            var postData = {\r\n                \"contactCode\": APPCONSTANTS.userPreferences.UserBasicDetails.ContactCode,\r\n                \"partnerCode\": APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode,\r\n                \"documentType\": documentType,\r\n                \"events\": JSON.stringify(userData)\r\n            };\r\n            request.data = angular.toJson(postData);\r\n            $http(request).then(function (response) {\r\n\r\n            })\r\n        }\r\n\r\n        function _getUserData(storeLocation, docType, key) {\r\n            if (storeLocation == 1) {\r\n                _getUserDataFromDB(docType);\r\n                return _userData;\r\n            }\r\n            else if (storeLocation == 2) {\r\n                return _getUserDataFromLocalStorage(key);\r\n            }\r\n            else if (storeLocation == 3) {\r\n                return _getUserDataFromSessionStorage(key);\r\n            }\r\n            else if (storeLocation == 4) {\r\n                return _getUserDataFromIndexDBStorage(key);\r\n            }\r\n        };\r\n\r\n        function _saveUserData(storeLocation, docType, key, value, documentType) {\r\n            if (storeLocation == 1) {\r\n                _saveUserDataInDB(docType, value, documentType);\r\n            }\r\n            else if (storeLocation == 2) {\r\n                _setUserDataInLocalStorage(key, value);\r\n            }\r\n            else if (storeLocation == 3) {\r\n                _setUserDataInSessionStorage(key, value);\r\n            }\r\n            else if (storeLocation == 4) {\r\n                _setUserDataInIndexDBStorage(key, value);\r\n            }\r\n        };\r\n\r\n\r\n        function _getMasterUserDataFromDB(Param, key, returnValue) {\r\n            var postData = {\r\n                \"contactCode\": APPCONSTANTS.userPreferences.UserBasicDetails.ContactCode,\r\n                \"partnerCode\": APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode,\r\n                \"cultureCode\": APPCONSTANTS.userPreferences.UserCountryCultureInfo\r\n                \r\n            };\r\n            angular.extend(postData, Param);\r\n\r\n            $.ajax({\r\n                url: APPCONSTANTS.userPreferences.URLs.AppURL + '/getPersistanceSmartData?oloc=' + APPCONSTANTS.oloc.Persistence,\r\n                //url: 'https://smartdev.gep.com' + '/getPersistanceSmartData?oloc=' + APPCONSTANTS.oloc.Persistence,\r\n                method: \"POST\",\r\n                async: true,\r\n                dataType: 'json',\r\n                timeout: 3000,\r\n                data: JSON.stringify(postData),\r\n                contentType: \"application/json\",\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*'\r\n                },\r\n                success: function (data) {\r\n                    if (data) {\r\n                        if (data.length > 0) {\r\n                            while (typeof data == 'string') {\r\n                                data = JSON.parse(data);\r\n                            }\r\n                        }\r\n\r\n                        if (data.hasOwnProperty('data')) {\r\n                            var _masterData = {};\r\n                            var obj = data['data'];\r\n\r\n                            var attrList = Object.keys(obj);\r\n                            var i = 0;\r\n                            for (i; i < attrList.length; i++) {\r\n                                if (returnValue.hasOwnProperty(attrList[i]) && returnValue[attrList[i]].length > 0) {\r\n                                    returnValue[attrList[i]].splice(0, returnValue[attrList[i]].length - 1);\r\n                                } else {\r\n                                    returnValue[attrList[i]] = [];\r\n                                }\r\n                                \r\n                                angular.extend(returnValue[attrList[i]], obj[attrList[i]]);\r\n                            }                            \r\n                        }\r\n                    }                   \r\n                },\r\n                error: function (err) {\r\n                    \r\n                }\r\n            });\r\n        }\r\n\r\n        function _saveMasterUserDataToDB(Param, key, returnValue) {\r\n            var postData = {\r\n                \"contactCode\": APPCONSTANTS.userPreferences.UserBasicDetails.ContactCode,\r\n                \"partnerCode\": APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode,\r\n                \"cultureCode\": APPCONSTANTS.userPreferences.UserCountryCultureInfo\r\n            };\r\n            angular.extend(postData, Param);\r\n\r\n            $.ajax({\r\n                url: APPCONSTANTS.userPreferences.URLs.AppURL + '/savePersistanceSmartData?oloc=' + APPCONSTANTS.oloc.Persistence,\r\n                method: \"POST\",\r\n                async: true,\r\n                dataType: 'json',            \r\n                data: JSON.stringify(postData),\r\n                contentType: \"application/json\",\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*'\r\n                },\r\n                success: function (data) {\r\n                    if (data) {\r\n                        if (data.length > 0) {\r\n                            while (typeof data == 'string') {\r\n                                data = JSON.parse(data);\r\n                            }\r\n                        }\r\n                        if (data.hasOwnProperty('data')) {\r\n                            var _masterData = {};\r\n                            var obj = data['data'];                       \r\n                            var attrList = Object.keys(obj);\r\n                            var i = 0;\r\n                            for (i; i < attrList.length; i++) {\r\n                                if (returnValue.hasOwnProperty(attrList[i]) && returnValue[attrList[i]].length > 0) {\r\n                                    returnValue[attrList[i]].splice(0, returnValue[attrList[i]].length - 1);\r\n                                }\r\n                                else {\r\n                                    returnValue[attrList[i]] = [];\r\n                                }\r\n                                \r\n                                angular.extend(returnValue[attrList[i]], obj[attrList[i]]);\r\n                            }                            \r\n                        }                 \r\n                    }\r\n            \r\n                },\r\n                error: function (err) {\r\n                    \r\n                }\r\n            });\r\n        }\r\n                \r\n\r\n        var service = {\r\n            storeLocation: _StoreLocation,\r\n            getUserData: _getUserData,\r\n            saveUserData: _saveUserData,\r\n            userData: _userData,\r\n            getMasterUserDataFromDB: _getMasterUserDataFromDB,\r\n            saveMasterUserDataToDB: _saveMasterUserDataToDB\r\n        }\r\n        return service;\r\n    }\r\n\r\n    function sectionsPersistenceServiceFunc(APPCONSTANTS, $timeout, PLATFORMURLs, persistenceApiService) {\r\n\r\n        var _userData = {};\r\n\r\n\r\n        function _getSections(jsonObj) {\r\n            try {\r\n                if (typeof jsonObj['sections'] != 'undefined') {\r\n                    return jsonObj['sections'];\r\n                }\r\n                return [];\r\n            } catch (err) { }\r\n            return [];\r\n        }\r\n\r\n        function _setState(key, value) {\r\n            if (typeof _userData[0] == 'undefined') {\r\n                _userData = {};\r\n            }\r\n            _state = key;\r\n            _userData[key] = value;\r\n        }\r\n\r\n        function _setUserData(key, value) {\r\n            try {\r\n                if (_state != '') {\r\n                    _userData[_state][key] = value;\r\n                } else {\r\n                    _userData[key] = value;\r\n                }\r\n\r\n            } catch (err) { }\r\n            // return [];\r\n        }\r\n\r\n        function getSectionsPersistence(formConfig, userData) {\r\n            if (formConfig && typeof formConfig.documentType != 'undefined') {\r\n                //persistenceService.getUserData(formConfig.documentType);\r\n                var usersSections = _getSections(userData);\r\n                if (usersSections) {\r\n                    if (usersSections.length > 0) {\r\n                        var sIndex = 100;\r\n                        angular.forEach(formConfig.sections, function (section) {\r\n                            if (typeof section.id != 'undefined') {\r\n                                for (var i = 0; i < usersSections.length; i++) {\r\n                                    if (section.id == usersSections[i]) {\r\n                                        section.sectionIndex = i;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                sIndex++;\r\n                                section.sectionIndex = sIndex;\r\n                            }\r\n                        });\r\n                        formConfig.sections = _.sortBy(formConfig.sections, 'sectionIndex');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n\r\n\r\n        var service = {\r\n            getSectionsPersistence: getSectionsPersistence,\r\n\r\n            setState: _setState,\r\n            setUserData: _setUserData\r\n        }\r\n        return service;\r\n    }\r\n\r\n    function nPlusOneServiceFunc(APPCONSTANTS, $window, $timeout, PLATFORMURLs, persistenceApiService, $state) {\r\n        var newDocFlag = false;\r\n        var docDetailsTemplate = {};\r\n        var docDetails = {};\r\n        var dirtyCheck = [];\r\n        var docType = -10;\r\n        var selectedSectionId = '';\r\n        var states = ['/rfx/edit/:id', '/supplier/scorecard', '/supplier/form', '/contract/:id','/supplier/profile'];\r\n        function _redirectToPreviousNode(redirectToWorkspace, customUrl) {\r\n            var goHistoryMinus1=false;\r\n            if ($state.current.url.indexOf('rfx') > -1 ||\r\n\t\t\t\t$state.current.url.indexOf('scorecard') > -1 ||\r\n\t\t\t\t$state.current.url.indexOf('form') > -1) {\r\n                if (states.indexOf($state.current.url) > -1) {\r\n                    goHistoryMinus1=false;\r\n                }\r\n                else{\r\n                    goHistoryMinus1=true;\r\n                }\r\n            }\r\n\r\n            if (typeof customUrl != 'undefined' && customUrl != null) {\r\n                window.location.href = customUrl;\r\n                return;\r\n            }  \r\n\r\n            if(!goHistoryMinus1){\r\n                if (!_historyIsEmpty()) {\r\n                    if (typeof sessionStorage.workspace2_Enabled != \"undefined\") {\r\n                        if (sessionStorage.workspace2_Enabled == true || sessionStorage.workspace2_Enabled == 'true') {\r\n                            var recDocs = persistenceApiService.getUserData(persistenceApiService.storeLocation.SessionStorage, '', 'recentDocuments');\r\n                            if (typeof recDocs != 'undefined' && recDocs != null && recDocs != 'undefined') {\r\n                                if (typeof recDocs == 'string') {\r\n                                    recDocs = JSON.parse(recDocs)\r\n                                    if (recDocs.length == 0) {\r\n                                        recDocs = [];\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (recDocs.length > 1) {\r\n                                if (recDocs.length > 2) {\r\n                                    if ((recDocs[recDocs.length - 1].hasOwnProperty('docType')) && (recDocs[recDocs.length - 1].docType == 1 || recDocs[recDocs.length - 1].docType == 5 || recDocs[recDocs.length - 1].docType == 6)) {\r\n                                        if ((recDocs[recDocs.length - 2].hasOwnProperty('docType')) && (recDocs[recDocs.length - 2].hasOwnProperty('docCode'))) {\r\n                                            if ((recDocs[recDocs.length - 2].docType == -9) && (recDocs[recDocs.length - 2].docCode.search(\"landingmax\") != -1) && (recDocs[recDocs.length - 2].docCode.search(\"template\") != -1)) {\r\n                                                if ((recDocs[recDocs.length - 3].hasOwnProperty('docType')) && (recDocs[recDocs.length - 3].docType == 21)) {\r\n                                                    var prevDoc = recDocs[recDocs.length - 3];\r\n                                                    recDocs.splice(recDocs.length - 2, 2);\r\n                                                    sessionStorage.recentDocuments = JSON.stringify(recDocs);\r\n                                                    if (typeof customUrl != 'undefined') {\r\n                                                        window.location.href = customUrl;\r\n                                                    }\r\n                                                    else {\r\n                                                        if (prevDoc.hasOwnProperty('urlFormat') && prevDoc.urlFormat == \"\") {\r\n                                                            //recDocs.splice(recDocs.length - 2, 2);\r\n                                                            //sessionStorage.recentDocuments = JSON.stringify(recDocs);\r\n                                                            history.go(-1);\r\n                                                        }\r\n                                                        else {\r\n                                                            window.location.href = buildUrl(prevDoc);\r\n                                                        }\r\n\r\n                                                    }\r\n                                                    return;\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                }        \r\n\r\n                                var prevDoc = recDocs[recDocs.length - 2];\r\n                                if (window.location.pathname == '/PPST/Project/Index') {\r\n                                    history.go(-1);\r\n                                }\r\n                                else if (prevDoc.hasOwnProperty('urlFormat') && prevDoc.urlFormat != \"\" && prevDoc.urlFormat.indexOf('PPST/QuickCreate/QuickCreateProject') > -1) {\r\n                                    prevDoc = recDocs[recDocs.length - 3];\r\n                                    recDocs.splice(recDocs.length - 2, 2);\r\n                                    sessionStorage.recentDocuments = JSON.stringify(recDocs);\r\n                                    window.location.href = buildUrl(prevDoc);\r\n                                }\r\n                                else {\r\n                                    recDocs.splice(recDocs.length - 1, 1);\r\n                                    sessionStorage.recentDocuments = JSON.stringify(recDocs);\r\n\r\n                                    if (typeof customUrl != 'undefined') {\r\n                                        window.location.href = customUrl;\r\n                                    }\r\n                                    else {\r\n                                        if (prevDoc.hasOwnProperty('urlFormat') && prevDoc.urlFormat == \"\") {\r\n\r\n                                            recDocs.splice(recDocs.length - 1, 1);\r\n                                            sessionStorage.recentDocuments = JSON.stringify(recDocs);\r\n                                            history.go(-1);\r\n                                        }\r\n                                        else {\r\n                                            window.location.href = buildUrl(prevDoc);\r\n                                        }\r\n\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else { history.go(-1); }\r\n                    }            \r\n                }\r\n                else {\r\n                    if (typeof redirectToWorkspace != 'undefined' && redirectToWorkspace == true) {\r\n                        window.location.href = APPCONSTANTS.appContextUrl;\r\n                    }\r\n                    else if (typeof customUrl != 'undefined') {\r\n                        window.location.href = customUrl;\r\n                    }\r\n                    else {\r\n                        history.go(-1);\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                history.go(-1);\r\n            }\r\n\r\n\r\n            //var currentURL = $window.location.href;\r\n            //if (currentURL.indexOf('rfx/edit') > -1)\r\n            //    history.go(-2);\r\n            //else\r\n            //    history.go(-1);\r\n        };\r\n        function _historyIsEmpty() {\r\n            if (typeof sessionStorage.recentDocuments != 'undefined' && sessionStorage.recentDocuments != \"\" && sessionStorage.recentDocuments != null) {\r\n                var recentDocsLength = JSON.parse(sessionStorage.recentDocuments)\r\n                if (history.length >= 1 && recentDocsLength.hasOwnProperty('length') && recentDocsLength.length == 1) {\r\n                    return true;\r\n                }\r\n                else if (history.length > 1 && recentDocsLength.hasOwnProperty('length') && recentDocsLength.length > 1) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (history.length > 1) {\r\n                    return false;\r\n                }\r\n               \r\n            }\r\n            return true;\r\n        }\r\n\r\n        function buildUrl(docDetails) {\r\n            var docUrl = '';\r\n            if (docDetails.docType == -9) {\r\n                docUrl = docDetails.docCode;\r\n            } else\r\n            {\r\n                docUrl = docDetails.urlFormat;\r\n            }\r\n            if (docUrl.search('//') == 0 && docUrl.search('//') != -1) {\r\n                docUrl = docUrl.replace('//', '/');\r\n            }\r\n            return docUrl;\r\n        }\r\n\r\n        function getDocDataOnChip(documentType) {\r\n\r\n            switch (documentType) {\r\n                //RFX\r\n                case 1: docDetails =\r\n                    {\r\n                        \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"setup.EventName\" },\r\n                        //{ \"key\": \"docNumber\", \"value\": \"\" },\r\n                        { \"key\": \"docCode\", \"value\": \"setup.DocumentCode\" }],\r\n                        \"docConditions\": { \"initialCondition\": \"\" },\r\n                        \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                        \"dd\": \"dc={docCode}&bpc={bpc}\",\r\n                        \"urlFormat\": \"/Sourcing/Rfx?oloc=\" + APPCONSTANTS.oloc.rfxOloc + \"&dd={}\"\r\n                        //https://smartqc.gep.com//Sourcing/Rfx?oloc=216&dd=ZGM9MTc3NTImYnBjPTQ0MzUxNQ2 \r\n                    };\r\n                    return docDetails;\r\n\r\n                    //Invoice\r\n                case 9:\r\n                    docDetails =\r\n                        {\r\n                            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"InvoiceData.name\" },\r\n                            { \"key\": \"docNumber\", \"value\": \"InvoiceData.number\" },\r\n                            { \"key\": \"docCode\", \"value\": \"InvoiceData.documentCode\" }],\r\n                            \"docConditions\": { \"initialCondition\": \"typeof modelData.InvoiceData.documentCode != 'undefined' && modelData.InvoiceData.documentCode > 0 && typeof modelData.InvoiceData.number != 'undefined' && modelData.InvoiceData.number != null\" },\r\n                            \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                            \"dd\": \"dc={docCode}&bpc={bpc}&st=15\",\r\n                            \"urlFormat\": \"/P2P/Invoice?dd={}&oloc=\" + APPCONSTANTS.oloc.invoiceOloc + \"#/invoice\"\r\n\r\n                        };\r\n                    return docDetails;\r\n\r\n                    //Order\r\n                case 8:\r\n                    docDetails =\r\n                        {\r\n                            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"orderData.name\" },\r\n                            { \"key\": \"docNumber\", \"value\": \"orderData.number\" },\r\n                            { \"key\": \"docCode\", \"value\": \"orderData.documentCode\" }],\r\n                            \"docConditions\": { \"initialCondition\": \"typeof modelData.orderData.documentCode != 'undefined' && modelData.orderData.documentCode > 0 && typeof modelData.orderData.number != 'undefined' && modelData.orderData.number != null\" },\r\n                            \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                            \"dd\": \"dc={docCode}&bpc={bpc}&st=15\",\r\n                            \"urlFormat\": \"/P2P/Order?dd={}&oloc=\" + APPCONSTANTS.oloc.orderOloc + \"#/po\"\r\n\r\n                        };\r\n                    return docDetails;\r\n\r\n                    //Requisition\r\n                case 7:\r\n                    docDetails =\r\n                        {\r\n                            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"ReqData.name\" },\r\n                            { \"key\": \"docNumber\", \"value\": \"ReqData.number\" },\r\n                            { \"key\": \"docCode\", \"value\": \"ReqData.documentCode\" }],\r\n                            \"docConditions\": { \"initialCondition\": \"typeof modelData.ReqData.documentCode!= 'undefined' && typeof modelData.ReqData.number!= 'undefined' && modelData.ReqData.number != '' \" },\r\n                            \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                            \"dd\": \"dc={docCode}&bpc={bpc}&st=15\",\r\n                            \"urlFormat\": \"/P2P/Index?dd={}&oloc=\" + APPCONSTANTS.oloc.reqOloc + \"#/requisitions/{}\"\r\n                            //https://smartdev.gep.com/P2P/Index?dd=ZGM9MCZicGM9Mjg2Mjkmc3Q9MQ2&oloc=216#/requisitions/ZGM9MCZicGM9Mjg2Mjkmc3Q9MQ2\r\n                        };\r\n                    return docDetails;\r\n\r\n                    //IR\r\n                case 14:\r\n                    docDetails =\r\n                        {\r\n                            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"IRData.name\" },\r\n                            { \"key\": \"docNumber\", \"value\": \"IRData.number\" },\r\n                            { \"key\": \"docCode\", \"value\": \"IRData.documentCode\" }],\r\n                            \"docConditions\": { \"initialCondition\": \"typeof modelData.IRData.documentCode != 'undefined' && modelData.IRData.documentCode > 0\" },\r\n                            \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                            \"dd\": \"dc={docCode}&bpc={bpc}&st=15\",\r\n                            \"urlFormat\": \"/P2P/IR?dd={}&oloc=\" + APPCONSTANTS.oloc.irOloc + \"#/ir\"\r\n                            //https://smartdev.gep.com/P2P/IR?dd=ZGM9MCZicGM9Mjg2Mjkmc3Q9MQ2&oloc=225#/ir\r\n                        };\r\n                    return docDetails;\r\n\r\n\r\n                    ////Receipts\r\n                    //case 11:  \r\n                    //    docDetails = \r\n                    //        {\r\n                    //            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"\" },\r\n                    //                         { \"key\": \"docNumber\", \"value\": \"\" },\r\n                    //                         { \"key\": \"docCode\", \"value\": \"\" }],\r\n                    //            \"docConditions\": { \"initialCondition\":  }\r\n                    //        };\r\n                    //    return docDetails;\r\n\r\n                    //Forms\r\n                case 11:\r\n                    docDetails =\r\n                        {\r\n                            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"setup.formName\" },\r\n                            //{ \"key\": \"docNumber\", \"value\": \"\" },\r\n                            { \"key\": \"docCode\", \"value\": \"$('#hdnFormCode').val()\" }],\r\n                            \"docConditions\": { \"initialCondition\": \"\" },\r\n                            \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                            \"dd\": \"dc={docCode}&bpc={bpc}&st=15\",\r\n                            \"urlFormat\": \"/PartnerManagement/Form/CreateForm?dd={}&oloc=\" + APPCONSTANTS.oloc.formOloc\r\n                            //https://smartdev.gep.com/PartnerManagement/Form/CreateForm?dd=ZGM9MCZicGM9Mjg2Mjkmc3Q9MQ2&oloc=105 \r\n                        };\r\n                    return docDetails;\r\n\r\n                    //Assessment or scorecard\r\n                case 12:\r\n                    docDetails =\r\n                        {\r\n                            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"setup.name\" },\r\n                            // { \"key\": \"docNumber\", \"value\": \"\" },\r\n                            { \"key\": \"docCode\", \"value\": \"$('#hdnAssessmentCode').val()\" }],\r\n                            \"docConditions\": { \"initialCondition\": \"typeof modelData.setup.name != 'undefined' && modelData.setup.name != '' \" },\r\n                            \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                            \"dd\": \"dc={docCode}&bpc={bpc}&st=15\",\r\n                            \"urlFormat\": \"/supplierManagement/Scorecard?dd={}&oloc=\" + APPCONSTANTS.oloc.scorcardOloc + \"#/supplier/scorecard\"\r\n                            //https://smartqc.gep.com/supplierManagement/Scorecard?dd=ZGM9MCZicGM9NDQzNTE1JnN0PTE1&oloc=216#/supplier/scorecard\r\n\r\n                        };\r\n                    return docDetails;\r\n\r\n                    //Partnerprofile\r\n                case 19: docDetails =\r\n                    {\r\n                        \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"partnerDetails.objPartnerDetails.LegalCompanyName\" },\r\n                        { \"key\": \"docCode\", \"value\": \"partnerDetails.objPartnerDetails.PartnerCode\" }],\r\n                        \"docConditions\": { \"initialCondition\": \"\" },\r\n                        \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                        \"dd\": \"spc={docCode}&bpc={bpc}\",\r\n                        \"urlFormat\": \"/supplierManagement/Profile?dd={}&oloc=\" + APPCONSTANTS.oloc.partnerOloc + \"#/supplier/profile\"\r\n                        // https://smartqc.gep.com/supplierManagement/Profile?dd=c3BjPTUxMjU2MyZicGM9NDQzNTE10&oloc=216#/supplier/profile \r\n                    };\r\n                    return docDetails;\r\n\r\n                    //P2P Contract\r\n                case 5: docDetails =\r\n                    {\r\n                        \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"ContractInfo.ContractDetails.DocumentName \" },\r\n                        { \"key\": \"docNumber\", \"value\": \"ContractInfo.ContractDetails.DocumentNumber\" },\r\n                        { \"key\": \"docCode\", \"value\": \"ContractInfo.ContractDetails.DocumentCode \" }],\r\n                        \"docConditions\": { \"initialCondition\": \"typeof modelData.ContractInfo.ContractDetails.DocumentCode != 'undefined' &&  modelData.ContractInfo.ContractDetails.DocumentCode > 0 && typeof modelData.ContractInfo.ContractDetails.DocumentNumber != 'undefined' && modelData.ContractInfo.ContractDetails.DocumentNumber != null  && typeof modelData.ContractInfo.ContractDetails.DocumentName != 'undefined' && modelData.ContractInfo.ContractDetails.DocumentName != null\" },\r\n                        \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                        \"dd\": \"dc={docCode}&bpc={bpc}&st=15\",\r\n                        \"urlFormat\": \"/Contract/ContractInfo/Index?oloc=\" + APPCONSTANTS.oloc.contractOloc + \"&dd={}&dt=5#/contract/new\"\r\n                        //https://smartqc.gep.com/Contract/ContractInfo/Index?oloc=104&dd=ZGM9MCZicGM9NDQyMjQ1JnN0PTE1&dt=5#/contract/new  \r\n                    };\r\n                    return docDetails;\r\n\r\n                    //Catalog \r\n                    //no user\r\n                case 6: docDetails =\r\n                    {\r\n                        \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"\" },\r\n                        { \"key\": \"docNumber\", \"value\": \"\" },\r\n                        { \"key\": \"docCode\", \"value\": \"\" }],\r\n                        \"docConditions\": { \"initialCondition\": \"\" },\r\n                        \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\"\r\n                    };\r\n                    return docDetails;\r\n\r\n                    //Auction\r\n                    //case 6: docDetails = \r\n                    //    {\r\n                    //        \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"\" },\r\n                    //                     { \"key\": \"docNumber\", \"value\": \"\" },\r\n                    //                     { \"key\": \"docCode\", \"value\": \"\" }],\r\n                    //        \"docConditions\": { \"initialCondition\":  }\r\n                    //    };\r\n                    //    return docDetails;\r\n\r\n                    //Project\r\n                    //case 6: docDetails =\r\n                    //    {\r\n                    //        \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"\" },\r\n                    //        { \"key\": \"docNumber\", \"value\": \"\" },\r\n                    //        { \"key\": \"docCode\", \"value\": \"\" }],\r\n                    //        \"docConditions\": { \"initialCondition\": \"\" },\r\n                    //        \"bpc\": \"\",\r\n                    //        \"urlFormat\": \"/req/Index?dd={dc={docCode}&bpc={bpc}&st=15}\"\r\n                    //    };\r\n                    //    return docDetails;\r\n\r\n                    //Project\r\n                case 21:\r\n                    docDetails =\r\n                        {\r\n                            \"docAttrs\": [{ \"key\": \"docName\", \"value\": \"Project.Title\" },\r\n                            { \"key\": \"docNumber\", \"value\": \"Project.DocumentNumber\" },\r\n                            { \"key\": \"docCode\", \"value\": \"Project.DocumentCode\" }],\r\n                            \"docConditions\": { \"initialCondition\": \"\" },\r\n                            \"bpc\": \"APPCONSTANTS.userPreferences.UserBasicDetails.BuyerPartnerCode\",\r\n                            \"dd\": \"dc={docCode}&bpc={bpc}\",\r\n                            \"urlFormat\": \"/?dd={}&oloc=\" + APPCONSTANTS.oloc.projectOloc + \"#/ppst/edit?dd={}\"\r\n                            //https://smartqc.gep.com/?dd=ZGM9MTc1NzUmYnBjPTQ0MzUxNQ2&oloc=223#/ppst/edit?dd=ZGM9MTc1NzUmYnBjPTQ0MzUxNQ2 \r\n                        };\r\n                    return docDetails;\r\n            }\r\n\r\n        }\r\n\r\n        function getModelData(documentType, modelData, unbindModelDataWatcher, initChipsWatcher) {\r\n            docType = documentType;\r\n            var docDetailsTemplate = {};\r\n            docDetailsTemplate = getDocDataOnChip(documentType);\r\n            var listOfDocData = {};\r\n            var ModelAttrList = [];\r\n            if (typeof docDetailsTemplate != 'undefined' && typeof docDetailsTemplate.docAttrs != 'undefined') {\r\n                docDetailsTemplate.docAttrs.forEach(function (obj) {\r\n                    listOfDocData[obj.key] = \"\";\r\n                    var modelAttrs = obj.value.split('.');\r\n                    var tempObj;\r\n                    ModelAttrList.push('modelData.' + obj.value)\r\n\r\n                });\r\n\r\n                if (ModelAttrList.length > 0) {\r\n                    initChipsWatcher(ModelAttrList);\r\n                    unbindModelDataWatcher();\r\n                }\r\n            } else {\r\n                unbindModelDataWatcher();\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function saveRecentDocument(newVal, modelData) {\r\n            console.log(APPCONSTANTS.userPreferences);\r\n            try {\r\n                var enableSave = true;\r\n                // if (docDetails.docConditions.initialCondition!= \"\" )\r\n                // {\r\n                //     // try{\r\n                //     //     if(eval(docDetails.docConditions.initialCondition) != true){\r\n                //     //         enableSave=false;\r\n                //     //     }\r\n                //     // }catch(err)\r\n                //     // {\r\n                //     //     console.log(err);\r\n                //     // }\r\n\r\n                // }\r\n                if (docDetails.hasOwnProperty('bpc')) {\r\n                    try {\r\n                        docDetails.bpc = eval(docDetails.bpc);\r\n                    } catch (e) {\r\n                        enableSave = false;\r\n                    }\r\n                }\r\n\r\n                if (enableSave) {\r\n                    var currentDoc = {};\r\n                    for (var i = 0; i < docDetails.docAttrs.length; i++) {\r\n                        if (docDetails.docAttrs[i].value.indexOf('$') > -1) {\r\n                            currentDoc[docDetails.docAttrs[i].key] = eval(docDetails.docAttrs[i].value);\r\n                        }\r\n                        else {\r\n                            if (typeof newVal[i] != 'undefined' && newVal[i] != undefined) {\r\n                                currentDoc[docDetails.docAttrs[i].key] = newVal[i];\r\n                            }\r\n                            else\r\n                            {\r\n                                enableSave = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (enableSave) {\r\n                        if (currentDoc['docCode'].toString() == '0' || currentDoc['urlFormat'] == \"\")\r\n                        {\r\n                            newDocFlag = true;\r\n                         }\r\n                        if (docDetails.hasOwnProperty('urlFormat')) {\r\n                            if (docType == 5 && currentDoc['docCode']!= 0) {\r\n                                docDetails.urlFormat = \"/Contract/ContractInfo/Index?oloc=\" + APPCONSTANTS.oloc.contractOloc + \"&dd={}&dt=5#/contract/{}\";\r\n                                currentDoc['urlFormat'] = docDetails.urlFormat;\r\n\r\n                            }\r\n                            else\r\n                                currentDoc['urlFormat'] = docDetails.urlFormat;\r\n\r\n                        }\r\n\r\n                        if (docDetails.hasOwnProperty('bpc')) {\r\n                            currentDoc['bpc'] = docDetails.bpc;\r\n                        }\r\n\r\n                        if (docDetails.hasOwnProperty('dd')) {\r\n                            currentDoc['dd'] = docDetails.dd;\r\n                        }\r\n                        currentDoc['docType'] = docType;\r\n                        currentDoc['selectedSectionId'] = selectedSectionId;\r\n                        //Save in localStorage\r\n                        saveRecentDoc(persistenceApiService.storeLocation.LocalStorage, currentDoc);\r\n                        // Save in SessionStorage\r\n                        saveRecentDoc(persistenceApiService.storeLocation.SessionStorage, currentDoc);\r\n                        //Save in DB\r\n                        saveRecentDoc(persistenceApiService.storeLocation.DB, currentDoc, '-9');\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n\r\n        function saveWorkspaceRecentDocument(newVal) {\r\n            console.log(APPCONSTANTS.userPreferences);\r\n            try {\r\n                var enableSave = true;\r\n\r\n\r\n                if (enableSave) {\r\n                    var currentDoc = {};\r\n\r\n                    currentDoc['docName'] = newVal.docName;\r\n                    currentDoc['docCode'] = newVal.docCode ;\r\n                    currentDoc['urlFormat'] ='/'+ newVal.urlFormat.replace(APPCONSTANTS.userPreferences.URLs.AppURL, \"\");\r\n                    if (currentDoc['urlFormat'].search('//') == 0 && currentDoc['urlFormat'].search('//') != -1)\r\n                    {\r\n                        currentDoc['urlFormat'] = currentDoc['urlFormat'].replace('//', '/')\r\n                    }\r\n                    currentDoc['docType'] = newVal.docType;\r\n\r\n                    // Save in SessionStorage\r\n                    saveRecentDoc(persistenceApiService.storeLocation.SessionStorage, currentDoc);\r\n                    //Save in DB\r\n                    saveRecentDoc(persistenceApiService.storeLocation.DB, currentDoc, '-9');\r\n\r\n                }\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n\r\n        function saveRecentDoc(locationStore, currentDoc, documentType) {\r\n            if (locationStore != persistenceApiService.storeLocation.DB) {\r\n                var recentDocsHistoryLength = 10;\r\n                var recentDocs = persistenceApiService.getUserData(locationStore, 0, 'recentDocuments');\r\n                if (typeof recentDocs != 'undefined' && recentDocs != null && recentDocs != 'undefined') {\r\n                    if (typeof recentDocs == 'string') {\r\n                        recentDocs = JSON.parse(recentDocs)\r\n                        if (recentDocs.length == 0) {\r\n                            recentDocs = [];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    recentDocs = [];\r\n                }\r\n                var lastIndex = recentDocs.length;\r\n\r\n                var jObj = {};\r\n                if (typeof currentDoc.dd != 'undefined') {\r\n                    if(currentDoc.docCode == 0){\r\n                        currentDoc.dd = currentDoc.dd.replace(\"{docCode}\", currentDoc.docCode);\r\n                        currentDoc.dd = currentDoc.dd.replace(\"{bpc}\", currentDoc.bpc);\r\n                        var encodedString = encode(currentDoc.dd);\r\n                    }\r\n                    else\r\n                    {\r\n                        var ddVal = window.location.href;\r\n                        ddVal = ddVal.match(/(dd=)(\\w+)/g);//(/((?<=\\&dd=)(.*?)(?=\\&|\\#))/g);\r\n                        if (typeof ddVal != \"string\") {\r\n                            var encodedString = ddVal[0].replace('dd=', '');\r\n                        }\r\n                        else {\r\n                            var encodedString = ddVal.replace('dd=', '');\r\n                        }\r\n                    }\r\n                }\r\n                if (typeof currentDoc.urlFormat != 'undefined') {\r\n                    if (newDocFlag == false) {\r\n                        currentDoc.urlFormat = currentDoc.urlFormat.replace(\"{}\", encodedString);\r\n                        if (currentDoc.docType == 7 || currentDoc.docType == 21)\r\n                        {\r\n                            currentDoc.urlFormat = currentDoc.urlFormat.replace(\"{}\", encodedString);\r\n                        }\r\n                        currentDoc.urlFormat = currentDoc.urlFormat.replace(\"==\", 2);\r\n                    }\r\n                    else\r\n                    {\r\n                        currentDoc.urlFormat = \"\";\r\n                    }\r\n                }\r\n                if (recentDocs.length > recentDocsHistoryLength) {\r\n                    recentDocs.shift();\r\n                //console.log(recentDocs);\r\n                }\r\n\r\n                if (locationStore == persistenceApiService.storeLocation.SessionStorage) {\r\n\r\n                    var documentIsExist = false;\r\n                    if (recentDocs.length >= 1) {\r\n                        var previousDoc = recentDocs.length - 1;\r\n                        if (recentDocs[previousDoc].docType == currentDoc.docType) {\r\n                            if (recentDocs[previousDoc].docCode == 0 || (recentDocs[previousDoc].docCode == currentDoc.docCode)) {\r\n                                   var compareDocs = JSON.stringify(recentDocs[previousDoc]) === JSON.stringify(currentDoc)\r\n                                    documentIsExist = true;\r\n                                    if (compareDocs == false) {\r\n                                        angular.extend(recentDocs[previousDoc], currentDoc)\r\n                                    }\r\n                                }\r\n                            }                     \r\n                    }\r\n                    if (documentIsExist == false) {\r\n                        recentDocs.push(currentDoc);\r\n                        if (recentDocs.length > recentDocsHistoryLength) {\r\n                            recentDocs.shift();\r\n                        }\r\n                    }\r\n                    persistenceApiService.saveUserData(locationStore, 0, 'recentDocuments', JSON.stringify(recentDocs));\r\n                }\r\n                else if (locationStore == persistenceApiService.storeLocation.LocalStorage) {\r\n                    if (currentDoc.docCode > 0) {\r\n                        var documentIsExist = false;\r\n                        if (recentDocs.length > 0) {\r\n                            for (var i = recentDocs.length - 1; i >= 0; i--) {\r\n                                if (recentDocs[i].docType == currentDoc.docType) {\r\n                                    if (recentDocs[i].docCode == currentDoc.docCode) {\r\n                                        var compareDocs = JSON.stringify(recentDocs[i]) === JSON.stringify(currentDoc)\r\n                                        documentIsExist = true;\r\n                                        if (compareDocs == false) {\r\n                                            angular.extend(recentDocs[i], currentDoc);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                }\r\n                if (documentIsExist == false) {\r\n                    recentDocs.push(currentDoc);\r\n                            if (recentDocs.length > recentDocsHistoryLength) {\r\n                                recentDocs.shift();\r\n                }\r\n                }\r\n                persistenceApiService.saveUserData(locationStore, 0, 'recentDocuments', JSON.stringify(recentDocs));\r\n            }\r\n\r\n            }\r\n            }\r\n            else if (locationStore == persistenceApiService.storeLocation.DB) {\r\n                if (typeof currentDoc.dd != 'undefined') {\r\n                    currentDoc.dd = currentDoc.dd.replace(\"{docCode}\", currentDoc.docCode);\r\n                    currentDoc.dd = currentDoc.dd.replace(\"{bpc}\", currentDoc.bpc);\r\n                }\r\n                var encodedString = encode(currentDoc.dd);\r\n                if (typeof currentDoc.urlFormat != 'undefined') {\r\n                    currentDoc.urlFormat = currentDoc.urlFormat.replace(\"{}\", encodedString);\r\n                    if (currentDoc.docType == 7 || currentDoc.docType == 21) {\r\n                        currentDoc.urlFormat = currentDoc.urlFormat.replace(\"{}\", encodedString);\r\n            }\r\n                }\r\n                if (currentDoc.docCode > 0 && currentDoc.docType != -9) {\r\n\r\n                    var recentDocuments = {};\r\n                    recentDocuments['recentDocuments'] = [];\r\n                    recentDocuments.recentDocuments.push(currentDoc)\r\n\r\n\r\n                    persistenceApiService.saveUserData(locationStore, 0, 'recentDocuments', recentDocuments, documentType);\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        var saveSelectedSection = function (SectionId) {\r\n            if (docType != -10) {\r\n                var recentDocs = persistenceApiService.getUserData(persistenceApiService.storeLocation.SessionStorage, 0, 'recentDocuments');\r\n                if (typeof recentDocs != 'undefined' && recentDocs != null) {\r\n                    if (typeof recentDocs == 'string') {\r\n                        recentDocs = JSON.parse(recentDocs)\r\n                        if (recentDocs.length > 0) {\r\n                            var lastIndex = recentDocs.length;\r\n                            var recentDoc = recentDocs[lastIndex - 1];\r\n                            recentDoc.selectedSectionId = SectionId;\r\n                            persistenceApiService.saveUserData(persistenceApiService.storeLocation.SessionStorage, 0, 'recentDocuments', JSON.stringify(recentDocs));\r\n                            selectedSectionId = SectionId;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        var getSelectedSection = function () {\r\n            if (docType != -10) {\r\n                if (selectedSectionId == '') {\r\n                    var recentDocs = persistenceApiService.getUserData(persistenceApiService.storeLocation.SessionStorage, 0, 'recentDocuments');\r\n                    if (typeof recentDocs != 'undefined' && recentDocs != null) {\r\n                        if (typeof recentDocs == 'string') {\r\n                            recentDocs = JSON.parse(recentDocs)\r\n                            if (recentDocs.length > 0) {\r\n                                var lastIndex = recentDocs.length;\r\n                                // var doc= recentDocs[lastIndex-1];\r\n                                selectedSectionId = recentDocs[lastIndex - 1].selectedSectionId;\r\n                                return selectedSectionId;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    return selectedSectionId;\r\n                }\r\n\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n\r\n        //Script to create the base64 encode for the url\r\n        var PADCHAR = '=';\r\n\r\n        var ALPHA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n        function getbyte64(s, i) {\r\n            var idx = ALPHA.indexOf(s.charAt(i));\r\n            if (idx === -1) {\r\n                throw \"Cannot decode base64\";\r\n            }\r\n            return idx;\r\n        }\r\n\r\n        function decode(s) {\r\n            // convert to string\r\n            s = \"\" + s;\r\n            var pads, i, b10;\r\n            var imax = s.length;\r\n            if (imax === 0) {\r\n                return s;\r\n            }\r\n\r\n            if (imax % 4 !== 0) {\r\n                throw \"Cannot decode base64\";\r\n            }\r\n\r\n            pads = 0;\r\n            if (s.charAt(imax - 1) === PADCHAR) {\r\n                pads = 1;\r\n                if (s.charAt(imax - 2) === PADCHAR) {\r\n                    pads = 2;\r\n                }\r\n                // either way, we want to ignore this last block\r\n                imax -= 4;\r\n            }\r\n\r\n            var x = [];\r\n            for (i = 0; i < imax; i += 4) {\r\n                b10 = (getbyte64(s, i) << 18) | (getbyte64(s, i + 1) << 12) |\r\n                    (getbyte64(s, i + 2) << 6) | getbyte64(s, i + 3);\r\n                x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff, b10 & 0xff));\r\n            }\r\n\r\n            switch (pads) {\r\n                case 1:\r\n                    b10 = (getbyte64(s, i) << 18) | (getbyte64(s, i + 1) << 12) | (getbyte64(s, i + 2) << 6);\r\n                    x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff));\r\n                    break;\r\n                case 2:\r\n                    b10 = (getbyte64(s, i) << 18) | (getbyte64(s, i + 1) << 12);\r\n                    x.push(String.fromCharCode(b10 >> 16));\r\n                    break;\r\n            }\r\n            return x.join('');\r\n        }\r\n\r\n        function getbyte(s, i) {\r\n            var x = s.charCodeAt(i);\r\n            if (x > 255) {\r\n                throw \"INVALID_CHARACTER_ERR: DOM Exception 5\";\r\n            }\r\n            return x;\r\n        }\r\n\r\n        function encode(s) {\r\n            if (arguments.length !== 1) {\r\n                throw \"SyntaxError: Not enough arguments\";\r\n            }\r\n\r\n            var i, b10;\r\n            var x = [];\r\n\r\n            // convert to string\r\n            s = \"\" + s;\r\n\r\n            var imax = s.length - s.length % 3;\r\n\r\n            if (s.length === 0) {\r\n                return s;\r\n            }\r\n            for (i = 0; i < imax; i += 3) {\r\n                b10 = (getbyte(s, i) << 16) | (getbyte(s, i + 1) << 8) | getbyte(s, i + 2);\r\n                x.push(ALPHA.charAt(b10 >> 18));\r\n                x.push(ALPHA.charAt((b10 >> 12) & 0x3F));\r\n                x.push(ALPHA.charAt((b10 >> 6) & 0x3f));\r\n                x.push(ALPHA.charAt(b10 & 0x3f));\r\n            }\r\n            switch (s.length - imax) {\r\n                case 1:\r\n                    b10 = getbyte(s, i) << 16;\r\n                    x.push(ALPHA.charAt(b10 >> 18) + ALPHA.charAt((b10 >> 12) & 0x3F) +\r\n                        PADCHAR + PADCHAR);\r\n                    break;\r\n                case 2:\r\n                    b10 = (getbyte(s, i) << 16) | (getbyte(s, i + 1) << 8);\r\n                    x.push(ALPHA.charAt(b10 >> 18) + ALPHA.charAt((b10 >> 12) & 0x3F) +\r\n                        ALPHA.charAt((b10 >> 6) & 0x3f) + PADCHAR);\r\n                    break;\r\n            }\r\n\r\n            var encodedValue = x.join('');\r\n            var PadsLength = encodedValue.match(/\\=/g);\r\n\r\n            if (typeof PadsLength != 'undefined' && PadsLength != null) {\r\n                encodedValue = encodedValue.substring(0, encodedValue.length - PadsLength.length);\r\n                return encodedValue + PadsLength.length;\r\n            }\r\n            return encodedValue\r\n        }\r\n\r\n\r\n        var service = {\r\n            redirectToPreviousNode: _redirectToPreviousNode,\r\n            historyIsEmpty: _historyIsEmpty,\r\n            getModelData: getModelData,\r\n            saveRecentDocument: saveRecentDocument,\r\n            docDetails: docDetails,\r\n            saveSelectedSection: saveSelectedSection,\r\n            getSelectedSection: getSelectedSection,\r\n            saveWorkspaceRecentDocument: saveWorkspaceRecentDocument\r\n        }\r\n        return service;\r\n    }\r\n\r\n\r\n\r\n    function masterPersistenceServiceFunc(APPCONSTANTS, $timeout, PLATFORMURLs, persistenceApiService, nPlusOneService) {\r\n        var _api = persistenceApiService;\r\n        var _nPlusOne = nPlusOneService;\r\n        var _userData = {};\r\n        var _state = ''\r\n        var _documentType = -10;\r\n        var masterData = {}\r\n        var documentFields = {};\r\n        var selectedValues = {};        \r\n\r\n        var setSelectedValue = function (fieldId, masterDataConfig, obj) {\r\n            var masterData_config = masterDataConfig;\r\n            if (typeof masterDataConfig == 'string') {\r\n                masterData_config = JSON.parse(masterDataConfig);\r\n            }\r\n\r\n            var filter_Key = { filterKey: masterData_config.filterKey };\r\n            var filterKey = obj[filter_Key.filterKey]                   \r\n            selectedValues[fieldId] = filterKey;\r\n        }\r\n\r\n\r\n        var setDocumentFields = function (parentKey, childKey) {\r\n            if (parentKey == null || parentKey == \"\") {\r\n                parentKey = 'rootFields';\r\n            }\r\n            if (!documentFields.hasOwnProperty(parentKey)) {\r\n                documentFields[parentKey] = [];\r\n            }\r\n            documentFields[parentKey].push(childKey);\r\n        }\r\n\r\n        var getDocumentFields = function (key) {\r\n            if (!_.isEmpty(documentFields)) {\r\n                if (typeof key == 'undefined') {\r\n                    key = 'parentKey';\r\n                }\r\n                if (documentFields.hasOwnProperty(key)) {\r\n                    return documentFields[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n\r\n        var getFormattedData = function (data, format) {\r\n            if (!data || data.length == 0) {\r\n                return [];\r\n            }\r\n            var str = format;\r\n            try {\r\n                var parentSplit = str.split('{');\r\n                for (var j = 0; j < parentSplit.length; j++) {\r\n                    var childSplit = parentSplit[j].split('}');\r\n                    for (var k = 0; k < childSplit.length; k++) {\r\n                        if (childSplit[k].indexOf('.') > 0 || data.hasOwnProperty(childSplit[k])) {\r\n                            str = str.replace(new RegExp(\"{\" + childSplit[k] + \"}\", \"ig\"), eval('data.' + childSplit[k]));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) { }\r\n            return str.trim();\r\n\r\n        };\r\n\r\n        var saveMasterDataForRootField = function (fieldId, masterDataConfig, data) {\r\n            if (!_.isEmpty(documentFields)) {\r\n\r\n                var isExisitingObj = false;\r\n\r\n                if (masterData.hasOwnProperty(fieldId)) {\r\n                    if (masterData[fieldId].indexOf(data) != -1) {\r\n                        isExisitingObj = true;\r\n                    }\r\n                }\r\n\r\n                var masterData_config = masterDataConfig;\r\n                if (typeof masterDataConfig == 'string') {\r\n                    masterData_config = JSON.parse(masterDataConfig);\r\n                }\r\n\r\n\r\n\r\n\r\n                var params = {                 \r\n                    \"fieldId\": fieldId,\r\n                    \"events\": {},\r\n                        \"childId\": typeof documentFields[fieldId] != 'undefined' ? documentFields[fieldId] : \"Null\",\r\n                    \"parentId\": typeof masterDataConfig.parentId != 'undefined' && masterDataConfig.parentId != '' ? masterDataConfig.parentId : \"Null\",\r\n                    \"parentValue\": typeof masterDataConfig.parentId != 'undefined' && typeof selectedValues[masterDataConfig.parentId] != 'undefined' ? selectedValues[masterDataConfig.parentId] : \"Null\"\r\n            };\r\n\r\n                if (isExisitingObj) {\r\n                    if (data.hasOwnProperty('_id')) {\r\n                        delete data['_id'];\r\n                    }\r\n                    params.events = data;\r\n                    params[\"fieldValue\"] = data['filterKey'];\r\n                }\r\n                else {\r\n                    var filter_Key = { filterKey: masterData_config.filterKey };\r\n                    var filterKey = data[filter_Key.filterKey]                  \r\n                    selectedValues[fieldId] = filterKey;\r\n                    var displayKey = getFormattedData(data, masterData_config['displayKey']);\r\n                    params[\"fieldValue\"] = filterKey;\r\n                    params.events = {\r\n                        \"displayKey\": displayKey,\r\n                        \"searchKey\": data[masterData_config['searchKey']],\r\n                        \"filterKey\": data[masterData_config['filterKey']],\r\n                        \"value\": displayKey\r\n                    };\r\n                }\r\n\r\n                var key = 'rootFields';\r\n                _api.saveMasterUserDataToDB(params, key, masterData);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var getMasterDataForRootField = function () {\r\n            if (!_.isEmpty(documentFields)) {\r\n                var params = {\r\n                    \"fieldId\": documentFields['rootFields'],\r\n                    \"parentId\": \"Null\",\r\n                    \"parentValue\": \"Null\"\r\n                };\r\n                var key = 'rootFields';\r\n                _api.getMasterUserDataFromDB(params, key, masterData);                \r\n\r\n                console.log(masterData);\r\n            }\r\n\r\n        }\r\n       \r\n       \r\n      \r\n\r\n   \r\n        var getAutoSuggestList = function (key, config) {\r\n            if (typeof key != 'undefined') {\r\n              \r\n                var obj = {};\r\n             \r\n                if (!_.isEmpty(masterData)) {                   \r\n                    obj = masterData[key];\r\n                    if (typeof obj != 'undefined') {\r\n                        return obj;                       \r\n                    }\r\n                }\r\n            }\r\n            return [];\r\n        }\r\n\r\n\r\n\r\n\r\n        var service = {\r\n            userData: _userData,\r\n            api: _api,\r\n            nPlusOne: _nPlusOne,\r\n            selectedValues: selectedValues,\r\n            getAutoSuggestList: getAutoSuggestList,\r\n            documentFields: documentFields,\r\n            setDocumentFields: setDocumentFields,\r\n            getDocumentFields: getDocumentFields,\r\n            getMasterDataForRootField: getMasterDataForRootField,\r\n            saveMasterDataForRootField: saveMasterDataForRootField,\r\n            setSelectedValue: setSelectedValue\r\n\r\n\r\n        }\r\n        return service;\r\n    }\r\n\r\n\r\n\r\n})(angular, window);","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').service('requestClicked', requestClickedFunc);\r\n\r\n    function requestClickedFunc() {\r\n        var isRequestClicked = false;\r\n        return {\r\n            getProperty: function () {\r\n                return isRequestClicked;\r\n            },\r\n            setProperty: function (value) {\r\n                isRequestClicked = value;\r\n            }\r\n        };\r\n    };\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    //  functions for rule engine\r\n    window.isObject = function (val) {\r\n        return angular.isObject(val);\r\n    };\r\n\r\n    window.isDate = function (val) {\r\n        return angular.isDate(val);\r\n    };\r\n\r\n    window.isNumber = function (val) {\r\n        return angular.isNumber(val);\r\n    };\r\n\r\n    window.isDefined = function (val) {\r\n        return angular.isDefined(val)\r\n    };\r\n\r\n    window.isUndefined = function (val) {\r\n        return angular.isUndefined(val)\r\n    };\r\n\r\n    window.isString = function (val) {\r\n        return angular.isString(val)\r\n    };\r\n\r\n    window.isUndefinedOrEmptyOrNull = function (m) {\r\n        if (isObject(m) && m.hasOwnProperty('ui')) {\r\n            var result;\r\n            try {\r\n                result = eval('m.dataModel.' + m.ui.field);\r\n            }\r\n            catch (e) { }\r\n            return result === '' || result === undefined || result === null;\r\n        }\r\n        return m === '' || m === undefined || m === null;\r\n    };\r\n\r\n    window.isEmptyOrNull = function (m) {\r\n        if (isObject(m) && m.hasOwnProperty('ui')) {\r\n            var result;\r\n            try {\r\n                result = eval('m.dataModel.' + m.ui.field);\r\n            }\r\n            catch (e) { }\r\n            return result === '' || result === null;\r\n        }\r\n        return m === '' || m === null;\r\n    };\r\n\r\n    window.isUndefinedOrNull = function (m) {\r\n        if (isObject(m) && m.hasOwnProperty('ui')) {\r\n            var result;\r\n            try {\r\n                result = eval('m.dataModel.' + m.ui.field);\r\n            }\r\n            catch (e) { }\r\n            return result === undefined || result === null;\r\n        }\r\n        return m === undefined || m === null;\r\n    };\r\n\r\n    angular.module('SMART2').service('RuleEngine', ['$translate', function ($translate) {\r\n        var service = this;\r\n        this.utils = {};\r\n\r\n        this.setRules = function (dataConfig, dataModel, cumulativeRules, rules, ruleType) {\r\n            this.dataConfig = dataConfig;\r\n            this.dataModel = dataModel;\r\n            this.cumulativeRules = cumulativeRules;                 //  Cumulative rules\r\n            this.rules = rules;                                     //  Rules object\r\n            this.type = angular.isDefined(ruleType) ? ruleType : 'header';\r\n            this.isNoolsEnabled = !angular.isObject(rules);\r\n        };\r\n\r\n        this.setDocumentRules = function (rules) {\r\n            this.documentRules = rules;\r\n        };\r\n\r\n        this.setUtils = function (utils) {\r\n            this.utils = utils;\r\n        };\r\n\r\n        //Added inorder to translate the errorString which is being appended to the grid rules\r\n        function appendErrorString(result) {\r\n            var resultantString = '';\r\n            if (result && result.params && _.isArray(result.params)) {\r\n                _.each(result.params, function (data, index) {\r\n                    if (data && data.isToBeTranslated) {\r\n                        resultantString += $translate.instant(data.text);\r\n                    } else {\r\n                        resultantString += data.text;\r\n                    }\r\n                });\r\n\r\n                result.error = resultantString;\r\n                delete result['params'];\r\n            }\r\n            return result;\r\n        }\r\n\r\n        this.executeNools = function (callback, scope) {\r\n            var failedRules = [];\r\n            var headerOrGridConfig = this.dataConfig;\r\n            var dataModel = this.dataModel;\r\n            var ruleType = this.type;\r\n            var rulesObj = this.rules;\r\n            var isNoolsEnabled = this.isNoolsEnabled;\r\n            var tmpRules, tmpRule, tmpRuleResult;\r\n\r\n            var invalidArray = [], disableArray = [], totalErrosArray = [];\r\n\r\n            if (ruleType == 'grid') {\r\n                _.each(dataModel, function (model, rowIndex) {\r\n                    var virtualDatamodel = angular.copy(model);\r\n\r\n                    _.each(angular.isArray(headerOrGridConfig) ? headerOrGridConfig[0].cloumnDefs : headerOrGridConfig.cloumnDefs, function (column, columnIndex) {\r\n                        if (column.hasOwnProperty('rules') && column.rules.length > 0) {\r\n                            angular.extend(column, {\r\n                                fieldName: column.field,\r\n                                errorFieldDisplayName: $translate.instant(column.displayName)\r\n                            });\r\n\r\n                            if (column.attributes.type == 'date') {\r\n                                changeDateFormatForNools(column, virtualDatamodel, 'grid');\r\n                            }\r\n\r\n                            //  Javascript implementation\r\n                            if (!isNoolsEnabled) {\r\n                                var messageModel = {\r\n                                    ui: angular.extend(column, {\r\n                                        data: column.field,\r\n                                        errorFieldDisplayName: $translate.instant(column.displayName)\r\n                                    }),\r\n                                    dataModel: virtualDatamodel,\r\n                                    index: {\r\n                                        row: rowIndex,\r\n                                        column: columnIndex\r\n                                    },\r\n                                    scope: ''\r\n                                };\r\n\r\n                                tmpRules = rulesObj.get(messageModel);\r\n\r\n                                for (var i = 0; i < column.rules.length; i++) {\r\n                                    tmpRule = tmpRules[column.rules[i]];\r\n                                    if (angular.isDefined(tmpRule) && angular.isFunction(tmpRule.condition) && tmpRule.condition()) {\r\n                                        //  If rule fails\r\n\r\n                                        tmpRuleResult = appendErrorString(tmpRule.result());\r\n                                        if (angular.isDefined(tmpRuleResult.rowColIndex)) {\r\n                                            if (tmpRuleResult.state == 'invalid') {\r\n                                                invalidArray.push(tmpRuleResult.rowColIndex)\r\n                                                totalErrosArray.push(tmpRuleResult);\r\n                                            }\r\n                                            else if (tmpRuleResult.state == 'disable') {\r\n                                                disableArray.push(tmpRuleResult.rowColIndex);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            if (tmpRuleResult.state == 'invalid') {\r\n                                                failedRules.push(tmpRuleResult);\r\n                                            }\r\n                                        }\r\n                                        break;\r\n                                    };\r\n                                }\r\n                            }\r\n                            else {\r\n                                //  Nools implementation\r\n                                var messageModel = [new Message({\r\n                                    ui: angular.extend(column, {\r\n                                        data: column.field\r\n                                    }),\r\n                                    dataModel: virtualDatamodel,\r\n                                    scope: ''\r\n                                })];\r\n                                var rules = messageModel[0].ui.rules;\r\n                                var session = flow.getSession.apply(flow, messageModel);\r\n                                for (var i = 0; i < rules.length; i++) {\r\n                                    session.focus(\"\" + rules[i] + \"\");\r\n                                }\r\n                                session.on(\"error\", function (data) {\r\n                                    if (data.errors[0].rowColIndex !== undefined) {\r\n                                        if (data.errors[0].state == 'invalid') {\r\n                                            invalidArray.push(data.errors[0].rowColIndex)\r\n                                            totalErrosArray.push(data.errors[0]);\r\n                                            session.dispose();\r\n                                        }\r\n                                        else if (data.errors[0].state == 'disable') {\r\n                                            disableArray.push(data.errors[0].rowColIndex);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (data.errors[0].state == 'invalid') {\r\n                                            failedRules.push(data.errors[0]);\r\n                                            session.dispose();\r\n                                        }\r\n                                    }\r\n                                });\r\n                                session.match();\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if (invalidArray.length > 0 || disableArray.length > 0 || totalErrosArray.length > 0) {\r\n                    failedRules.push(invalidArray);\r\n                    failedRules.push(disableArray);\r\n                    failedRules.push(totalErrosArray);\r\n                }\r\n            }\r\n            else if (ruleType == 'cell' && headerOrGridConfig.colDef.hasOwnProperty('rules') && headerOrGridConfig.colDef.rules.length > 0) {\r\n                headerOrGridConfig.colDef.fieldName = headerOrGridConfig.colDef.field;\r\n                var virtualDatamodel = angular.copy(dataModel.entity);\r\n\r\n                if (headerOrGridConfig.colDef.attributes.type == 'date') {\r\n                    //scope consists total column defs of line tab.\r\n                    changeDateFormatForNools(scope, virtualDatamodel, 'cell');\r\n                }\r\n\r\n                //  Javascript implementation\r\n                if (!isNoolsEnabled) {\r\n                    var messageModel = {\r\n                        ui: angular.extend(headerOrGridConfig.colDef, {\r\n                            errorFieldDisplayName: $translate.instant(headerOrGridConfig.colDef.displayKey)\r\n                        }),\r\n                        dataModel: virtualDatamodel,\r\n                        scope: ''\r\n                    };\r\n\r\n                    tmpRules = rulesObj.get(messageModel);\r\n\r\n                    for (var i = 0; i < headerOrGridConfig.colDef.rules.length; i++) {\r\n                        tmpRule = tmpRules[headerOrGridConfig.colDef.rules[i]];\r\n                        if (angular.isDefined(tmpRule) && angular.isFunction(tmpRule.condition) && tmpRule.condition()) {\r\n                            //  If rule fails\r\n                            failedRules.push(appendErrorString(tmpRule.result()));\r\n                            break;\r\n                        };\r\n                    }\r\n                }\r\n                else {\r\n                    var messageModel = [new Message({\r\n                        ui: headerOrGridConfig.colDef,\r\n                        dataModel: virtualDatamodel,\r\n                        scope: ''\r\n                    })];\r\n                    var session = flow.getSession.apply(flow, messageModel);\r\n                    var rules = headerOrGridConfig.colDef.rules;\r\n                    for (var i = 0; i < rules.length; i++) {\r\n                        session.focus(\"\" + rules[i] + \"\");\r\n                    }\r\n                    session.on(\"error\", function (data) {\r\n                        failedRules.push(data.errors[0]);\r\n                        session.dispose();\r\n                    });\r\n                    session.match();\r\n                }\r\n            }\r\n            else if (ruleType == 'chargeGrid') {\r\n                dataModel = dataModel.orderData.ItemChargesForHeader;\r\n                _.each(dataModel, function (model) {\r\n                    var virtualDatamodel = angular.copy(model);\r\n                    var columnArr = [];\r\n                    _.each(headerOrGridConfig[0].cloumnDefs, function (column) {\r\n                        angular.extend(column, {\r\n                            fieldName: column.field\r\n                        });\r\n                        if (column.hasOwnProperty('rules')) {\r\n                            if (column.attributes.type == 'date') {\r\n                                changeDateFormatForNools(column, virtualDatamodel);\r\n                            }\r\n                            var messageModel = [new Message({\r\n                                ui: angular.extend(column, {\r\n                                    data: column.field\r\n                                }),\r\n                                dataModel: virtualDatamodel,\r\n                                scope: ''\r\n                            })];\r\n                            columnArr.push(messageModel);\r\n                        }\r\n                    });\r\n                    _.each(columnArr, function (col) {\r\n                        var rules = col[0].ui.rules;\r\n                        var session = flow.getSession.apply(flow, col);\r\n                        for (var i = 0; i < rules.length; i++) {\r\n                            session.focus(\"\" + rules[i] + \"\");\r\n                        }\r\n                        session.on(\"error\", function (data) {\r\n                            if (data.errors[0].state == 'invalid') {\r\n                                failedRules.push(data.errors[0]);\r\n                                session.dispose();\r\n                            }\r\n                        });\r\n                        session.match();\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (angular.isFunction(callback)) {\r\n                callback({\r\n                    success: failedRules.length == 0,\r\n                    failedRules: failedRules\r\n                });\r\n            }\r\n            else {\r\n                return {\r\n                    success: failedRules.length == 0,\r\n                    failedRules: failedRules\r\n                };\r\n            }\r\n        };\r\n\r\n        this.isValid = function (rule, callback) {\r\n            if (typeof Header == \"undefined\") {\r\n                var tmpRules = this.documentRules.get({\r\n                    ui: '',\r\n                    dataModel: this.dataModel,\r\n                    scope: '',\r\n                    utils: this.utils\r\n                });\r\n\r\n                var tmpRule = tmpRules[rule];\r\n\r\n                if (angular.isDefined(tmpRule) && angular.isFunction(tmpRule.condition) && tmpRule.condition()) {\r\n                    angular.isFunction(callback) && callback({\r\n                        success: false,\r\n                        errorData: appendErrorString(tmpRule.result())\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                var messageModel = [new Header({\r\n                    ui: '',\r\n                    dataModel: this.dataModel,\r\n                    scope: '',\r\n                    utils: this.utils\r\n                })];\r\n                var session = headerFlow.getSession.apply(headerFlow, messageModel).focus(rule);\r\n                session.on(\"error\", function (data) {\r\n                    angular.isFunction(callback) && callback({\r\n                        success: false,\r\n                        errorData: data.errors[0]\r\n                    });\r\n                    session.dispose();\r\n                });\r\n                session.match();\r\n            }\r\n        };\r\n\r\n        this.execute = function (callback, currentScope) {\r\n            if (angular.isDefined(this.type) && this.type != 'header') {\r\n                this.executeNools(callback, currentScope);\r\n                return;\r\n            }\r\n\r\n            //  Inline validations\r\n            var isValid = true;\r\n            var tmpPropertyValue;\r\n            var failedRules = [];\r\n            var rulesObj = this.rules;\r\n            var isNoolsEnabled = this.isNoolsEnabled;\r\n            var tmpRules, tmpRule, tmpRuleResult;\r\n\r\n\r\n            /*\r\n             * Inline validation\r\n             */\r\n            for (var i = 0; i < this.dataConfig.length; i++) {\r\n                if (this.dataConfig[i].isHidden) {\r\n                    continue;\r\n                }\r\n                for (var j = 0; j < this.dataConfig[i].rows.length; j++) {\r\n                    for (var k = 0; k < this.dataConfig[i].rows[j].properties.length; k++) {\r\n                        if (this.dataConfig[i].rows[j].properties[k].isHidden) {\r\n                            continue;\r\n                        }\r\n\r\n                        //skip rules, when readonly\r\n                        if (Object(this.dataConfig[i].rows[j].properties[k]).hasOwnProperty('attributes')) {\r\n                            if (this.dataConfig[i].rows[j].properties[k].attributes.readonly) {\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        tmpPropertyValue = undefined;\r\n\r\n                        if (this.dataConfig[i].rows[j].properties[k].attributes && this.dataConfig[i].rows[j].properties[k].attributes.hasOwnProperty('ngModelOptions') && this.dataConfig[i].rows[j].properties[k].attributes.ngModelOptions.getterSetter) {\r\n                            tmpPropertyValue = eval('currentScope.' + this.dataConfig[i].rows[j].properties[k].data + '()');\r\n                        }\r\n                        else {\r\n                            try {\r\n                                if (typeof eval('this.dataModel.' + this.dataConfig[i].rows[j].properties[k].data) == 'object' && this.dataConfig[i].rows[j].properties[k].type != 'subsection') {\r\n                                    if (this.dataConfig[i].rows[j].properties[k].attributes != undefined)\r\n                                        var datakey = this.dataConfig[i].rows[j].properties[k].attributes.displayformat != undefined ? this.dataConfig[i].rows[j].properties[k].attributes.displayformat : this.dataConfig[i].rows[j].properties[k].attributes.datakey;\r\n                                    else if (this.dataConfig[i].rows[j].properties[k].ui != undefined)\r\n                                        var datakey = this.dataConfig[i].rows[j].properties[k].ui.displayformat ? this.dataConfig[i].rows[j].properties[k].ui.displayformat : this.dataConfig[i].rows[j].properties[k].ui.datakey;\r\n\r\n                                    datakey = datakey.split('-');\r\n                                    tmpPropertyValue = '';\r\n                                    for (var m = 0; m < datakey.length; m++) {\r\n                                        if (datakey[m].indexOf('{') > -1)\r\n                                            datakey[m] = datakey[m].replace(\"{\", '').replace(\"}\", '');\r\n\r\n                                        tmpPropertyValue += eval('this.dataModel.' + this.dataConfig[i].rows[j].properties[k].data + '.' + datakey[m]).trim();\r\n                                    }\r\n                                }\r\n                                else\r\n                                    tmpPropertyValue = eval('this.dataModel.' + this.dataConfig[i].rows[j].properties[k].data);\r\n                            }\r\n                            catch (e) { }\r\n                        }\r\n\r\n                        /*\r\n                         * Mandatory rule\r\n                         */\r\n                        var isValidated = false;\r\n                        if (Object(this.dataConfig[i].rows[j].properties[k]).hasOwnProperty('attributes')) {\r\n                            if (Object(this.dataConfig[i].rows[j].properties[k].attributes).hasOwnProperty('type') && this.dataConfig[i].rows[j].properties[k].attributes.type == 'number') {\r\n                                isValidated = true;\r\n                                if ((this.dataConfig[i].rows[j].properties[k].isMandatory && (tmpPropertyValue == undefined || tmpPropertyValue === \"\" || tmpPropertyValue == null || isNaN(tmpPropertyValue))) || (!this.dataConfig[i].rows[j].properties[k].isMandatory && isNaN(tmpPropertyValue) && tmpPropertyValue != undefined)) {\r\n                                    failedRules.push({\r\n                                        type: 'required',\r\n                                        section: this.dataConfig[i],\r\n                                        uiConfig: this.dataConfig[i].rows[j].properties[k],\r\n                                        rule: \"isNaN(this)\",\r\n                                        error: $translate.instant('PLATFORM_ThisFieldShouldBeNumber')\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            else if (Object(this.dataConfig[i].rows[j].properties[k].attributes).hasOwnProperty('type') && this.dataConfig[i].rows[j].properties[k].attributes.type == 'autocomplete') {\r\n                                isValidated = true;\r\n                                if (this.dataConfig[i].rows[j].properties[k].isMandatory && (tmpPropertyValue + '' == '' || tmpPropertyValue == null || tmpPropertyValue == undefined)) {\r\n                                    failedRules.push({\r\n                                        type: 'required',\r\n                                        section: this.dataConfig[i],\r\n                                        uiConfig: this.dataConfig[i].rows[j].properties[k],\r\n                                        rule: \"this == ''\",\r\n                                        error: $translate.instant('PLATFORM_ThisFieldShouldNotBeBlank')\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (!isValidated && this.dataConfig[i].rows[j].properties[k].type != 'subsection' && this.dataConfig[i].rows[j].properties[k].type != 'checkbox' && this.dataConfig[i].rows[j].properties[k].type != 'switch' && this.dataConfig[i].rows[j].properties[k].isMandatory && (tmpPropertyValue == '' || tmpPropertyValue == undefined || tmpPropertyValue == null)) {\r\n                            failedRules.push({\r\n                                type: 'required',\r\n                                section: this.dataConfig[i],\r\n                                uiConfig: this.dataConfig[i].rows[j].properties[k],\r\n                                rule: \"this == ''\",\r\n                                error: $translate.instant('PLATFORM_ThisFieldShouldNotBeBlank')\r\n                            });\r\n                        }\r\n\r\n                        /*\r\n                         * Inline rules\r\n                         */\r\n                        if (Object(this.dataConfig[i].rows[j].properties[k]).hasOwnProperty('rules')) {\r\n                            if (this.dataConfig[i].rows[j].properties[k].rules) {\r\n                                for (var l = 0; l < this.dataConfig[i].rows[j].properties[k].rules.length; l++) {\r\n                                    if (typeof this.dataConfig[i].rows[j].properties[k].rules[l] != 'string') {\r\n                                        if (eval((this.dataConfig[i].rows[j].properties[k].rules[l].rule).replace(/this/g, 'tmpPropertyValue'))) {\r\n                                            failedRules.push({\r\n                                                type: 'inline',\r\n                                                section: this.dataConfig[i],\r\n                                                uiConfig: this.dataConfig[i].rows[j].properties[k],\r\n                                                rule: this.dataConfig[i].rows[j].properties[k].rules[l].rule,\r\n                                                error: this.dataConfig[i].rows[j].properties[k].rules[l].error\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    else if (isNoolsEnabled) {\r\n                                        var messageModel = [new Header({\r\n                                            ui: this.dataConfig[i].rows[j].properties[k],\r\n                                            dataModel: this.dataModel,\r\n                                            scope: currentScope,\r\n                                            utils: this.utils\r\n                                        })];\r\n\r\n                                        var session = headerFlow.getSession.apply(headerFlow, messageModel).focus(this.dataConfig[i].rows[j].properties[k].rules[l]);\r\n                                        var _section = this.dataConfig[i];\r\n                                        var _uiElement = _section.rows[j].properties[k];\r\n                                        session.on(\"error\", function (data) {\r\n                                            data.errors[0].uiConfig = _uiElement;\r\n                                            data.errors[0].section = _section;\r\n                                            failedRules.push(data.errors[0]);\r\n                                            session.dispose();\r\n                                        });\r\n\r\n                                        session.match();\r\n                                    }\r\n                                    else {\r\n                                        var messageModel = {\r\n                                            ui: {\r\n                                                section: this.dataConfig[i],\r\n                                                property: this.dataConfig[i].rows[j].properties[k],\r\n                                            },\r\n                                            dataModel: this.dataModel,\r\n                                            scope: currentScope,\r\n                                            utils: this.utils\r\n                                        };\r\n\r\n                                        tmpRules = rulesObj.get(messageModel);\r\n                                        tmpRule = tmpRules[this.dataConfig[i].rows[j].properties[k].rules[l]];\r\n\r\n                                        if (angular.isDefined(tmpRule) && angular.isFunction(tmpRule.condition) && tmpRule.condition()) {\r\n                                            //  If rule fails\r\n                                            this.dataConfig[i].rows[j].properties[k].validate = true;\r\n                                            failedRules.push(appendErrorString(tmpRule.result()));\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*\r\n             *  Cumulative validations  \r\n             */\r\n            if (angular.isDefined(this.cumulativeRules) && angular.isArray(this.cumulativeRules) && this.cumulativeRules.length > 0) {\r\n                tmpRules = angular.isDefined(this.rules) && angular.isFunction(this.rules.get) && this.rules.get({\r\n                    ui: {},\r\n                    dataModel: this.dataModel,\r\n                    scope: currentScope,\r\n                    utils: this.utils\r\n                });\r\n\r\n                for (var i = 0; i < this.cumulativeRules.length; i++) {\r\n                    if (typeof this.cumulativeRules[i] != 'string' && eval((this.cumulativeRules[i].rule).replace(/this/g, 'this.dataModel'))) {\r\n                        failedRules.push({\r\n                            type: 'cumulative',\r\n                            rule: this.cumulativeRules[i].rule,\r\n                            error: this.cumulativeRules[i].error\r\n                        });\r\n                    }\r\n                    else if (isNoolsEnabled) {\r\n                        var messageModel = [new Header({\r\n                            ui: {},\r\n                            dataModel: this.dataModel,\r\n                            scope: currentScope,\r\n                            utils: this.utils\r\n                        })];\r\n\r\n                        var session = headerFlow.getSession.apply(headerFlow, messageModel).focus(this.cumulativeRules[i]);\r\n\r\n                        session.on(\"error\", function (data) {\r\n                            failedRules.push(data.errors[0]);\r\n                            session.dispose();\r\n                        });\r\n\r\n                        session.match();\r\n                    }\r\n                    else {\r\n                        tmpRule = tmpRules[this.cumulativeRules[i]];\r\n\r\n                        if (angular.isDefined(tmpRule) && angular.isFunction(tmpRule.condition) && tmpRule.condition()) {\r\n                            //  If rule fails\r\n                            failedRules.push(appendErrorString(tmpRule.result()));\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (failedRules.length > 0 && failedRules[0].section) {\r\n                failedRules[0].section.isContentLoaded = true;\r\n                failedRules[0].section.isActive = true;\r\n            }\r\n\r\n            angular.forEach(failedRules, function (value, key) {\r\n                if (value.uiConfig) {\r\n                    value.uiConfig.validate = true;\r\n                }\r\n            });\r\n\r\n            if (failedRules.length > 0 && ((failedRules[0].hasOwnProperty('uiConfig') && failedRules[0].uiConfig != undefined) || (failedRules[0].hasOwnProperty('property') && failedRules[0].property != '' && failedRules[0].property != undefined))) {\r\n                typeof failedRules[0].uiConfig != 'undefined' ? failedRules[0].uiConfig.focus = true : failedRules[0].property.focus = true;\r\n            }\r\n\r\n            tmpRules = null;\r\n            tmpRule = null;\r\n            tmpRuleResult = null;\r\n\r\n            angular.isFunction(callback) && callback({\r\n                success: failedRules.length == 0,\r\n                failedRules: failedRules\r\n            });\r\n        };\r\n\r\n\r\n        this.executeOnStaticForm = function (callback) {\r\n            var isValid = true;\r\n            var failedRules = [];\r\n\r\n            for (var key in this.dataConfig) {\r\n                for (var i = 0; i < this.dataConfig[key].rules.length; i++) {\r\n                    if (eval(this.dataConfig[key].rules[i].rule.replace(/this/g, 'this.dataModel.' + key))) {\r\n                        failedRules.push({\r\n                            type: 'inline',\r\n                            rule: this.dataConfig[key].rules[i].rule,\r\n                            error: this.dataConfig[key].rules[i].error\r\n                        });\r\n                        this.dataConfig[key].validate = true;\r\n                        if (failedRules.length == 1) {\r\n                            this.dataConfig[key].focus = true;\r\n                        }\r\n                        isValid = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*\r\n             *  Cumulative validations  \r\n             */\r\n            if (this.cumulativeRules) {\r\n                for (var i = 0; i < this.cumulativeRules.length; i++) {\r\n                    if (eval((this.cumulativeRules[i].rule).replace(/this/g, 'this.dataModel'))) {\r\n                        failedRules.push({\r\n                            type: 'cumulative',\r\n                            rule: this.cumulativeRules[i].rule,\r\n                            error: this.cumulativeRules[i].error\r\n                        });\r\n                        isValid = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (angular.isFunction(callback)) {\r\n                callback({\r\n                    success: isValid,\r\n                    data: failedRules\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        function changeDateFormatForNools(colDefs, virtualDatamodel, type) {\r\n            if (colDefs != '' && type == 'cell') {\r\n                _.each(colDefs.cloumnDefs, function (colDef) {\r\n                    if (colDef.attributes.type == 'date') {\r\n                        var field = colDef.field;\r\n                        var fieldVal = field.split('.');\r\n                        if (fieldVal.length > 1) {\r\n                            var fieldzeroval = eval('virtualDatamodel.' + fieldVal[0]);\r\n                            if (fieldzeroval !== undefined && fieldzeroval !== null) {\r\n                                var dateVar = eval('virtualDatamodel.' + fieldVal[1]);\r\n                                if (dateVar != undefined & dateVar != '')\r\n                                    virtualDatamodel[field] = convertDate(dateVar);\r\n                                else\r\n                                    virtualDatamodel[field] = \"\";\r\n                            }\r\n                        }\r\n                        else {\r\n                            var dateVar = eval('virtualDatamodel.' + fieldVal[0]);\r\n                            if (dateVar != undefined & dateVar != '')\r\n                                virtualDatamodel[field] = convertDate(dateVar);\r\n                            else\r\n                                virtualDatamodel[field] = \"\";\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else if (colDefs != '' && type == 'grid') {\r\n                var field = colDefs.field;\r\n                var fieldVal = field.split('.');\r\n                if (fieldVal.length > 1) {\r\n                    var fieldzeroval = eval('virtualDatamodel.' + fieldVal[0]);\r\n                    if (fieldzeroval !== undefined && fieldzeroval !== null) {\r\n                        var dateVar = eval('virtualDatamodel.' + fieldVal[1]);\r\n                        if (dateVar != undefined & dateVar != '')\r\n                            virtualDatamodel[field] = convertDate(dateVar);\r\n                        else\r\n                            virtualDatamodel[field] = \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    var dateVar = eval('virtualDatamodel.' + fieldVal[0]);\r\n                    if (dateVar != undefined & dateVar != '')\r\n                        virtualDatamodel[field] = convertDate(dateVar);\r\n                    else\r\n                        virtualDatamodel[field] = \"\";\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        function convertDate(dateVar) {\r\n            if (typeof dateVar != 'undefined' && dateVar != null && isNaN(dateVar) && dateVar.indexOf('/Date(') > -1) {\r\n                var res = dateVar.replace(\"/Date(\", \"\");\r\n                var datestring = res.replace(\")/\", \"\");\r\n                var newdate = new Date(parseInt(datestring));\r\n                return new Date(newdate.getFullYear(), newdate.getMonth(), newdate.getDate() + 1);\r\n            }\r\n            else if (typeof dateVar != 'undefined' && dateVar != null && !isNaN(dateVar) && angular.isFunction(dateVar.getFullYear)) {\r\n\r\n                var newdate = new Date(dateVar);\r\n                return new Date(newdate.getFullYear(), newdate.getMonth(), newdate.getDate() + 1);\r\n            }\r\n            else if (typeof dateVar != 'undefined' && dateVar != null && !isNaN(dateVar)) {\r\n                var newdate = new Date(parseInt(dateVar));\r\n                return new Date(newdate.getFullYear(), newdate.getMonth(), newdate.getDate() + 1);\r\n            }\r\n        };\r\n    }]);\r\n})();","(function () {\r\n    'use strict';\r\n\t\r\n    angular.module('SMART2').service('scrollPosition', ['$filter', '$state', function ($filter, $state) {\r\n    \tvar isEnabledScroll,\r\n    \t\tscrollValue = [];\r\n\r\n    \tthis.setEnableScroll = function (enableScroll) {\r\n    \t\tisEnabledScroll = enableScroll\r\n    \t}\r\n\r\n    \tthis.getEnableScroll = function () {\r\n    \t\treturn isEnabledScroll;\r\n    \t}\r\n\r\n\t\tthis.set = function (pos, currentUrl) {\r\n\t\t\tif (scrollValue.length === 0)\r\n\t\t\t\tscrollValue.push({ 'scroll': pos, 'currentUrl': currentUrl });\r\n\t\t\telse {\r\n\t\t\t\tvar foundItem = $filter('filter')(scrollValue, { 'currentUrl': currentUrl }, true)[0];\r\n\t\t\t\tvar foundItemIndex = scrollValue.indexOf(foundItem);\r\n\t\t\t\tif (foundItem) {\r\n\t\t\t\t\tscrollValue.splice(foundItemIndex, 1);\r\n\t\t\t\t\tscrollValue.push({ 'scroll': pos, 'currentUrl': currentUrl });\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tscrollValue.push({ 'scroll': pos, 'currentUrl': currentUrl });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.get = function () {\r\n\t\t\treturn scrollValue;\r\n\t\t}\r\n\r\n\t\tthis.performScroll = function (staticValue, aSpeed, onComplete) {\r\n\t\t\tangular.element('body,html').animate({ scrollTop: staticValue }, 3500, 'linear');\r\n\t\t}\r\n\r\n\t\tthis.scrollWitgetsection = function (config) {\r\n\t\t    var state = $state,\r\n                scrollToconfig;\r\n\t\t    setTimeout(function () {\r\n\t\t        if (state.previous.scrollTo && state.previous.scrollTo.state === state.current.name) {\r\n\t\t            scrollToconfig = config.filter(function (c) { return state.previous.scrollTo.sectionId === c.sectionId });\r\n\t\t            var $cont = $('#' + scrollToconfig[0].sectionKey);\r\n\t\t            if ($cont.length && $cont.find('.collapsible-header').hasClass('active')) {\r\n\t\t                var displacementItem = $cont.offset().top - angular.element('#' + scrollToconfig[0].sectionKey.split('-section')[0] + '-sortable').offset().top;\r\n\r\n\t\t                displacementItem = displacementItem + 62;\r\n\r\n\t\t                angular.element('body,html').animate({\r\n\t\t                    scrollTop: displacementItem\r\n\t\t                }, \"medium\");\r\n\t\t            } else {\r\n\t\t                $cont.find('.collapsible-header').trigger('click');\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }, 100);\r\n\t\t}\r\n\t}]);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular.module('SMART2').service('ScrollTo', [function () {\r\n        var scrollingTopMargin = 0;\n        this.setScrollingTopMargin = function (_scrollingTopMargin) {\r\n            scrollingTopMargin = _scrollingTopMargin;\r\n        }\n        this.perform = function (source, destination, onComplete) {\r\n            try {\r\n                angular.element(source.closest('.modal').length > 0 ? source.closest('.modal') : 'body,html').animate({\r\n                    scrollTop: (source.offset().top - destination.offset().top) + scrollingTopMargin,\r\n\n                }, 400, function () {\r\n                    if (typeof onComplete != \"undefined\") {\r\n                        onComplete();\r\n                    }\r\n                });\r\n            } catch (e) { }\r\n        };\r\n    }]);\r\n})();"],"sourceRoot":"/source/"}