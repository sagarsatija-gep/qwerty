{"version":3,"sources":["GEP.NotificationHub2.0.2.min.js"],"names":["$","window","undefined","makeProxyCallback","hub","callback","apply","makeArray","arguments","registerHubProxies","instance","shouldSubscribe","key","memberKey","memberValue","subscriptionMethod","hasOwnProperty","on","off","client","isFunction","call","Error","signalR","hubConnection","prototype","createHubProxies","proxies","this","starting","_registerSubscribedHubs","disconnected","Auction","createHubProxy","server","changePartnerRank","eventDetails","notifyTo","auctionId","invoke","merge","disconnectFromGroup","getBestBidofLot","joinGroup","pauseResumeAction","sendBidToAll","bidProxy","updateAllStatus","timerData","updateAuctionStatus","updateEventStatus","updateAuctionStepTicker","updateAuctionRangeTicker","sendExtensionAlert","extData","FileManager","bpc","eventCode","contactCode","exportPartnerResponse","documentCode","fileId","fileName","requestType","completeTime","exportContractDetails","exportPricesheet","LotId","LotName","IsError","ErrorMessage","exportSurvey","QuestionSetCode","QuestionSetName","exportInitialBid","exportReportResponse","exportSourcingBidHistory","exportSourcingEvent","SingleExportGuideline","SingleExportMultipleGuideline","UpdateEventFromExcel","exportSourcingPartnerAttachments","exportSourcingResponse","exportPTLFileUploadResponse","importPricesheet","importSurvey","importInitialBid","importSourcingResponse","submitAllPartnerResponseForQuantitativeScorecard","QuestionSetCodes","AssesseeId","exportPricesheetComment","ExportSourcingResponsewithOptions","hasdata","ExportScoringInstruction","ExportAllPricesheet","GepChat","broadCast","_BroadCastTo","Message","FromContact","FromContactName","ContactCode","lotJoinGroup","sendMessage","ToGroup","GEPNotifications","sendReadMailNotification","RowKey","PartitionKey","sentMailNotification","updateEmailCount","who","count","SourcingEventWithDraw","groupName","contactcode","disqualifyPartner","lotId","isQualified","pauseAllEventsOnServiceStop","revokePartner","legalCompanyName","revokeComments","revokePartnerCC","withDraw","silentwithDraw","eventCancelled","useDefaultPath","extend","jQuery"],"mappings":"CAYA,SAAAA,EAAAC,EAAAC,GAEA,YAQA,SAAAC,GAAAC,EAAAC,GACA,MAAA,YAEAA,EAAAC,MAAAF,EAAAJ,EAAAO,UAAAC,aAIA,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GAAAR,EAAAS,EAAAC,EAAAC,CAEA,KAAAH,IAAAF,GACA,GAAAA,EAAAM,eAAAJ,GAAA,CAGA,GAFAR,EAAAM,EAAAE,IAEAR,EAAA,QAEA,QAKAW,GAFAJ,EAEAP,EAAAa,GAGAb,EAAAc,GAIA,KAAAL,IAAAT,GAAAe,OACA,GAAAf,EAAAe,OAAAH,eAAAH,GAAA,CAGA,GAFAC,EAAAV,EAAAe,OAAAN,IAEAb,EAAAoB,WAAAN,GAEA,QAGAC,GAAAM,KAAAjB,EAAAS,EAAAV,EAAAC,EAAAU,MA3CA,GAAA,kBAAAd,GAAA,QACA,KAAA,IAAAsB,OAAA,uGAGA,IAAAC,GAAAvB,EAAAuB,OA8CAvB,GAAAwB,cAAAC,UAAAC,iBAAA,WACA,GAAAC,KAsiBA,OAriBAC,MAAAC,SAAA,WAGApB,EAAAkB,GAAA,GAEAC,KAAAE,4BACAC,aAAA,WAGAtB,EAAAkB,GAAA,KAGAA,EAAAK,QAAAJ,KAAAK,eAAA,WACAN,EAAAK,QAAAb,UACAQ,EAAAK,QAAAE,QACAC,kBAAA,SAAAC,EAAAC,EAAAC,GAKA,MAAAX,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,qBAAAxC,EAAAO,UAAAC,cAGAiC,oBAAA,SAAAL,EAAAC,GAIA,MAAAV,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAGAkC,gBAAA,SAAAN,EAAAC,GAIA,MAAAV,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,mBAAAxC,EAAAO,UAAAC,cAGAmC,UAAA,SAAAP,EAAAC,GAIA,MAAAV,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,aAAAxC,EAAAO,UAAAC,cAGAoC,kBAAA,SAAAR,EAAAC,GAIA,MAAAV,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,qBAAAxC,EAAAO,UAAAC,cAGAqC,aAAA,SAAAT,EAAAC,EAAAS,GAKA,MAAAnB,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,gBAAAxC,EAAAO,UAAAC,cAGAuC,gBAAA,SAAAX,EAAAC,EAAAW,GAKA,MAAArB,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,mBAAAxC,EAAAO,UAAAC,cAGAyC,oBAAA,SAAAb,EAAAC,EAAAW,GAKA,MAAArB,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAGA0C,kBAAA,SAAAd,EAAAC,EAAAW,GAKA,MAAArB,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,qBAAAxC,EAAAO,UAAAC,cAGA2C,wBAAA,SAAAf,EAAAC,EAAAW,GAKA,MAAArB,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,2BAAAxC,EAAAO,UAAAC,cAGA4C,yBAAA,SAAAhB,EAAAC,EAAAW,GAKA,MAAArB,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,4BAAAxC,EAAAO,UAAAC,cAGA6C,mBAAA,SAAAjB,EAAAC,EAAAiB,GAKA,MAAA3B,GAAAK,QAAAO,OAAAjC,MAAAqB,EAAAK,QAAAhC,EAAAwC,OAAA,sBAAAxC,EAAAO,UAAAC,eAIAmB,EAAA4B,YAAA3B,KAAAK,eAAA,eACAN,EAAA4B,YAAApC,UACAQ,EAAA4B,YAAArB,QACAO,oBAAA,SAAAe,EAAAC,EAAAC,GAKA,MAAA/B,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAGAmD,sBAAA,SAAAH,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,yBAAAxC,EAAAO,UAAAC,cAEAyD,sBAAA,SAAAT,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,yBAAAxC,EAAAO,UAAAC,cAEA0D,iBAAA,SAAAV,EAAAI,EAAAF,EAAAS,EAAAC,EAAAP,EAAAC,EAAAC,EAAAC,EAAAK,EAAAC,GAWA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,oBAAAxC,EAAAO,UAAAC,cAGA+D,aAAA,SAAAf,EAAAI,EAAAF,EAAAc,EAAAC,EAAAZ,EAAAC,EAAAC,EAAAC,EAAAK,EAAAC,GAWA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,gBAAAxC,EAAAO,UAAAC,cAGAkE,iBAAA,SAAAlB,EAAAI,EAAAF,EAAAS,EAAAC,EAAAP,EAAAC,EAAAC,EAAAC,EAAAK,EAAAC,GAWA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,oBAAAxC,EAAAO,UAAAC,cAGAmE,qBAAA,SAAAnB,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,wBAAAxC,EAAAO,UAAAC,cAGAoE,yBAAA,SAAApB,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,4BAAAxC,EAAAO,UAAAC,cAGAqE,oBAAA,SAAArB,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAEAsE,sBAAA,SAAAtB,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,yBAAAxC,EAAAO,UAAAC,cAEAuE,8BAAA,SAAAvB,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,iCAAAxC,EAAAO,UAAAC,cAEAwE,qBAAA,SAAAxB,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,wBAAAxC,EAAAO,UAAAC,cAGAyE,iCAAA,SAAAzB,EAAAI,EAAAF,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,oCAAAxC,EAAAO,UAAAC,cAGA0E,uBAAA,SAAA1B,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,GASA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,0BAAAxC,EAAAO,UAAAC,cAGA2E,4BAAA,SAAA3B,EAAAE,GAIA,MAAA/B,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,+BAAAxC,EAAAO,UAAAC,cAGA4E,iBAAA,SAAA5B,EAAAI,EAAAF,EAAAS,EAAAC,EAAAL,EAAAC,EAAAK,EAAAC,GASA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,oBAAAxC,EAAAO,UAAAC,cAGA6E,aAAA,SAAA7B,EAAAI,EAAAF,EAAAc,EAAAC,EAAAV,EAAAC,EAAAK,EAAAC,GASA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,gBAAAxC,EAAAO,UAAAC,cAGA8E,iBAAA,SAAA9B,EAAAI,EAAAF,EAAAS,EAAAC,EAAAL,EAAAC,EAAAK,EAAAC,GASA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,oBAAAxC,EAAAO,UAAAC,cAGA+E,uBAAA,SAAA/B,EAAAC,EAAAC,EAAAK,EAAAM,EAAAC,GAKA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,0BAAAxC,EAAAO,UAAAC,cAEAgF,iDAAA,SAAAhC,EAAAI,EAAAF,EAAA+B,EAAAC,GAOA,MAAA/D,GAAA,YAAAY,OAAAjC,MAAAqB,EAAA,YAAA3B,EAAAwC,OAAA,oDAAAxC,EAAAO,UAAAC,cAEAmF,wBAAA,SAAAnC,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,GAWA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,2BAAAxC,EAAAO,UAAAC,cAGAoF,kCAAA,SAAApC,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAA8B,GAQA,MAAAlE,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,qCAAAxC,EAAAO,UAAAC,cAGAsF,yBAAA,SAAAtC,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,GAQA,MAAArC,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,4BAAAxC,EAAAO,UAAAC,cAGAuF,oBAAA,SAAAvC,EAAAI,EAAAF,EAAAS,EAAAC,EAAAP,EAAAC,EAAAC,EAAAC,EAAAK,EAAAC,GAWA,MAAA3C,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAGAmC,UAAA,SAAAa,EAAAC,EAAAC,GAKA,MAAA/B,GAAA4B,YAAAhB,OAAAjC,MAAAqB,EAAA4B,YAAAvD,EAAAwC,OAAA,aAAAxC,EAAAO,UAAAC,eAIAmB,EAAAqE,QAAApE,KAAAK,eAAA,WACAN,EAAAqE,QAAA7E,UACAQ,EAAAqE,QAAA9D,QACA+D,UAAA,SAAAC,EAAAC,EAAA/D,EAAAC,EAAA+D,EAAAC,GAQA,MAAA1E,GAAAqE,QAAAzD,OAAAjC,MAAAqB,EAAAqE,QAAAhG,EAAAwC,OAAA,aAAAxC,EAAAO,UAAAC,cAGAiC,oBAAA,SAAA6D,EAAAlE,EAAAC,GAKA,MAAAV,GAAAqE,QAAAzD,OAAAjC,MAAAqB,EAAAqE,QAAAhG,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAGAmC,UAAA,SAAA2D,EAAAlE,EAAAC,GAKA,MAAAV,GAAAqE,QAAAzD,OAAAjC,MAAAqB,EAAAqE,QAAAhG,EAAAwC,OAAA,aAAAxC,EAAAO,UAAAC,cAGA+F,aAAA,SAAAD,EAAAlE,EAAAC,GAKA,MAAAV,GAAAqE,QAAAzD,OAAAjC,MAAAqB,EAAAqE,QAAAhG,EAAAwC,OAAA,gBAAAxC,EAAAO,UAAAC,cAGAgG,YAAA,SAAAJ,EAAAD,EAAAM,EAAAJ,GAMA,MAAA1E,GAAAqE,QAAAzD,OAAAjC,MAAAqB,EAAAqE,QAAAhG,EAAAwC,OAAA,eAAAxC,EAAAO,UAAAC,eAIAmB,EAAA+E,iBAAA9E,KAAAK,eAAA,oBACAN,EAAA+E,iBAAAvF,UACAQ,EAAA+E,iBAAAxE,QACAO,oBAAA,SAAA6D,GAGA,MAAA3E,GAAA+E,iBAAAnE,OAAAjC,MAAAqB,EAAA+E,iBAAA1G,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAGAmC,UAAA,SAAA2D,GAGA,MAAA3E,GAAA+E,iBAAAnE,OAAAjC,MAAAqB,EAAA+E,iBAAA1G,EAAAwC,OAAA,aAAAxC,EAAAO,UAAAC,cAGAmG,yBAAA,SAAAL,EAAAM,EAAAC,GAKA,MAAAlF,GAAA+E,iBAAAnE,OAAAjC,MAAAqB,EAAA+E,iBAAA1G,EAAAwC,OAAA,4BAAAxC,EAAAO,UAAAC,cAGAsG,qBAAA,SAAAR,EAAAH,GAIA,MAAAxE,GAAA+E,iBAAAnE,OAAAjC,MAAAqB,EAAA+E,iBAAA1G,EAAAwC,OAAA,wBAAAxC,EAAAO,UAAAC,cAGAuG,iBAAA,SAAAC,EAAAC,GAIA,MAAAtF,GAAA+E,iBAAAnE,OAAAjC,MAAAqB,EAAA+E,iBAAA1G,EAAAwC,OAAA,oBAAAxC,EAAAO,UAAAC,eAIAmB,EAAAuF,sBAAAtF,KAAAK,eAAA,yBACAN,EAAAuF,sBAAA/F,UACAQ,EAAAuF,sBAAAhF,QACAO,oBAAA,SAAA0E,EAAAC,GAIA,MAAAzF,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,uBAAAxC,EAAAO,UAAAC,cAGA6G,kBAAA,SAAAF,EAAAC,EAAAE,EAAAC,GAMA,MAAA5F,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,qBAAAxC,EAAAO,UAAAC,cAGAmC,UAAA,SAAAwE,EAAAC,GAIA,MAAAzF,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,aAAAxC,EAAAO,UAAAC,cAGAgH,4BAAA,SAAAL,EAAAnE,GAIA,MAAArB,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,+BAAAxC,EAAAO,UAAAC,cAGAiH,cAAA,SAAAN,EAAAO,EAAAC,GAKA,MAAAhG,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,iBAAAxC,EAAAO,UAAAC,cAGAoH,gBAAA,SAAAT,EAAAO,EAAAC,GAKA,MAAAhG,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,mBAAAxC,EAAAO,UAAAC,cAGAqH,SAAA,SAAAV,EAAAO,GAIA,MAAA/F,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,YAAAxC,EAAAO,UAAAC,cAEAsH,eAAA,SAAAX,EAAAO,GAIA,MAAA/F,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,kBAAAxC,EAAAO,UAAAC,cAEAuH,eAAA,SAAAZ,EAAAO,EAAApB,GAIA,MAAA3E,GAAAuF,sBAAA3E,OAAAjC,MAAAqB,EAAAuF,sBAAAlH,EAAAwC,OAAA,kBAAAxC,EAAAO,UAAAC,eAIAmB,GAGAJ,EAAAnB,IAAAJ,EAAAwB,cAAA,YAAAwG,gBAAA,IACAhI,EAAAiI,OAAA1G,EAAAA,EAAAnB,IAAAsB,qBAEAzB,OAAAiI,OAAAjI","file":"gepCustomJSLib.min.js","sourcesContent":["/*!\r\n * ASP.NET SignalR JavaScript Library v2.0.2\r\n * http://signalr.net/\r\n *\r\n * Copyright Microsoft Open Technologies, Inc. All rights reserved.\r\n * Licensed under the Apache 2.0\r\n * https://github.com/SignalR/SignalR/blob/master/LICENSE.md\r\n *\r\n */\r\n\r\n/// <reference path=\"..\\..\\SignalR.Client.JS\\Scripts\\jquery-1.6.4.js\" />\r\n/// <reference path=\"jquery.signalR.js\" />\r\n(function ($, window, undefined) {\r\n    /// <param name=\"$\" type=\"jQuery\" />\r\n    \"use strict\";\r\n\r\n    if (typeof ($.signalR) !== \"function\") {\r\n        throw new Error(\"SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before ~/signalr/js.\");\r\n    }\r\n\r\n    var signalR = $.signalR;\r\n\r\n    function makeProxyCallback(hub, callback) {\r\n        return function () {\r\n            // Call the client hub method\r\n            callback.apply(hub, $.makeArray(arguments));\r\n        };\r\n    }\r\n\r\n    function registerHubProxies(instance, shouldSubscribe) {\r\n        var key, hub, memberKey, memberValue, subscriptionMethod;\r\n\r\n        for (key in instance) {\r\n            if (instance.hasOwnProperty(key)) {\r\n                hub = instance[key];\r\n\r\n                if (!(hub.hubName)) {\r\n                    // Not a client hub\r\n                    continue;\r\n                }\r\n\r\n                if (shouldSubscribe) {\r\n                    // We want to subscribe to the hub events\r\n                    subscriptionMethod = hub.on;\r\n                } else {\r\n                    // We want to unsubscribe from the hub events\r\n                    subscriptionMethod = hub.off;\r\n                }\r\n\r\n                // Loop through all members on the hub and find client hub functions to subscribe/unsubscribe\r\n                for (memberKey in hub.client) {\r\n                    if (hub.client.hasOwnProperty(memberKey)) {\r\n                        memberValue = hub.client[memberKey];\r\n\r\n                        if (!$.isFunction(memberValue)) {\r\n                            // Not a client hub function\r\n                            continue;\r\n                        }\r\n\r\n                        subscriptionMethod.call(hub, memberKey, makeProxyCallback(hub, memberValue));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    $.hubConnection.prototype.createHubProxies = function () {\r\n        var proxies = {};\r\n        this.starting(function () {\r\n            // Register the hub proxies as subscribed\r\n            // (instance, shouldSubscribe)\r\n            registerHubProxies(proxies, true);\r\n\r\n            this._registerSubscribedHubs();\r\n        }).disconnected(function () {\r\n            // Unsubscribe all hub proxies when we \"disconnect\".  This is to ensure that we do not re-add functional call backs.\r\n            // (instance, shouldSubscribe)\r\n            registerHubProxies(proxies, false);\r\n        });\r\n\r\n        proxies.Auction = this.createHubProxy('Auction');\r\n        proxies.Auction.client = {};\r\n        proxies.Auction.server = {\r\n            changePartnerRank: function (eventDetails, notifyTo, auctionId) {\r\n                /// <summary>Calls the ChangePartnerRank method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"auctionId\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"ChangePartnerRank\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            disconnectFromGroup: function (eventDetails, notifyTo) {\r\n                /// <summary>Calls the DisconnectFromGroup method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"DisconnectFromGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            getBestBidofLot: function (eventDetails, notifyTo) {\r\n                /// <summary>Calls the GetBestBidofLot method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"GetBestBidofLot\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            joinGroup: function (eventDetails, notifyTo) {\r\n                /// <summary>Calls the JoinGroup method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"JoinGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            pauseResumeAction: function (eventDetails, notifyTo) {\r\n                /// <summary>Calls the PauseResumeAction method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"PauseResumeAction\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            sendBidToAll: function (eventDetails, notifyTo, bidProxy) {\r\n                /// <summary>Calls the SendBidToAll method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"bidProxy\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"SendBidToAll\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            updateAllStatus: function (eventDetails, notifyTo, timerData) {\r\n                /// <summary>Calls the UpdateAllStatus method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"timerData\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"UpdateAllStatus\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            updateAuctionStatus: function (eventDetails, notifyTo, timerData) {\r\n                /// <summary>Calls the UpdateAuctionStatus method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"timerData\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"UpdateAuctionStatus\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            updateEventStatus: function (eventDetails, notifyTo, timerData) {\r\n                /// <summary>Calls the UpdateEventStatus method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"timerData\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"UpdateEventStatus\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            updateAuctionStepTicker: function (eventDetails, notifyTo, timerData) {\r\n                /// <summary>Calls the UpdateEventStatus method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"timerData\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"UpdateAuctionStepTicker\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            updateAuctionRangeTicker: function (eventDetails, notifyTo, timerData) {\r\n                /// <summary>Calls the UpdateEventStatus method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"timerData\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"UpdateAuctionRangeTicker\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            sendExtensionAlert: function (eventDetails, notifyTo, extData) {\r\n                /// <summary>Calls the UpdateAllStatus method on the server-side Auction hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"timerData\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.Auction.invoke.apply(proxies.Auction, $.merge([\"SendExtensionAlert\"], $.makeArray(arguments)));\r\n            }\r\n        };\r\n\r\n        proxies.FileManager = this.createHubProxy('FileManager');\r\n        proxies.FileManager.client = {};\r\n        proxies.FileManager.server = {\r\n            disconnectFromGroup: function (bpc, eventCode, contactCode) {\r\n                /// <summary>Calls the DisconnectFromGroup method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"DisconnectFromGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportPartnerResponse: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportPartnerResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportPartnerResponse\"], $.makeArray(arguments)));\r\n            },\r\n            exportContractDetails: function ( bpc,  documentCode,  contactCode,  fileId,  fileName,  requestType,  completeTime) {\r\n                /// <summary>Calls the ExportPartnerResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportContractDetails\"], $.makeArray(arguments)));\r\n            },\r\n            exportPricesheet: function (bpc, documentCode, contactCode, LotId, LotName, fileId, fileName, requestType, completeTime, IsError, ErrorMessage) {\r\n                /// <summary>Calls the ExportPricesheet method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportPricesheet\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportSurvey: function (bpc, documentCode, contactCode, QuestionSetCode, QuestionSetName, fileId, fileName, requestType, completeTime, IsError, ErrorMessage) {\r\n                /// <summary>Calls the ExportSurvey method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"QuestionSetCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"QuestionSetName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportSurvey\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportInitialBid: function (bpc, documentCode, contactCode, LotId, LotName, fileId, fileName, requestType, completeTime, IsError, ErrorMessage) {\r\n                /// <summary>Calls the ExportSurvey method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"QuestionSetCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"QuestionSetName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportInitialBid\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportReportResponse: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportReportResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportReportResponse\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportSourcingBidHistory: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportSourcingBidHistory method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportSourcingBidHistory\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportSourcingEvent: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportSourcingEvent method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportSourcingEvent\"], $.makeArray(arguments)));\r\n            },\r\n            SingleExportGuideline: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the SingleExportGuideline method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"SingleExportGuideline\"], $.makeArray(arguments)));\r\n            },\r\n            SingleExportMultipleGuideline: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the SingleExportMultipleGuideline method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"SingleExportMultipleGuideline\"], $.makeArray(arguments)));\r\n            },\r\n            UpdateEventFromExcel: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the SingleExportMultipleGuideline method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"UpdateEventFromExcel\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportSourcingPartnerAttachments: function (bpc, documentCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportSourcingPartnerAttachments method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportSourcingPartnerAttachments\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportSourcingResponse: function (bpc, eventCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportSourcingResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportSourcingResponse\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            exportPTLFileUploadResponse: function (bpc, contactCode) {\r\n                /// <summary>Calls the ExportPTLFileUploadResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportPTLFileUploadResponse\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            importPricesheet: function (bpc, documentCode, contactCode, LotId, LotName, requestType, completeTime, IsError, ErrorMessage) {\r\n                /// <summary>Calls the ImportPricesheet method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ImportPricesheet\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            importSurvey: function (bpc, documentCode, contactCode, QuestionSetCode, QuestionSetName, requestType, completeTime, IsError, ErrorMessage) {\r\n                /// <summary>Calls the importSurvey method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"QuestionSetCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"QuestionSetName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ImportSurvey\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            importInitialBid: function (bpc, documentCode, contactCode, LotId, LotName, requestType, completeTime, IsError, ErrorMessage) {\r\n                /// <summary>Calls the importSurvey method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ImportInitialBid\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            importSourcingResponse: function (bpc, eventCode, contactCode, requestType, IsError, ErrorMessage) {\r\n                /// <summary>Calls the ImportSourcingResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ImportSourcingResponse\"], $.makeArray(arguments)));\r\n            },\r\n            submitAllPartnerResponseForQuantitativeScorecard: function (bpc, documentCode, contactCode, QuestionSetCodes, AssesseeId) {\r\n                /// <summary>Calls the SubmitAllPartnerResponseForQuantitativeScorecard method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"QuestionSetCodes\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"AssesseeId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies['FileManager'].invoke.apply(proxies['FileManager'], $.merge([\"SubmitAllPartnerResponseForQuantitativeScorecard\"], $.makeArray(arguments)));\r\n            },\r\n            exportPricesheetComment: function (bpc, eventCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportPricesheet method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportPricesheetComment\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            ExportSourcingResponsewithOptions: function (bpc, eventCode, contactCode, fileId, fileName, requestType, hasdata) {\r\n                /// <summary>Calls the ExportSourcingResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportSourcingResponsewithOptions\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            ExportScoringInstruction: function (bpc, eventCode, contactCode, fileId, fileName, requestType, completeTime) {\r\n                /// <summary>Calls the ExportSourcingResponse method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportScoringInstruction\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            ExportAllPricesheet: function (bpc, documentCode, contactCode, LotId, LotName, fileId, fileName, requestType, completeTime, IsError, ErrorMessage) {\r\n                /// <summary>Calls the ExportAllPricesheet method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"documentCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"LotName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"fileId\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"fileName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"requestType\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"completeTime\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"ExportAllPricesheet\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            joinGroup: function (bpc, eventCode, contactCode) {\r\n                /// <summary>Calls the JoinGroup method on the server-side FileManager hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"bpc\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"contactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.FileManager.invoke.apply(proxies.FileManager, $.merge([\"JoinGroup\"], $.makeArray(arguments)));\r\n            }\r\n        };\r\n\r\n        proxies.GepChat = this.createHubProxy('GepChat');\r\n        proxies.GepChat.client = {};\r\n        proxies.GepChat.server = {\r\n            broadCast: function (_BroadCastTo, Message, eventDetails, notifyTo, FromContact, FromContactName) {\r\n                /// <summary>Calls the BroadCast method on the server-side GepChat hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"_BroadCastTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+BroadCastTo</param>\r\n                /// <param name=\\\"Message\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                /// <param name=\\\"FromContact\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"FromContactName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.GepChat.invoke.apply(proxies.GepChat, $.merge([\"BroadCast\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            disconnectFromGroup: function (ContactCode, eventDetails, notifyTo) {\r\n                /// <summary>Calls the DisconnectFromGroup method on the server-side GepChat hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"ContactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                return proxies.GepChat.invoke.apply(proxies.GepChat, $.merge([\"DisconnectFromGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            joinGroup: function (ContactCode, eventDetails, notifyTo) {\r\n                /// <summary>Calls the JoinGroup method on the server-side GepChat hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"ContactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                return proxies.GepChat.invoke.apply(proxies.GepChat, $.merge([\"JoinGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            lotJoinGroup: function (ContactCode, eventDetails, notifyTo) {\r\n                /// <summary>Calls the LotJoinGroup method on the server-side GepChat hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"ContactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"eventDetails\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails</param>\r\n                /// <param name=\\\"notifyTo\\\" type=\\\"Object\\\">Server side type is GEP.Cumulus.NotificationHub.Entites.EventDetails+NotifyTo</param>\r\n                return proxies.GepChat.invoke.apply(proxies.GepChat, $.merge([\"LotJoinGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            sendMessage: function (FromContact, Message, ToGroup, FromContactName) {\r\n                /// <summary>Calls the SendMessage method on the server-side GepChat hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"FromContact\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"Message\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"ToGroup\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"FromContactName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.GepChat.invoke.apply(proxies.GepChat, $.merge([\"SendMessage\"], $.makeArray(arguments)));\r\n            }\r\n        };\r\n\r\n        proxies.GEPNotifications = this.createHubProxy('GEPNotifications');\r\n        proxies.GEPNotifications.client = {};\r\n        proxies.GEPNotifications.server = {\r\n            disconnectFromGroup: function (ContactCode) {\r\n                /// <summary>Calls the DisconnectFromGroup method on the server-side GEPNotifications hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"ContactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.GEPNotifications.invoke.apply(proxies.GEPNotifications, $.merge([\"DisconnectFromGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            joinGroup: function (ContactCode) {\r\n                /// <summary>Calls the JoinGroup method on the server-side GEPNotifications hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"ContactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.GEPNotifications.invoke.apply(proxies.GEPNotifications, $.merge([\"JoinGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            sendReadMailNotification: function (ContactCode, RowKey, PartitionKey) {\r\n                /// <summary>Calls the SendReadMailNotification method on the server-side GEPNotifications hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"ContactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"RowKey\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"PartitionKey\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.GEPNotifications.invoke.apply(proxies.GEPNotifications, $.merge([\"SendReadMailNotification\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            sentMailNotification: function (ContactCode, Message) {\r\n                /// <summary>Calls the SentMailNotification method on the server-side GEPNotifications hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"ContactCode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"Message\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.GEPNotifications.invoke.apply(proxies.GEPNotifications, $.merge([\"SentMailNotification\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            updateEmailCount: function (who, count) {\r\n                /// <summary>Calls the UpdateEmailCount method on the server-side GEPNotifications hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"who\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"count\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.GEPNotifications.invoke.apply(proxies.GEPNotifications, $.merge([\"UpdateEmailCount\"], $.makeArray(arguments)));\r\n            }\r\n        };\r\n\r\n        proxies.SourcingEventWithDraw = this.createHubProxy('SourcingEventWithDraw');\r\n        proxies.SourcingEventWithDraw.client = {};\r\n        proxies.SourcingEventWithDraw.server = {\r\n            disconnectFromGroup: function (groupName, contactcode) {\r\n                /// <summary>Calls the DisconnectFromGroup method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"contactcode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"DisconnectFromGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            disqualifyPartner: function (groupName, contactcode, lotId, isQualified) {\r\n                /// <summary>Calls the DisqualifyPartner method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"contactcode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                /// <param name=\\\"lotId\\\" type=\\\"Number\\\">Server side type is System.Int32</param>\r\n                /// <param name=\\\"isQualified\\\" type=\\\"\\\">Server side type is System.Boolean</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"DisqualifyPartner\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            joinGroup: function (groupName, contactcode) {\r\n                /// <summary>Calls the JoinGroup method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"contactcode\\\" type=\\\"Number\\\">Server side type is System.Int64</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"JoinGroup\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            pauseAllEventsOnServiceStop: function (groupName, timerData) {\r\n                /// <summary>Calls the PauseAllEventsOnServiceStop method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"timerData\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"PauseAllEventsOnServiceStop\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            revokePartner: function (groupName, legalCompanyName, revokeComments) {\r\n                /// <summary>Calls the RevokePartner method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"legalCompanyName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"revokeComments\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"RevokePartner\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            revokePartnerCC: function (groupName, legalCompanyName, revokeComments) {\r\n                /// <summary>Calls the RevokePartnerCC method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"legalCompanyName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"revokeComments\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"RevokePartnerCC\"], $.makeArray(arguments)));\r\n            },\r\n\r\n            withDraw: function (groupName, legalCompanyName) {\r\n                /// <summary>Calls the WithDraw method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"legalCompanyName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"WithDraw\"], $.makeArray(arguments)));\r\n            },\r\n            silentwithDraw: function (groupName, legalCompanyName) {\r\n                /// <summary>Calls the WithDraw method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"legalCompanyName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"silentwithDraw\"], $.makeArray(arguments)));\r\n            },\r\n            eventCancelled: function (groupName, legalCompanyName, ContactCode) {\r\n                /// <summary>Calls the WithDraw method on the server-side SourcingEventWithDraw hub.&#10;Returns a jQuery.Deferred() promise.</summary>\r\n                /// <param name=\\\"groupName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                /// <param name=\\\"legalCompanyName\\\" type=\\\"String\\\">Server side type is System.String</param>\r\n                return proxies.SourcingEventWithDraw.invoke.apply(proxies.SourcingEventWithDraw, $.merge([\"eventCancelled\"], $.makeArray(arguments)));\r\n            }\r\n        };\r\n\r\n        return proxies;\r\n    };\r\n\r\n    signalR.hub = $.hubConnection(\"/signalr\", { useDefaultPath: false });\r\n    $.extend(signalR, signalR.hub.createHubProxies());\r\n\r\n}(window.jQuery, window));"],"sourceRoot":"/source/"}